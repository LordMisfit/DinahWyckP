// BASE Spawner
class DDMonsterSpawner : RandomSpawner2 abstract
{
	mixin EvolveMonsters;
	
	int deathtimer;
	string MonsterName;

	// This function is needed for handling boss replacers 
	// [also this is to try to fix the problem of INSTANT effects on the death of spawned "boss" monsters in maps like E2M8/E3M8 so you can try to pick up the bosses' drops before the level ends]
	override void Tick()
	{
		Actor.Tick(); // Actor instead of Super in order to replace the original code added to RandomSpawner instead of adding to it.
		EECreature monstertype;
		if (tracer) monstertype = EECreature(tracer);
		if (tracer == null)
		{
			int dtimermax = 35; 
			if (deathtimer > dtimermax)
			{
				deathtimer++;
				A_BossDeath();
				if (dydudebug_scriptdisplays) Console.Printf("BOSS/BOSSDEATH type RandomSpawner Self-Destroyed/nulled");
				Destroy();
			}
		}
		else
		{
			if (monstertype)
			{
				MonsterName = monstertype.GetClassName();
				if (monstertype.bossdeathactivate)
				{
					deathtimer++;
					int dtimermax = 35;
					if (HellWarrior(tracer)) dtimermax = 40;
					if (FlyingBalrogDVDS(tracer)) dtimermax = 43;
					if (BaronOfHellNew(tracer) ||
							HellKnightNew(tracer) ||
							Belphegor(tracer) ||
							Cybruiser(tracer))
					{
						dtimermax = 48;
					}
					if (ArachnotronNew(tracer) ||
							RailArachnotron(tracer)) 
					{
						dtimermax = 55;
					}
					if (MancubusNew(tracer) ||
							Daedabus(tracer)) 
					{
						dtimermax = 54;
					}
					if (BruiserDemon(tracer)) dtimermax = 74;
					if (CyberDemonNew(tracer) ||
							Annihilator(tracer))
					{
						dtimermax = 120;
					}
					if (SpiderMastermindNew(tracer) ||
							Demolisher(tracer))
					{
						dtimermax = 130;
					}
					if (dydudebug_scriptdisplays) Console.Printf("%s [bossdeathactivate: %d]: %d / %d", MonsterName, monstertype.bossdeathactivate, deathtimer, dtimermax);
					if (deathtimer > dtimermax)
					{
						A_BossDeath();
						if (dydudebug_scriptdisplays) Console.Printf("%s [bossdeathactivate: %d]", MonsterName, monstertype.bossdeathactivate);
						Destroy();
					}
				}
			}
			else
			{
				if (tracer.health <= 0)
				{
					deathtimer++;
					int dtimermax = 35;
					if (HellWarrior(tracer)) dtimermax = 40;
					if (FlyingBalrogDVDS(tracer)) dtimermax = 43;
					if (BaronOfHellNew(tracer) ||
							HellKnightNew(tracer) ||
							Belphegor(tracer) ||
							Cybruiser(tracer))
					{
						dtimermax = 48;
					}
					if (ArachnotronNew(tracer) ||
							RailArachnotron(tracer)) 
					{
						dtimermax = 55;
					}
					if (MancubusNew(tracer) ||
							Daedabus(tracer)) 
					{
						dtimermax = 54;
					}
					if (BruiserDemon(tracer)) dtimermax = 74;
					if (CyberDemonNew(tracer) ||
							Annihilator(tracer))
					{
						dtimermax = 120;
					}
					if (SpiderMastermindNew(tracer) ||
							Demolisher(tracer))
					{
						dtimermax = 130;
					}
					if (dydudebug_scriptdisplays) Console.Printf("BOSS/BOSSDEATH type RandomSpawner: %d / %d", deathtimer, dtimermax);
					if (deathtimer > dtimermax)
					{
						A_BossDeath();
						if (dydudebug_scriptdisplays) Console.Printf("BOSS/BOSSDEATH type RandomSpawner Self-Destroyed/nulled");
						Destroy();
					}
				}
			}
		}
	}
	
	// Tries to filter the DD monsters based on their origin game, if the filters are set specifically. V:
	protected bool CheckDDActorType(string classname, int attempt)
	{
		if (dydudebug_monsterspawns) Console.Printf("classname: %s, attempts: %d", classname, attempt);
		int ddfilter = exex_ddmonstertypes;
		if (exex_ddmonstertypes == 0) ddfilter = random(1,7);
		if (ddfilter & 1) // Dynamite Duchess [1] Monsters
		{
			if (classname ~== "Hammerduck") return true;
			if (classname ~== "Planter") return true;
			if (classname ~== "PlanterBird") return true;
			if (classname ~== "Manchineel") return true;
			if (classname ~== "Manchineel_Flipped") return true;
			if (classname ~== "Centaurion") return true;
			if (classname ~== "CentaurionFuzzy") return true;
			if (classname ~== "NightmareCentaurion") return true;
			if (classname ~== "CentaurionSgt") return true;
			if (classname ~== "NightmareCentaurionSgt") return true;
			if (classname ~== "PuddingDog") return true;
			if (classname ~== "PuddingPup") return true;
			if (classname ~== "Vitriola") return true;
			if (classname ~== "VitriolaFuzzy") return true;
			if (classname ~== "NightmareVitriola") return true;
			if (classname ~== "Killetante") return true;
			if (classname ~== "KilletanteSoloist") return true;
			if (classname ~== "Muddernaut") return true;
			if (classname ~== "Jugger") return true;
			if (classname ~== "Juggette") return true;
			if (classname ~== "ReelHeel") return true;
			if (classname ~== "ReelHeelNew") return true;
			if (classname ~== "ReelHeelFuzzy") return true;
			if (classname ~== "NightmareReelHeel") return true;
			if (classname ~== "SpiderCenser") return true;
			if (classname ~== "Galgoyle") return true;
			if (classname ~== "GalgoyleFuzzy") return true;
			if (classname ~== "Galgoyle_Hide") return true;
			if (classname ~== "NightmareGalgoyle") return true;
			if (classname ~== "Shillfish") return true;
			if (classname ~== "ShillfishFuzzy") return true;
			if (classname ~== "Shillfish_Fly") return true;
			if (classname ~== "Shillfish_FlyFuzzy") return true;
			if (classname ~== "Bellefish_Fly") return true;
			if (classname ~== "Bellefish_FlyFuzzy") return true;
			if (classname ~== "Bellefish") return true;
			if (classname ~== "NightmareBellefish_Fly") return true;
			if (classname ~== "RoseMother") return true;
			if (classname ~== "RoseMotherClone") return true;
			if (classname ~== "GameMother") return true;
			if (classname ~== "GameMotherClone") return true;
			if (classname ~== "GlobeMother") return true;
			if (classname ~== "GlobeMotherClone") return true;
			if (classname ~== "MossMother") return true;
			if (classname ~== "MossMotherClone") return true;
			if (classname ~== "SphinxMother") return true;
			if (classname ~== "SphinxMotherClone") return true;
			if (classname ~== "HandMotherVac") return true;
			if (classname ~== "HandMotherVacClone") return true;
			if (classname ~== "HandmotherPhaseA") return true;
			if (classname ~== "HandmotherPhaseAClone") return true;
			if (classname ~== "HandmotherPhaseB") return true;
			if (classname ~== "HandmotherPhaseBClone") return true;
			if (classname ~== "HandmotherPhaseC") return true;
			if (classname ~== "HandmotherPhaseCClone") return true;
			if (classname ~== "SugarSnake") return true;
			if (classname ~== "MiniSugarSnake") return true;
		}
		if (ddfilter & 2) // Appetite for Detention [2] Monsters
		{
			if (classname ~== "Teacher_Krag") return true;
			if (classname ~== "Teacher_KragClone") return true;
			if (classname ~== "Teacher_Quis") return true;
			if (classname ~== "Teacher_QuisClone") return true;
			if (classname ~== "QuisFake") return true;
			if (classname ~== "QuisFakeClone") return true;
			if (classname ~== "Teacher_Lauritz") return true;
			if (classname ~== "Teacher_LauritzClone") return true;
			if (classname ~== "Teacher_Jorg") return true;
			if (classname ~== "Teacher_JorgClone") return true;
			if (classname ~== "Nurse") return true;
			if (classname ~== "NurseFuzzy") return true;
			if (classname ~== "NightmareNurse") return true;
			if (classname ~== "Teacher_Vokter") return true;
			if (classname ~== "Teacher_VokterClone") return true;
			if (classname ~== "VokterCannon") return true;
			if (classname ~== "VokterCannon_Flipped") return true;
			if (classname ~== "JorgSphereCannon") return true;
			if (classname ~== "JorgSphereCannonClone") return true;
		}
		if (ddfilter & 4) // Carnival of Souls [3] Monsters
		{
			if (classname ~== "EvilDinah") return true;
			if (classname ~== "EvilDinahEE") return true;
			if (classname ~== "FractalChicken") return true;
			if (classname ~== "SpectralFractalChicken") return true;
			if (classname ~== "FractalChick") return true;
			if (classname ~== "SpectralFractalChick") return true;
			if (classname ~== "FractalHen") return true;
			if (classname ~== "SpectralFractalHen") return true;
			if (classname ~== "CremeDeBratte") return true;
			if (classname ~== "CremeDeBratteFuzzy") return true;
			if (classname ~== "NightmareCremeDeBratte") return true;
			if (classname ~== "CremeDeBratte_Torched") return true;
			if (classname ~== "CremeDeBratte_TorchedFuzzy") return true;
			if (classname ~== "NightmareCremeDeBratte_Torched") return true;
			if (classname ~== "Reaper") return true;
			if (classname ~== "Devil") return true;
			if (classname ~== "PushyAngel") return true;
			if (classname ~== "PushyArchAngel") return true;
			if (classname ~== "Forsaken") return true;
			if (classname ~== "Forsaken_Quisling") return true;
			if (classname ~== "Tempest_Boss") return true;
			if (classname ~== "Tempest_BossClone") return true;
			if (classname ~== "Delila_Boss") return true;
			if (classname ~== "Delila_BossClone") return true;
		}
		return false;
	}
	
	protected bool CanFitHere(Class<Actor> actorClass) 
	{
		let actor = Spawn(actorClass, Pos, NO_REPLACE);
		
		if (actor == null)
			return false;
		else 
		{
			let result = actor.TestMobjLocation();
			actor.ClearCounters();
			actor.Destroy();
			return result;
		}
	}

	protected bool CanFitHereDD(Class<Actor> actorClass) 
	{
		if (exex_ddafdmonstersrandom && exex_ddafdmonsterschance >= 512) return true;
		else
		{
			let actor = Spawn(actorClass, Pos, NO_REPLACE);
			
			if (actor == null)
				return false;
			else 
			{
				let result = actor.TestMobjLocation();
				actor.ClearCounters();
				actor.Destroy();
				return result;
			}
		}
	}
	
	override void PostSpawn(actor spawned)
	{
		super.PostSpawn(spawned);
		if (exex_ddafdmonstersrandom && exex_ddafdmonsterschance >= 512)
		{
			if (DDOrigCreature(spawned) || DDOrigBoss(spawned))
			{
				bool fits = false;
				int attempts;
				while (!fits && attempts <= 32)
				{
					if (spawned.TestMobjLocation()) fits = true;
					else
					{
						spawned.A_SetSize((radius * 0.8),(height * 0.8),false);
						spawned.A_SetScale((scale.x * 0.8),(scale.y * 0.8));
						attempts++;
					}
				}
			}
		}
	}
}

// Doom Monsters
class ZombiemanSpawner : DDMonsterSpawner replaces Zombieman
{
	Default
	{
		//$Sprite "RNMSA0"
		Radius 20;
		Height 56;
	}
	
	override Name ChooseSpawn()
	{
		string classname = "ZombiemanNew";
		string result = classname;
		bool spawndoomtype;
		
		if (random(1,256) <= exex_ddafdmonsterschance && exex_ddafdmonstersrandom && exex_ddmonstertypes > 0)
		{
			spawndoomtype = false;
			bool success;
			bool success2;
			int numtimes;
			
			while(!success && !success2)
			{
				if (random(1,1024) <= 1) 
				{
					classname = "EvilDinahEE";
				}
				else
				if (random(1,256) <= 1) 
				{
					if (random(1,256) <= 1) classname = "PushyArchAngel";
														 else classname = "PushyAngel";
				}
				else
				if (random(1,32) <= 1) 
				{
					if (random(1,8) <= 1) classname = "ManchineelEE_Ceiling";
													 else classname = "ManchineelEE";
				}
				else
				if (random(1,32) <= 1) 
				{
					if (random(1,8) <= 1) classname = "FractalChicken";
													else classname = "FractalChick";
				}
				else
				if (random(1,48) <= 1) 
				{
					if (random(1,16) <= 1) classname = "CremeDeBratte_Torched";
														else classname = "CremeDeBratte";
				}
				else
				if (random(1,64) <= 1) 
				{
					classname = "Forsaken";
				}
				else
				{
					if (random(1,8) <= 7) classname = "Hammerduck";
					else
					{
						if (random(1,8) <= 2) classname = "Reaper";
						else
						{
							classname = "PlanterBird";
							if (random(1,4) == 1) classname = "Planter";
						}
					}
				}
				success = CheckDDActorType(classname,numtimes);
				if (success)
				{
					if (CanFitHereDD(classname)) 
					{
						result = classname;
						success2 = true;
						if (dydudebug_monsterspawns) Console.Printf("classname %s fits [attempt #%d]", classname, numtimes);
					}
				}
				if (dydudebug_monsterspawns) Console.Printf("success: %d, success2: %d", success, success2);
				numtimes++;
				if (numtimes >= 64)
				{
					if (exex_ddafdmonsterschance >= 512)
					{
						if (dydudebug_monsterspawns) Console.Printf("\c[red]Forced a DD Spawn that might not fit due to DD chance being 512+");
						result = classname;
						spawndoomtype = false;
						break;
					}
					else
					{
						if (dydudebug_monsterspawns) Console.Printf("\c[red]Could Not Spawn DD-Type Enemy after 64 attempts, breaking script to not lock up the game. V:");
						spawndoomtype = true;
						break;
					}
				}
			}
		}
		else spawndoomtype = true;
		
		if (exex_monsterevolutions && spawndoomtype)
		{
			if (random(1,6) <= 1)
			{
				if (random(1,6) <= 1)
				{
					if (random(1,2) <= 1) classname = "RepeaterZombie";
													 else classname = "KarasawaGuy";
					if (CanFitHere(classname)) result = classname;
				}
				else
				{
					if (random(1,2) <= 1) classname = "RocketLauncherGuy";
													 else classname = "PlasmaGuy";
					if (CanFitHere(classname)) result = classname;
				}
			}
			else
			{
				if (random(1,256) <= 4)
				{
					classname = "ShotgunGuySpawner";
					if (CanFitHere(classname)) result = classname;
				}
				else
				if (random(1,256) <= 8)
				{
					classname = "SuicideBomber";
					if (CanFitHere(classname)) result = classname;
				}
				else 
				if (random(1,256) <= 4)
				{
					classname = "HellClericDVDS";
					if (CanFitHere(classname)) result = classname;
				}
			}
		}
		
		if (dydudebug_monsterspawns) Console.Printf("classname [%s]: %s", GetClassName(), classname);
		
		return result;
	}
}
class StealthZombiemanSpawner : ZombiemanSpawner replaces StealthZombieman { }

// Shotgun Guy
class ShotgunGuySpawner : DDMonsterSpawner replaces ShotgunGuy
{
	Default
	{
		//$Sprite "RNMSB0"
		Radius 20;
		Height 56;
	}
	
	override Name ChooseSpawn()
	{
		string classname = "ShotgunGuyNew";
		string result = classname;
		bool spawndoomtype;

		if (random(1,256) <= exex_ddafdmonsterschance && exex_ddafdmonstersrandom && exex_ddmonstertypes > 0)
		{
			spawndoomtype = false;
			bool success;
			bool success2;
			int numtimes;
			
			while(!success && !success2)
			{
				if (random(1,1024) <= 1) 
				{
					classname = "EvilDinahEE";
				}
				else
				if (random(1,256) <= 1) 
				{
					if (random(1,256) <= 1) classname = "PushyArchAngel";
														 else classname = "PushyAngel";
				}
				else
				if (random(1,32) <= 1) 
				{
					if (random(1,8) <= 1) classname = "ManchineelEE_Ceiling";
													 else classname = "ManchineelEE";
				}
				else
				if (random(1,32) <= 1) 
				{
					if (random(1,8) <= 1) classname = "FractalChicken";
					else classname = "FractalChick";
				}
				else
				if (random(1,48) <= 1) 
				{
					if (random(1,16) <= 1) classname = "CremeDeBratte_Torched";
														else classname = "CremeDeBratte";
				}
				else
				if (random(1,64) <= 1) 
				{
					classname = "Forsaken";
				}
				else
				{
					if (random(1,8) <= 7) classname = "Hammerduck";
					else
					{
						if (random(1,8) <= 2) classname = "Reaper";
						else
						{
							classname = "PlanterBird";
							if (random(1,4) == 1) classname = "Planter";
						}
					}
				}
				
				success = CheckDDActorType(classname,numtimes);
				if (success)
				{
					if (CanFitHereDD(classname)) 
					{
						result = classname;
						success2 = true;
						if (dydudebug_monsterspawns) Console.Printf("classname %s fits [attempt #%d]", classname, numtimes);
					}
				}
				if (dydudebug_monsterspawns) Console.Printf("success: %d, success2: %d", success, success2);
				numtimes++;
				if (numtimes >= 64)
				{
					if (exex_ddafdmonsterschance >= 512)
					{
						if (dydudebug_monsterspawns) Console.Printf("\c[red]Forced a DD Spawn that might not fit due to DD chance being 512+");
						result = classname;
						spawndoomtype = false;
						break;
					}
					else
					{
						if (dydudebug_monsterspawns) Console.Printf("\c[red]Could Not Spawn DD-Type Enemy after 64 attempts, breaking script to not lock up the game. V:");
						spawndoomtype = true;
						break;
					}
				}
			}
		}
		else spawndoomtype = true;
		
		if (exex_monsterevolutions && spawndoomtype)
		{
			if (random(1,6) <= 1)
			{
				if (random(1,6) <= 1) classname = "FemaleRailZombie";
													else classname = "SuperShotgunGuy";
				if (CanFitHere(classname)) result = classname;
			}
			else
			{
				if (random(1,256) <= 4)
				{
					classname = "ZombiemanSpawner";
					if (CanFitHere(classname)) result = classname;
				}
				else
				if (random(1,256) <= 8)
				{
					classname = "SuicideBomber";
					if (CanFitHere(classname)) result = classname;
				}
				else
				if (random(1,256) <= 8)
				{
					classname = "HellClericDVDS";
					if (CanFitHere(classname)) result = classname;
				}
			}
		}
		
		if (dydudebug_monsterspawns) Console.Printf("classname [%s]: %s", GetClassName(), classname);
		return result;
	}
}
class StealthShotgunGuySpawner : ShotgunGuySpawner replaces StealthShotgunGuy { }

// Chaingun Guy
class ChaingunGuySpawner : DDMonsterSpawner replaces ChaingunGuy
{
	Default
	{
		//$Sprite "RNMSC0"
		Radius 20;
		Height 56;
	}
	
	override Name ChooseSpawn()
	{
		string classname = "ChaingunGuyNew";
		string result = classname;
		bool spawndoomtype;

		if (random(1,256) <= exex_ddafdmonsterschance && exex_ddafdmonstersrandom)
		{
			spawndoomtype = false;
			bool success;
			bool success2;
			int numtimes;
			
			while(!success && !success2)
			{
				if (random(1,1024) <= 1) 
				{
					classname = "EvilDinahEE";
				}
				else
				if (random(1,256) <= 1) 
				{
					if (random(1,256) <= 1) classname = "PushyArchAngel";
														 else classname = "PushyAngel";
				}
				else
				if (random(1,32) <= 1) 
				{
					if (random(1,8) <= 1) classname = "ManchineelEE_Ceiling";
													 else classname = "ManchineelEE";
				}
				else
				if (random(1,32) <= 1) 
				{
					if (random(1,8) <= 1) classname = "FractalChicken";
					else classname = "FractalChick";
				}
				else
				if (random(1,48) <= 1) 
				{
					if (random(1,16) <= 1) classname = "CremeDeBratte_Torched";
														else classname = "CremeDeBratte";
				}
				else
				if (random(1,64) <= 1) 
				{
					classname = "Forsaken";
				}
				else
				{
					if (random(1,8) <= 7)
					{
						if (random(1,8) <= 3) classname = "Reaper";
						else
						{
							classname = "PlanterBird";
							if (random(1,8) == 1) classname = "Planter";
						}
					}
					else classname = "Hammerduck";
				}
				
				success = CheckDDActorType(classname,numtimes);
				if (success)
				{
					if (CanFitHereDD(classname)) 
					{
						result = classname;
						success2 = true;
						if (dydudebug_monsterspawns) Console.Printf("classname %s fits [attempt #%d]", classname, numtimes);
					}
				}
				if (dydudebug_monsterspawns) Console.Printf("success: %d, success2: %d", success, success2);
				numtimes++;
				if (numtimes >= 64)
				{
					if (exex_ddafdmonsterschance >= 512)
					{
						if (dydudebug_monsterspawns) Console.Printf("\c[red]Forced a DD Spawn that might not fit due to DD chance being 512+");
						result = classname;
						spawndoomtype = false;
						break;
					}
					else
					{
						if (dydudebug_monsterspawns) Console.Printf("\c[red]Could Not Spawn DD-Type Enemy after 64 attempts, breaking script to not lock up the game. V:");
						spawndoomtype = true;
						break;
					}
				}
			}
		}
		else spawndoomtype = true;
		
		if (exex_monsterevolutions && spawndoomtype)
		{
			if (random(1,6) <= 1)
			{
				if (random(1,6) <= 1) classname = "BFGGuy";
													else classname = "Minigunner";
				if (CanFitHere(classname)) result = classname;
			}
			else
			{
				if (random(1,256) <= 4) 
				{
					if (random(1,2) == 1) classname = "ShotgunGuySpawner"; 
													 else classname = "ZombiemanSpawner";
					if (CanFitHere(classname)) result = classname;
				} // Gives an VERY-RARE chance for a ChaingunGuy to use Zombieman or ShotgunGuy spawns instead. :V
				else
				if (random(1,256) <= 8)
				{
					classname = "SuicideBomber";
					if (CanFitHere(classname)) result = classname;
				}
				else
				if (random(1,256) <= 4)
				{
					classname = "HellClericDVDS";
					if (CanFitHere(classname)) result = classname;
				}
			}
		}
		
		if (dydudebug_monsterspawns) Console.Printf("classname [%s]: %s", GetClassName(), classname);
		return result;
	}
}
class StealthChaingunGuySpawner : ChaingunGuySpawner replaces StealthChaingunGuy { }

// Wolfenstein SS
class WolfensteinSSSpawner : DDMonsterSpawner replaces WolfensteinSS
{
	Default
	{
		//$Sprite "RNMSC0"
		Radius 20;
		Height 56;
	}
	
	override Name ChooseSpawn()
	{
		string classname = "WolfensteinSSNew";
		string result = classname;
		bool spawndoomtype;
		
		if (exex_ddafdmonstersrandom && exex_ddafdmonsterschance >= 512)
		{
			spawndoomtype = false;
			bool success;
			bool success2;
			int numtimes;
			
			while(!success && !success2)
			{
				if (random(1,1024) <= 1) 
				{
					classname = "EvilDinahEE";
				}
				else
				if (random(1,256) <= 1) 
				{
					if (random(1,256) <= 1) classname = "PushyArchAngel";
														 else classname = "PushyAngel";
				}
				else
				if (random(1,32) <= 1) 
				{
					if (random(1,8) <= 1) classname = "ManchineelEE_Ceiling";
													 else classname = "ManchineelEE";
				}
				else
				if (random(1,32) <= 1) 
				{
					if (random(1,8) <= 1) classname = "FractalChicken";
					else classname = "FractalChick";
				}
				else
				if (random(1,48) <= 1) 
				{
					if (random(1,16) <= 1) classname = "CremeDeBratte_Torched";
														else classname = "CremeDeBratte";
				}
				else
				if (random(1,64) <= 1) 
				{
					classname = "Forsaken";
				}
				else
				{
					if (random(1,8) <= 7)
					{
						if (random(1,8) <= 3) classname = "Reaper";
						else
						{
							classname = "PlanterBird";
							if (random(1,8) == 1) classname = "Planter";
						}
					}
					else classname = "Hammerduck";
				}
				
				success = CheckDDActorType(classname,numtimes);
				if (success)
				{
					if (CanFitHereDD(classname)) 
					{
						result = classname;
						success2 = true;
						if (dydudebug_monsterspawns) Console.Printf("classname %s fits [attempt #%d]", classname, numtimes);
					}
				}
				if (dydudebug_monsterspawns) Console.Printf("success: %d, success2: %d", success, success2);
				numtimes++;
				if (numtimes >= 64)
				{
					if (exex_ddafdmonsterschance >= 512)
					{
						if (dydudebug_monsterspawns) Console.Printf("\c[red]Forced a DD Spawn that might not fit due to DD chance being 512+");
						result = classname;
						spawndoomtype = false;
						break;
					}
					else
					{
						if (dydudebug_monsterspawns) Console.Printf("\c[red]Could Not Spawn DD-Type Enemy after 64 attempts, breaking script to not lock up the game. V:");
						spawndoomtype = true;
						break;
					}
				}
			}
		}
		else spawndoomtype = true;
		
		if (dydudebug_monsterspawns) Console.Printf("classname [%s]: %s", GetClassName(), classname);
		return result;
	}
}

// Imp
class DoomImpSpawner : DDMonsterSpawner replaces DoomImp
{
	Default
	{
		//$Sprite "RNMSD0"
		Radius 20;
		Height 56;
	}
	override Name ChooseSpawn()
	{
		string classname = "DoomImpNew";
		string result = classname;
		bool spawndoomtype;

		if (random(1,256) <= exex_ddafdmonsterschance && exex_ddafdmonstersrandom)
		{
			spawndoomtype = false;
			bool success;
			bool success2;
			int numtimes;
			
			while(!success && !success2)
			{
				if (random(1,1024) <= 1)
				{
					classname = "EvilDinahEE";
				}
				else
				if (random(1,16) <= 1) 
				{
					if (random(1,8) <= 1) classname = "ManchineelEE_Ceiling";
													 else classname = "ManchineelEE";
				}
				else
				if (random(1,20) <= 1) 
				{
					if (random(1,6) <= 1) classname = "Vitriola";
													 else classname = "Galgoyle";
				}
				else
				if (random(1,24) <= 1) 
				{
					if (random(1,8) <= 1) classname = "FractalChicken";
					else classname = "FractalChick";
				}
				else
				if (random(1,36) <= 1) 
				{
					if (random(1,16) <= 1) classname = "CremeDeBratte_Torched";
														else classname = "CremeDeBratte";
				}
				else
				if (random(1,36) <= 1) classname = "Forsaken";
				else
				{
					if (random(1,8) <= 7)
					{
						if (random(1,8) <= random(3,5)) classname = "Reaper";
						else
						{
							classname = "PlanterBird";
							if (random(1,8) <= 2) classname = "Planter";
						}
					}
					else classname = "Hammerduck";
				}
				
				success = CheckDDActorType(classname,numtimes);
				if (success)
				{
					if (CanFitHereDD(classname)) 
					{
						result = classname;
						success2 = true;
						if (dydudebug_monsterspawns) Console.Printf("classname %s fits [attempt #%d]", classname, numtimes);
					}
				}
				if (dydudebug_monsterspawns) Console.Printf("success: %d, success2: %d", success, success2);
				numtimes++;
				if (numtimes >= 64)
				{
					if (exex_ddafdmonsterschance >= 512)
					{
						if (dydudebug_monsterspawns) Console.Printf("\c[red]Forced a DD Spawn that might not fit due to DD chance being 512+");
						result = classname;
						spawndoomtype = false;
						break;
					}
					else
					{
						if (dydudebug_monsterspawns) Console.Printf("\c[red]Could Not Spawn DD-Type Enemy after 64 attempts, breaking script to not lock up the game. V:");
						spawndoomtype = true;
						break;
					}
				}
			}
		}
		else spawndoomtype = true;
		
		if (exex_monsterevolutions && spawndoomtype)
		{
			if (random(1,256) <= 8)
			{
				classname = "HellClericDVDS";
				if (CanFitHere(classname)) result = classname;
			}
			else
			{
				if (random(1,6) <= 1)
				{
					if (random(1,6) <= 1)
					{
						classname = "NetherDarkImp";
						if (CanFitHere(classname)) result = classname;
					}
					else
					{
						int type = random(1,3);
						if (type <= 1) classname = "STDarkImp";
						if (type == 2) classname = "DarkImp";
						if (type >= 3) classname = "VoidDarkImp";
						if (CanFitHere(classname)) result = classname;
					}
				}
			}
		}
		
		if (dydudebug_monsterspawns) Console.Printf("classname [%s]: %s", GetClassName(), classname);
		return result;
	}
}
class StealthDoomImpSpawner : DoomImpSpawner replaces StealthDoomImp { }

// Demon
class DemonSpawner : DDMonsterSpawner replaces Demon
{
	Default
	{
		//$Sprite "RNMSE0"
		Radius 30;
		Height 56;
	}

	override Name ChooseSpawn()
	{
		string classname = "DemonNew";
		string result = classname;
		bool spawndoomtype;

		if (random(1,256) <= exex_ddafdmonsterschance && exex_ddafdmonstersrandom)
		{
			spawndoomtype = false;
			bool success;
			bool success2;
			int numtimes;
			
			while(!success && !success2)
			{
				if (random(1,1024) <= 1)
				{
					classname = "EvilDinahEE";
				}
				else
				if (random(1,16) <= 1)
				{
					if (random(1,3) <= 1) classname = "Vitriola";
													 else classname = "Galgoyle";
				}
				else
				if (random(1,16) <= 1) 
				{
					if (random(1,4) <= 1) classname = "FractalChicken";
													else classname = "FractalChick";
				}
				else
				if (random(1,random(9,11)) <= random(1,3)) 
				{
					if (random(1,16) <= 1)
					{
						if (random(1,2) <= 1) classname = "Forsaken_Quisling";
														else classname = "Forsaken_Jorgensen";
					}
					else
					{
						classname = "Forsaken";
					}
				}
				else
				{
					if (random(1,8) <= random(5,6))
					{
						if (random(1,2) == 1)
						{
							if (random(1,8) <= (random(2,3) + (Skill * 0.5))) classname = "CentaurionSgt";
																													else classname = "Centaurion";
						}
						else
						{
							if (random(1,2) <= 1)
							{
								if (random(1,16) <= 1) 
								{
									if (random(1,8) <= 1) classname = "Shillfish_Fly";
									else classname = "Shillfish";
								}
								else classname = "Bellefish_Fly";
							}
							else
							{
								if (random(1,16) <= (1 + (Skill * 0.75))) classname = "CremeDeBratte_Torched";
																										 else classname = "CremeDeBratte";
							}
						}
					}
					else
					{
						if (random(1,2) <= 1) classname = "ReelHeelNew";
														 else classname = "Nurse";
					}
				}
				
				success = CheckDDActorType(classname,numtimes);
				if (success)
				{
					if (CanFitHereDD(classname)) 
					{
						result = classname;
						success2 = true;
						if (dydudebug_monsterspawns) Console.Printf("classname %s fits [attempt #%d]", classname, numtimes);
					}
				}
				if (dydudebug_monsterspawns) Console.Printf("success: %d, success2: %d", success, success2);
				numtimes++;
				if (numtimes >= 64)
				{
					if (exex_ddafdmonsterschance >= 512)
					{
						if (dydudebug_monsterspawns) Console.Printf("\c[red]Forced a DD Spawn that might not fit due to DD chance being 512+");
						result = classname;
						spawndoomtype = false;
						break;
					}
					else
					{
						if (dydudebug_monsterspawns) Console.Printf("\c[red]Could Not Spawn DD-Type Enemy after 64 attempts, breaking script to not lock up the game. V:");
						spawndoomtype = true;
						break;
					}
				}
			}
		}
		else spawndoomtype = true;
		
		if (exex_monsterevolutions && spawndoomtype)
		{
			if (random(1,256) <= 16)
			{
				classname = "HellClericDVDS";
				if (CanFitHere(classname)) result = classname;
			}
			else
			{
				if (random(1,6) <= 1)
				{
					if (random(1,5) <= 1)
					{
						classname = "ChaingunDemon";
						if (CanFitHere(classname)) result = classname;
					}
					else
					{
						classname = "BloodDemon";
						if (CanFitHere(classname)) result = classname;
					}
				}
			}
		}
		
		if (dydudebug_monsterspawns) Console.Printf("classname [%s]: %s", GetClassName(), classname);
		return result;
	}
}

class SpectreSpawner : DDMonsterSpawner replaces Spectre
{
	Default
	{
		//$Sprite "RNMSF0"
		Radius 30;
		Height 56;
	}

	override Name ChooseSpawn()
	{
		string classname = "SpectreNew";
		string result = classname;
		bool spawndoomtype;

		if (random(1,256) <= exex_ddafdmonsterschance && exex_ddafdmonstersrandom)
		{
			spawndoomtype = false;
			bool success;
			bool success2;
			int numtimes;
			
			while(!success && !success2)
			{
				if (random(1,1024) <= 1)
				{
					classname = "EvilDinahEEFuzzy";
				}
				else
				if (random(1,16) <= 1) 
				{
					if (random(1,3) <= 1) classname = "VitriolaFuzzy";
													 else classname = "GalgoyleFuzzy";
				}
				else
				if (random(1,16) <= 1) 
				{
					if (random(1,4) <= 1) classname = "SpectralFractalChicken";
													else classname = "SpectralFractalChick";
				}
				else
				if (random(1,random(9,11)) <= random(1,3)) 
				{
					if (random(1,16) <= 1)
					{
						if (random(1,2) <= 1) classname = "Forsaken_Quisling";
														else classname = "Forsaken_Jorgensen";
					}
					else
					{
						classname = "Forsaken";
					}
				}
				else
				{
					if (random(1,8) <= random(5,6))
					{
						if (random(1,2) == 1)
						{
							if (random(1,8) <= (random(2,3) + (Skill * 0.5))) classname = "CentaurionSgtFuzzy";
																													else classname = "CentaurionFuzzy";
						}
						else
						{
							if (random(1,2) <= 1)
							{
								if (random(1,16) <= 1) 
								{
									if (random(1,8) <= 1) classname = "Shillfish_FlyFuzzy";
																	else classname = "ShillfishFuzzy";
								}
								else classname = "Bellefish_FlyFuzzy";
							}
							else
							{
								if (random(1,16) <= (1 + (Skill * 0.75))) classname = "CremeDeBratte_TorchedFuzzy";
																										else classname = "CremeDeBratteFuzzy";
							}
						}
					}
					else
					{
						if (random(1,1) <= 2) classname = "ReelHeelFuzzy";
														else classname = "NurseFuzzy";
					}
				}
				
				success = CheckDDActorType(classname,numtimes);
				if (success)
				{
					if (CanFitHereDD(classname)) 
					{
						result = classname;
						success2 = true;
						if (dydudebug_monsterspawns) Console.Printf("classname %s fits [attempt #%d]", classname, numtimes);
					}
				}
				if (dydudebug_monsterspawns) Console.Printf("success: %d, success2: %d", success, success2);
				numtimes++;
				if (numtimes >= 64)
				{
					if (exex_ddafdmonsterschance >= 512)
					{
						if (dydudebug_monsterspawns) Console.Printf("\c[red]Forced a DD Spawn that might not fit due to DD chance being 512+");
						result = classname;
						spawndoomtype = false;
						break;
					}
					else
					{
						if (dydudebug_monsterspawns) Console.Printf("\c[red]Could Not Spawn DD-Type Enemy after 64 attempts, breaking script to not lock up the game. V:");
						spawndoomtype = true;
						break;
					}
				}
			}
		}
		else spawndoomtype = true;
		
		if (exex_monsterevolutions && spawndoomtype)
		{
			if (random(1,256) <= 16)
			{
				classname = "HellClericSpectral";
				if (CanFitHere(classname)) result = classname;
			}
			else
			{
				if (random(1,6) <= 1)
				{
					if (random(1,5) <= 1)
					{
						classname = "ChaingunSpectre";
						if (CanFitHere(classname)) result = classname;
					}
					else
					{
						classname = "BloodSpectre";
						if (CanFitHere(classname)) result = classname;
					}
				}
			}
		}
		
		if (dydudebug_monsterspawns) Console.Printf("classname [%s]: %s", GetClassName(), classname);
		return result;
	}
}
class StealthDemonSpawner : DemonSpawner replaces StealthDemon { }

// Revenant
class RevenantSpawner : DDMonsterSpawner replaces Revenant
{
	Default
	{
		//$Sprite "RNMSG0"
		Radius 20;
		Height 56;
	}
	override Name ChooseSpawn()
	{
		string classname = "RevenantNew";
		string result = classname;
		bool spawndoomtype;

		if (random(1,256) <= exex_ddafdmonsterschance && exex_ddafdmonstersrandom)
		{
			spawndoomtype = false;
			bool success;
			bool success2;
			int numtimes;
			
			while(!success && !success2)
			{
				if (random(1,1024) <= 1)
				{
					classname = "EvilDinahEE";
				}
				else
				if (random(1,8) <= 1) 
				{
					if (random(1,8) <= (1 + (Skill * 0.75))) classname = "CremeDeBratte_Torched";
																							else classname = "CremeDeBratte";
				}
				else
				if (random(1,8) <= 1) 
				{
					if (random(1,8) <= 1) classname = "FractalChick";
													 else classname = "FractalChicken";
				}
				else
				{
					int user_type = random(1,21);
					if (user_type >= 1 && user_type <= 8)
					{
						classname = "Killetante";
						if (random(1,32) <= 1) classname = "KilletanteSoloist";
					}
					if (user_type >= 9 && user_type <= 12) classname = "ReelHeelNew";
					if (user_type >= 13 && user_type <= 16) classname = "Nurse";
					if (user_type >= 17 && user_type <= 20) 
					{
						if (random(1,32) <= 1) classname = "Jugger";
															else classname = "Juggette";
					}
					if (user_type == 21) 
					{
						if (random(1,4) <= 1)
						{
							if (random(1,2) <= 1) classname = "Forsaken_Quisling";
															 else classname = "Forsaken_Jorgensen";
						}
						else
						{
							if (random(1,32) <= 1) classname = "PushyArchAngel";
																else classname = "PushyAngel";
						}
					}
				}
				
				success = CheckDDActorType(classname,numtimes);
				if (success)
				{
					if (CanFitHereDD(classname)) 
					{
						result = classname;
						success2 = true;
						if (dydudebug_monsterspawns) Console.Printf("classname %s fits [attempt #%d]", classname, numtimes);
					}
				}
				if (dydudebug_monsterspawns) Console.Printf("success: %d, success2: %d", success, success2);
				numtimes++;
				if (numtimes >= 64)
				{
					if (exex_ddafdmonsterschance >= 512)
					{
						if (dydudebug_monsterspawns) Console.Printf("\c[red]Forced a DD Spawn that might not fit due to DD chance being 512+");
						result = classname;
						spawndoomtype = false;
						break;
					}
					else
					{
						if (dydudebug_monsterspawns) Console.Printf("\c[red]Could Not Spawn DD-Type Enemy after 64 attempts, breaking script to not lock up the game. V:");
						spawndoomtype = true;
						break;
					}
				}
			}
		}
		else spawndoomtype = true;
		
		if (spawndoomtype)
		{
			if (exex_monsterevolutions)
			{
				if (random(1,32) <= 1)
				{
					classname = "DeathIncarnate";
					if (CanFitHere(classname)) result = classname;
				}
				else
				{
					if (random(1,256) <= 16)
					{
						classname = "HellClericDVDS";
						if (CanFitHere(classname)) result = classname;
					}
				}
			}
		}
		
		if (dydudebug_monsterspawns) Console.Printf("classname [%s]: %s", GetClassName(), classname);
		return result;
	}
}
class StealthRevenantSpawner : RevenantSpawner replaces StealthRevenant { }

// Cacodemon
class CacodemonSpawner : DDMonsterSpawner replaces Cacodemon
{
	Default
	{
		//$Sprite "RNMSH0"
		Radius 31;
		Height 56;
	}
	override Name ChooseSpawn()
	{
		string classname = "CacodemonNew";
		string result = classname;
		bool spawndoomtype;

		if (random(1,256) <= exex_ddafdmonsterschance && exex_ddafdmonstersrandom)
		{
			spawndoomtype = false;
			bool success;
			bool success2;
			int numtimes;
			
			while(!success && !success2)
			{
				if (random(1,24) <= 1) classname = "FractalHen";
				else
				if (random(1,24) <= random(1,3)) 
				{
					if (random(1,4) <= 3) classname = "Forsaken_Quisling";
													 else classname = "Forsaken_Jorgensen";
				}
				else
				if (random(1,9) <= random(1,3)) 
				{
					if (random(1,32) <= 1) classname = "PushyArchAngel";
														else classname = "PushyAngel";
				}
				else 
				{
					classname = "Vitriola";
					if (random(1,2) <= 1) classname = "Galgoyle";
				}
				
				success = CheckDDActorType(classname,numtimes);
				if (success)
				{
					if (CanFitHereDD(classname)) 
					{
						result = classname;
						success2 = true;
						if (dydudebug_monsterspawns) Console.Printf("classname %s fits [attempt #%d]", classname, numtimes);
					}
				}
				if (dydudebug_monsterspawns) Console.Printf("success: %d, success2: %d", success, success2);
				numtimes++;
				if (numtimes >= 64)
				{
					if (exex_ddafdmonsterschance >= 512)
					{
						if (dydudebug_monsterspawns) Console.Printf("\c[red]Forced a DD Spawn that might not fit due to DD chance being 512+");
						result = classname;
						spawndoomtype = false;
						break;
					}
					else
					{
						if (dydudebug_monsterspawns) Console.Printf("\c[red]Could Not Spawn DD-Type Enemy after 64 attempts, breaking script to not lock up the game. V:");
						spawndoomtype = true;
						break;
					}
				}
			}
		}
		else spawndoomtype = true;
		
		if (spawndoomtype)
		{
			if (random(1,6) <= 1)
			{
				if (random(1,random(6,7)) <= 1)
				{
					classname = "Abaddon";
					if (CanFitHereDD(classname)) result = classname;
				}
				else
				{
					classname = "Cacolantern";
					if (CanFitHereDD(classname)) result = classname;
				}
			}
		}
		
		if (dydudebug_monsterspawns) Console.Printf("classname [%s]: %s", GetClassName(), classname);
		return result;
	}
}
class StealthCacodemonSpawner : CacodemonSpawner replaces StealthCacodemon { }

// Pain Elemental
class PainElementalSpawner : DDMonsterSpawner replaces PainElemental
{
	Default
	{
		//$Sprite "RNMSI0"
		Radius 31;
		Height 56;
	}

	override Name ChooseSpawn()
	{
		string classname = "PainElementalNew";
		string result = classname;
		bool spawndoomtype;

		if (random(1,256) <= exex_ddafdmonsterschance && exex_ddafdmonstersrandom)
		{
			spawndoomtype = false;
			bool success;
			bool success2;
			int numtimes;
			
			while(!success && !success2)
			{
				if (random(1,24) <= 1) classname = "FractalHen";
				else
				if (random(1,24) <= random(1,3)) 
				{
					if (random(1,4) <= 3) classname = "Forsaken_Jorgensen";
													 else classname = "Forsaken_Quisling";
				}
				else
				if (random(1,18) <= random(1,3)) 
				{
					if (random(1,32) <= 1) classname = "PushyArchAngel";
														else classname = "PushyAngel";
				}
				else
				{
					if (random(1,8) <= 1) classname = "FractalHen";
													 else classname = "PuddingDog";
				}
				
				success = CheckDDActorType(classname,numtimes);
				if (success)
				{
					if (CanFitHereDD(classname)) 
					{
						result = classname;
						success2 = true;
						if (dydudebug_monsterspawns) Console.Printf("classname %s fits [attempt #%d]", classname, numtimes);
					}
				}
				if (dydudebug_monsterspawns) Console.Printf("success: %d, success2: %d", success, success2);
				numtimes++;
				if (numtimes >= 64)
				{
					if (exex_ddafdmonsterschance >= 512)
					{
						if (dydudebug_monsterspawns) Console.Printf("\c[red]Forced a DD Spawn that might not fit due to DD chance being 512+");
						result = classname;
						spawndoomtype = false;
						break;
					}
					else
					{
						if (dydudebug_monsterspawns) Console.Printf("\c[red]Could Not Spawn DD-Type Enemy after 64 attempts, breaking script to not lock up the game. V:");
						spawndoomtype = true;
						break;
					}
				}
			}
		}
		else spawndoomtype = true;
		
		if (dydudebug_monsterspawns) Console.Printf("classname [%s]: %s", GetClassName(), classname);
		return result;
	}
}

// LostSoul
class LostSoulSpawner : DDMonsterSpawner replaces LostSoul
{
	Default
	{
		//$Sprite "RNMSR0"
		Radius 16;
		Height 56;
	}

	override Name ChooseSpawn()
	{
		string classname = "LostSoulNew";
		string result = classname;
		bool spawndoomtype;

		if (exex_ddafdmonstersrandom && exex_ddafdmonsterschance >= 512)
		{
			spawndoomtype = false;
			bool success;
			bool success2;
			int numtimes;
			
			while(!success && !success2)
			{
				if (random(1,8) <= 1) 
				{
					classname = "FractalChick";
					if (random(1,32) <= random(1,2)) 
					{
						classname = "FractalChicken";
						if (random(1,32) <= random(1,2)) classname = "FractalHen";
					}
				}
				else 
				if (random(1,8) <= 1)
				{
					if (random(1,2) <= 1)
					{
						classname = "Forsaken";
						if (random(1,16) <= random(1,2)) 
						{
							if (random(1,2) == 1) classname = "Forsaken_Jorgensen";
															 else classname = "Forsaken_Quisling";
						}
					}
					else
					{
						classname = "Reaper";
					}
				}
				else 
				{
					classname = "PuddingPup";
					if (random(1,32) <= random(1,2)) classname = "PuddingDog";
				}
				
				success = CheckDDActorType(classname,numtimes);
				if (success)
				{
					if (CanFitHereDD(classname)) 
					{
						result = classname;
						success2 = true;
						if (dydudebug_monsterspawns) Console.Printf("classname %s fits [attempt #%d]", classname, numtimes);
					}
				}
				if (dydudebug_monsterspawns) Console.Printf("success: %d, success2: %d", success, success2);
				numtimes++;
				if (numtimes >= 64)
				{
					if (exex_ddafdmonsterschance >= 512)
					{
						if (dydudebug_monsterspawns) Console.Printf("\c[red]Forced a DD Spawn that might not fit due to DD chance being 512+");
						result = classname;
						spawndoomtype = false;
						break;
					}
					else
					{
						if (dydudebug_monsterspawns) Console.Printf("\c[red]Could Not Spawn DD-Type Enemy after 64 attempts, breaking script to not lock up the game. V:");
						spawndoomtype = true;
						break;
					}
				}
			}
		}
		else spawndoomtype = true;
		
		if (exex_monsterevolutions && spawndoomtype)
		{
			if (random(1,6) <= 1)
			{
				if (random(1,16) <= 1) classname = "BetaLostSoul"; else classname = "LostSoulAnnoying";
				if (CanFitHere(classname)) result = classname;
			}
		}
		
		if (dydudebug_monsterspawns) Console.Printf("classname [%s]: %s", GetClassName(), classname);
		return result;
	}
}

// Arachnotron
class ArachnotronSpawner : DDMonsterSpawner replaces Arachnotron
{
	Default
	{
		//$Sprite "RNMSJ0"
		Radius 64;
		Height 64;
	}

	override Name ChooseSpawn()
	{
		string classname = "ArachnotronNew";
		string result = classname;
		bool spawndoomtype;

		if (random(1,256) <= exex_ddafdmonsterschance && exex_ddafdmonstersrandom)
		{
			spawndoomtype = false;
			bool success;
			bool success2;
			int numtimes;
			
			while(!success && !success2)
			{
				int user_type = random(1,51);
				if (user_type >= 1 && user_type <= 15) classname = "SpiderCenser";
				if (user_type >= 16 && user_type <= 25) classname = "Muddernaut";
				if (user_type >= 26 && user_type <= 35) classname = "Knucklehead";
				if (user_type >= 36 && user_type <= 45) classname = "Devil";
				if (user_type >= 46 && user_type <= 50) 
				{
					if (random(1,16) <= 1) classname = "FractalHen";
														else classname = "PuddingDog";
				}
				if (user_type == 51) classname = "EvilDinahEE";
				
				success = CheckDDActorType(classname,numtimes);
				if (success)
				{
					if (CanFitHereDD(classname)) 
					{
						result = classname;
						success2 = true;
						if (dydudebug_monsterspawns) Console.Printf("classname %s fits [attempt #%d]", classname, numtimes);
					}
				}
				if (dydudebug_monsterspawns) Console.Printf("success: %d, success2: %d", success, success2);
				numtimes++;
				if (numtimes >= 64)
				{
					if (exex_ddafdmonsterschance >= 512)
					{
						if (dydudebug_monsterspawns) Console.Printf("\c[red]Forced a DD Spawn that might not fit due to DD chance being 512+");
						result = classname;
						spawndoomtype = false;
						break;
					}
					else
					{
						if (dydudebug_monsterspawns) Console.Printf("\c[red]Could Not Spawn DD-Type Enemy after 64 attempts, breaking script to not lock up the game. V:");
						spawndoomtype = true;
						break;
					}
				}
			}
		}
		else spawndoomtype = true;
		
		if (exex_monsterevolutions && spawndoomtype)
		{
			if (random(1,6) <= 1)
			{
				classname = "RailArachnotron";
				if (CanFitHere(classname)) result = classname;
			}
		}
		
		if (dydudebug_monsterspawns) Console.Printf("classname [%s]: %s", GetClassName(), classname);
		return result;
	}
}
class StealthArachnotronSpawner : ArachnotronSpawner replaces StealthArachnotron { }

// Hell Knight
class HellKnightSpawner : DDMonsterSpawner replaces HellKnight
{
	Default
	{
		//$Sprite "RNMSK0"
		Radius 24;
		Height 64;
	}

	override Name ChooseSpawn()
	{
		string classname = "HellKnightNew";
		string result = classname;
		bool spawndoomtype;

		if (random(1,256) <= exex_ddafdmonsterschance && exex_ddafdmonstersrandom)
		{
			spawndoomtype = false;
			bool success;
			bool success2;
			int numtimes;
			
			while(!success && !success2)
			{
				int cchance = (randompick(60,64,68) - (skill * 4));
				if (dydudebug_monsterspawns) Console.Printf("cchance: %d", cchance);
				if (random(1,cchance) <= 1)
				{
					classname = "EvilDinahEE";
				}
				else
				{
					if (random(1,32) <= 1) classname = "FractalHen";
					else
					{
						int user_type = random(1,30);
						if (user_type >= 1 && user_type <= 12)
						{
							classname = "Juggette";
							if (random(1,8) <= 1) classname = "Jugger";
						}
						if (user_type >= 13 && user_type <= 15) classname = "SpiderCenser";
						if (user_type >= 16 && user_type <= 20) classname = "Muddernaut";
						if (user_type >= 21 && user_type <= 25) classname = "Devil";
						if (user_type >= 26 && user_type <= 29)
						{
							if (random(1,9) <= 1) classname = "PushyArchAngel";
															 else classname = "PushyAngel";
						}
						if (user_type >= 30) 
						{
							if (random(1,64) <= 1)
							{
								if (random(1,2) <= 1) classname = "Tempest_BossClone";
																 else classname = "Delila_BossClone";
							}
							else
							{
								classname = "FractalHen";
							}
						}
					}
				}
				
				success = CheckDDActorType(classname,numtimes);
				if (success)
				{
					if (CanFitHereDD(classname)) 
					{
						result = classname;
						success2 = true;
						if (dydudebug_monsterspawns) Console.Printf("classname %s fits [attempt #%d]", classname, numtimes);
					}
				}
				if (dydudebug_monsterspawns) Console.Printf("success: %d, success2: %d", success, success2);
				numtimes++;
				if (numtimes >= 64)
				{
					if (exex_ddafdmonsterschance >= 512)
					{
						if (dydudebug_monsterspawns) Console.Printf("\c[red]Forced a DD Spawn that might not fit due to DD chance being 512+");
						result = classname;
						spawndoomtype = false;
						break;
					}
					else
					{
						if (dydudebug_monsterspawns) Console.Printf("\c[red]Could Not Spawn DD-Type Enemy after 64 attempts, breaking script to not lock up the game. V:");
						spawndoomtype = true;
						break;
					}
				}
			}
		}
		else spawndoomtype = true;
		
		if (exex_monsterevolutions && spawndoomtype)
		{
			if (random(1,256) <= 4)
			{
				classname = "FlyingBalrogDVDS";
				if (CanFitHere(classname)) result = classname;
			}
			else
			{
				if (random(1,16) <= 1)
				{
					classname = "HellWarrior";
					if (CanFitHere(classname)) result = classname;
				}
				else
				{
					if (random(1,6) <= 1)
					{
						if (random(1,6) <= 1)
						{
							if (random(1,2) <= 1) classname = "CyBruiser";
							else classname = "BruiserDemon";
							if (CanFitHere(classname)) result = classname;
						}
						else
						{
							if (random(1,6) <= 1)
							{
								classname = "Belphegor";
								if (CanFitHere(classname)) result = classname;
							}
							else
							{
								classname = "BaronOfHellNew";
								if (CanFitHere(classname)) result = classname;
							}
						}
					}
				}
			}
		}
		
		if (dydudebug_monsterspawns) Console.Printf("classname [%s]: %s", GetClassName(), classname);
		return result;
	}
}
class StealthHellKnightSpawner : HellKnightSpawner replaces StealthHellKnight { }

// Mancubus
class MancubusSpawner : DDMonsterSpawner replaces Fatso
{
	Default
	{
		//$Sprite "RNMSL0"
		Radius 48;
		Height 64;
	}

	override Name ChooseSpawn()
	{
		string classname = "MancubusNew";
		string result = classname;
		bool spawndoomtype;

		if (random(1,256) <= exex_ddafdmonsterschance && exex_ddafdmonstersrandom)
		{
			spawndoomtype = false;
			bool success;
			bool success2;
			int numtimes;
			
			while(!success && !success2)
			{
				int user_type = random(1,251);
				if (user_type >= 1 && user_type <= 60)
				{
					classname = "Jugger";
					if (random(1,32) <= 1) classname = "Teacher_KragClone";
				}
				if (user_type >= 61 && user_type <= 120)
				{
					classname = "Knucklehead";
					if (random(1,32) <= 1) classname = "Teacher_KragClone";
				}
				if (user_type >= 121 && user_type <= 170)
				{
					classname = "Muddernaut";
					if (random(1,32) <= 1) classname = "Teacher_KragClone";
				}
				if (user_type >= 171 && user_type <= 215)
				{
					classname = "Devil";
					if (random(1,32) <= 1) classname = "Teacher_KragClone";
				}
				if (user_type >= 216 && user_type <= 245)
				{
					if (random(1,32) <= 1) classname = "Teacher_KragClone";
					else
					{
						if (random(1,16) <= 1) classname = "FractalHen";
															else classname = "PuddingDog";
					}
				}
				if (user_type >= 246 && user_type <= 250) classname = "Teacher_KragClone";
				if (user_type == 251) classname = "EvilDinahEE";
				
				success = CheckDDActorType(classname,numtimes);
				if (success)
				{
					if (CanFitHereDD(classname)) 
					{
						result = classname;
						success2 = true;
						if (dydudebug_monsterspawns) Console.Printf("classname %s fits [attempt #%d]", classname, numtimes);
					}
				}
				if (dydudebug_monsterspawns) Console.Printf("success: %d, success2: %d", success, success2);
				numtimes++;
				if (numtimes >= 64)
				{
					if (exex_ddafdmonsterschance >= 512)
					{
						if (dydudebug_monsterspawns) Console.Printf("\c[red]Forced a DD Spawn that might not fit due to DD chance being 512+");
						result = classname;
						spawndoomtype = false;
						break;
					}
					else
					{
						if (dydudebug_monsterspawns) Console.Printf("\c[red]Could Not Spawn DD-Type Enemy after 64 attempts, breaking script to not lock up the game. V:");
						spawndoomtype = true;
						break;
					}
				}
			}
		}
		else spawndoomtype = true;
		
		if (exex_monsterevolutions && spawndoomtype)
		{
			if (random(1,36) <= 1)
			{
				classname = "Daedabus";
				if (CanFitHere(classname)) result = classname;
			}
		}
			
		if (dydudebug_monsterspawns) Console.Printf("classname [%s]: %s", GetClassName(), classname);
		return result;
	}
}
class StealthMancubusSpawner : MancubusSpawner replaces StealthFatso { }

// Archvile
class ArchvileSpawner : DDMonsterSpawner replaces Archvile
{
	Default
	{
		//$Sprite "RNMSM0"
		Radius 20;
		Height 56;
	}

	override Name ChooseSpawn()
	{
		string classname = "ArchvileNew";
		string result = classname;
		bool spawndoomtype;

		if (random(1,256) <= exex_ddafdmonsterschance && exex_ddafdmonstersrandom)
		{
			spawndoomtype = false;
			bool success;
			bool success2;
			int numtimes;
			
			while(!success && !success2)
			{
				
				int cchance = (randompick(30,32,34) - (skill * 2));
				if (dydudebug_monsterspawns) Console.Printf("cchance: %d", cchance);
				if (random(1,cchance) <= 1)
				{
					classname = "EvilDinahEE";
				}
				else
				{
					int user_type = random(1,34);
					if (user_type <= 18)
					{
						classname = "KilletanteSoloist";
						if (random(1,32) <= 1) classname = "Killetante";
					}
					else
					if (user_type >= 19 && user_type <= 26)
					{
						classname = "SphinxMotherClone";
					}
					else
					if (user_type >= 27 && user_type <= 30) 
					{
						if (random(1,16) <= 15) classname = "Teacher_QuisClone";
															 else classname = "Teacher_LauritzClone";
					}
					else
					if (user_type >= 31 && user_type <= 34) 
					{
						if (random(1,4) <= 1) classname = "Tempest_BossClone";
														 else classname = "Delila_BossClone";
					}
				}
				
				success = CheckDDActorType(classname,numtimes);
				if (success)
				{
					if (CanFitHereDD(classname)) 
					{
						result = classname;
						success2 = true;
						if (dydudebug_monsterspawns) Console.Printf("classname %s fits [attempt #%d]", classname, numtimes);
					}
				}
				if (dydudebug_monsterspawns) Console.Printf("success: %d, success2: %d", success, success2);
				numtimes++;
				if (numtimes >= 64)
				{
					if (exex_ddafdmonsterschance >= 512)
					{
						if (dydudebug_monsterspawns) Console.Printf("\c[red]Forced a DD Spawn that might not fit due to DD chance being 512+");
						result = classname;
						spawndoomtype = false;
						break;
					}
					else
					{
						if (dydudebug_monsterspawns) Console.Printf("\c[red]Could Not Spawn DD-Type Enemy after 64 attempts, breaking script to not lock up the game. V:");
						spawndoomtype = true;
						break;
					}
				}
			}
		}
		else spawndoomtype = true;
		
		if (exex_monsterevolutions && spawndoomtype)
		{
			if (random(1,6) <= 1)
			{
				classname = "Diabloist";
				if (CanFitHere(classname)) result = classname;
			}
		}
		
		if (dydudebug_monsterspawns) Console.Printf("classname [%s]: %s", GetClassName(), classname);
		return result;
	}
}
class StealthArchvileSpawner : ArchvileSpawner replaces StealthArchvile { }

// Baron Of Hell
class BaronofHellSpawner : DDMonsterSpawner replaces BaronofHell
{
	Default
	{
		//$Sprite "RNMSN0"
		Radius 24;
		Height 64;
	}

	override Name ChooseSpawn()
	{
		string classname = "BaronOfHellNew";
		string result = classname;
		bool spawndoomtype;

		if (random(1,256) <= exex_ddafdmonsterschance && exex_ddafdmonstersrandom)
		{
			spawndoomtype = false;
			bool success;
			bool success2;
			int numtimes;
			
			while(!success && !success2)
			{
				
				int cchance = (randompick(45,48,51) - (skill * 3));
				if (dydudebug_monsterspawns) Console.Printf("cchance: %d", cchance);
				if (random(1,cchance) <= 1)
				{
					classname = "EvilDinahEE";
				}
				else
				{
					if (random(1,32) <= 1) classname = "FractalHen";
					else
					{
						int user_type = random(1,67);
						if (user_type >= 1 && user_type <= 18) 
						{
							classname = "Jugger";
							if (random(1,8) <= 1) classname = "Juggette";
						}
						else
						if (user_type >= 19 && user_type <= 30) 
						{
							classname = "SpiderCenser";
						}
						else
						if (user_type >= 31 && user_type <= 42) 
						{
								if (random(1,9) <= 1) classname = "KnuckleHead";
																 else classname = "Muddernaut";
						}
						else
						if (user_type >= 43 && user_type <= 56) 
						{
							if (random(1,9) <= 1)
							{
								if (random(1,9) <= 1) classname = "PushyAngel";
								else classname = "PushyArchAngel";
							}
							else classname = "Devil";
						}
						else
						if (user_type >= 57 && user_type <= 62)
						{
							if (random(1,16) <= 15) classname = "Teacher_LauritzClone";
																 else classname = "Teacher_QuisClone";
						}
						else
						if (user_type >= 63 && user_type <= 66) 
						{
							if (random(1,2) <= 1) classname = "Tempest_BossClone";
															else classname = "Delila_BossClone";
						}
						else
						if (user_type == 67)
						{
							if (random(1,64) <= 1) classname = "HandmotherPhaseAClone";
																else classname = "HandMotherVacClone";
						}
					}
				}
				
				success = CheckDDActorType(classname,numtimes);
				if (success)
				{
					if (CanFitHereDD(classname)) 
					{
						result = classname;
						success2 = true;
						if (dydudebug_monsterspawns) Console.Printf("classname %s fits [attempt #%d]", classname, numtimes);
					}
				}
				if (dydudebug_monsterspawns) Console.Printf("success: %d, success2: %d", success, success2);
				numtimes++;
				if (numtimes >= 64)
				{
					if (exex_ddafdmonsterschance >= 512)
					{
						if (dydudebug_monsterspawns) Console.Printf("\c[red]Forced a DD Spawn that might not fit due to DD chance being 512+");
						result = classname;
						spawndoomtype = false;
						break;
					}
					else
					{
						if (dydudebug_monsterspawns) Console.Printf("\c[red]Could Not Spawn DD-Type Enemy after 64 attempts, breaking script to not lock up the game. V:");
						spawndoomtype = true;
						break;
					}
				}
			}
		}
		else spawndoomtype = true;
		
		if (exex_monsterevolutions && spawndoomtype)
		{
			if (random(1,256) <= 8)
			{
				classname = "FlyingBalrogDVDS";
				if (CanFitHere(classname)) result = classname;
			}
			else
			{
				if (random(1,32) <= 1)
				{
					classname = "HellWarrior";
					if (CanFitHere(classname)) result = classname;
				}
				else
				{
					if (random(1,6) <= 1)
					{
						if (random(1,6) <= 1)
						{
							if (random(1,2) <= 1) classname = "CyBruiser";
							else classname = "BruiserDemon";
							if (CanFitHere(classname)) result = classname;
						}
						else
						{
							classname = "Belphegor";
							if (CanFitHere(classname)) result = classname;
						}
					}
				}
			}
		}
		
		if (dydudebug_monsterspawns) Console.Printf("classname [%s]: %s", GetClassName(), classname);
		return result;
	}
}
class StealthBaronSpawner : BaronofHellSpawner replaces StealthBaron { }

// Spider Mastermind
class SpiderMastermindSpawner : DDMonsterSpawner replaces SpiderMastermind
{
	Default
	{
		//$Sprite "RNMSO0"
		Radius 128;
		Height 100;
	}

	override Name ChooseSpawn()
	{
		string classname = "SpiderMastermindNew";
		string result = classname;
		bool spawndoomtype;

		if (random(1,256) <= exex_ddafdmonsterschance && exex_ddafdmonstersrandom)
		{
			spawndoomtype = false;
			bool success;
			bool success2;
			int numtimes;
			
			while(!success && !success2)
			{
				
				int cchance = (randompick(15,16,17) - (skill * 1));
				if (dydudebug_monsterspawns) Console.Printf("cchance: %d", cchance);
				if (random(1,cchance) <= 1)
				{
					classname = "EvilDinahEE";
				}
				else
				{
					int user_type = random(1,34);
					if (user_type >= 1 && user_type <= 24) 
					{
						classname = "GameMotherClone";
						if (!CanFitHereDD(classname))
						{
							if (random(1,8) <= 5) 
							{
								classname = "RoseMotherClone";
								if (!CanFitHereDD(classname)) classname = "MossMotherClone";
							}
							else 
							{
								classname = "MossMotherClone";
							}
						}
						else
						{
							if (random(1,8) <= 1) 
							{
								if (random(1,8) <= 5) 
								{
									classname = "RoseMotherClone";
									if (!CanFitHereDD(classname)) classname = "MossMotherClone";
								}
								else classname = "MossMotherClone";
							}
						}
					}
					else
					if (user_type >= 25 && user_type <= 31)
					{
						if (random(1,8) <= 7) classname = "Teacher_JorgClone";
														 else classname = "Teacher_VokterClone";
					}
					else
					if (user_type >= 32 && user_type <= 33) 
					{
						if (random(1,2) <= 1) classname = "Tempest_BossClone";
														 else classname = "Delila_BossClone";
					}
					else
					if (user_type == 34)
					{
						classname = "HandmotherPhaseAClone";
					}
				}
				
				success = CheckDDActorType(classname,numtimes);
				if (success)
				{
					if (CanFitHereDD(classname)) 
					{
						result = classname;
						success2 = true;
						if (dydudebug_monsterspawns) Console.Printf("classname %s fits [attempt #%d]", classname, numtimes);
					}
				}
				if (dydudebug_monsterspawns) Console.Printf("success: %d, success2: %d", success, success2);
				numtimes++;
				if (numtimes >= 64)
				{
					if (exex_ddafdmonsterschance >= 512)
					{
						if (dydudebug_monsterspawns) Console.Printf("\c[red]Forced a DD Spawn that might not fit due to DD chance being 512+");
						result = classname;
						spawndoomtype = false;
						break;
					}
					else
					{
						if (dydudebug_monsterspawns) Console.Printf("\c[red]Could Not Spawn DD-Type Enemy after 64 attempts, breaking script to not lock up the game. V:");
						spawndoomtype = true;
						break;
					}
				}
			}
		}
		else spawndoomtype = true;
		
		if (exex_monsterevolutions && spawndoomtype)
		{
			if (random(1,6) <= 1)
			{
				classname = "Demolisher";
				if (CanFitHere(classname)) result = classname;
			}
		}
		
		if (dydudebug_monsterspawns) Console.Printf("classname [%s]: %s", GetClassName(), classname);
		return result;
	}
}

// Cyberdemon
class CyberdemonSpawner : DDMonsterSpawner replaces Cyberdemon
{
	Default
	{
		//$Sprite "RNMSP0"
		Radius 40;
		Height 110;
	}

	override Name ChooseSpawn()
	{
		string classname = "CyberdemonNew";
		string result = classname;
		bool spawndoomtype;

		if (random(1,256) <= exex_ddafdmonsterschance && exex_ddafdmonstersrandom)
		{
			spawndoomtype = false;
			bool success;
			bool success2;
			int numtimes;
			
			while(!success && !success2)
			{
				int cchance = (randompick(15,16,17) - (skill * 1));
				if (dydudebug_monsterspawns) Console.Printf("cchance: %d", cchance);
				if (random(1,cchance) <= 1)
				{
					classname = "EvilDinahEE";
				}
				else
				{
					int user_type = random(1,34);
					if (user_type >= 1 && user_type <= 24) 
					{
						if (random(1,8) <= 5) 
						{
							classname = "RoseMotherClone";
							if (!CanFitHereDD(classname)) classname = "MossMotherClone";
						}
						else 
						{
							classname = "MossMotherClone";
						}
						if (random(1,8) <= 1) 
						{
							classname = "GameMotherClone";
							if (!CanFitHereDD(classname))
							{
								if (random(1,8) <= 5) 
								{
									classname = "RoseMotherClone";
									if (!CanFitHereDD(classname)) classname = "MossMotherClone";
								}
								else 
								{
									classname = "MossMotherClone";
								}
							}
						}
					}
					if (user_type >= 25 && user_type <= 31)
					{
						if (random(1,8) <= 7) classname = "Teacher_VokterClone";
														 else classname = "Teacher_JorgClone";
					}
					if (user_type >= 32 && user_type <= 33) 
					{
						if (random(1,2) <= 1) classname = "Tempest_BossClone";
														 else classname = "Delila_BossClone";
					}
					else
					if (user_type == 35)
					{
						classname = "HandmotherPhaseAClone";
					}
				}
				
				success = CheckDDActorType(classname,numtimes);
				if (success)
				{
					if (CanFitHereDD(classname)) 
					{
						result = classname;
						success2 = true;
						if (dydudebug_monsterspawns) Console.Printf("classname %s fits [attempt #%d]", classname, numtimes);
					}
				}
				if (dydudebug_monsterspawns) Console.Printf("success: %d, success2: %d", success, success2);
				numtimes++;
				if (numtimes >= 64)
				{
					if (exex_ddafdmonsterschance >= 512)
					{
						if (dydudebug_monsterspawns) Console.Printf("\c[red]Forced a DD Spawn that might not fit due to DD chance being 512+");
						result = classname;
						spawndoomtype = false;
						break;
					}
					else
					{
						if (dydudebug_monsterspawns) Console.Printf("\c[red]Could Not Spawn DD-Type Enemy after 64 attempts, breaking script to not lock up the game. V:");
						spawndoomtype = true;
						break;
					}
				}
			}
		}
		else spawndoomtype = true;
		
		if (exex_monsterevolutions && spawndoomtype)
		{
			if (random(1,6) <= 1)
			{
				classname = "Annihilator";
				if (CanFitHere(classname)) result = classname;
			}
		}
		
		if (dydudebug_monsterspawns) Console.Printf("classname [%s]: %s", GetClassName(), classname);
		return result;
	}
}