// Switchable Decor [DD food items/etc]
class WineSet : SwitchableDecoration 
{
	mixin HUDRecovery;
	default
	{
		//$Category EE Props
		Radius 16;
		Height 32;
		+USESPECIAL
		Activation THINGSPEC_Activate;
	}
	
	States
	{
		Spawn:
			WINE A -1;
			Stop;
		Inactive:
			WINE A -1;
			Stop;
		Active:
			WINE B 0 A_StartSound("dinah/drink");
			WINE B 1;
			WINE B 1
			{
				actor player = players[0].mo;
				let MiscItem = PlayerStatItem(Player.FindInventory("PlayerStatItem"));
				int temp1 = player.health;
				int oldhealth = player.health;
				int temp2 = player.CountInv("PlayerMaxHP");
				if (temp1 < temp2)
				{
					int temp3 = player.CountInv("PlayerMaxHP");
					temp3 *= 0.15;
					temp1 += temp3;
					
					if (temp1 > temp2) temp1 = temp2;
				}
				else
				{
					int temp3 = player.CountInv("PlayerMaxHP");
					temp3 *= 0.05;
					temp1 += temp3;
					if (temp1 > (temp2 * 3)) temp1 = (temp2 * 3);
				}
				player.health = temp1;
				int healdiff = player.health - oldhealth;
				if (healdiff) invoker.A_RecoverHUD(healdiff, 0, true);
				if (MiscItem) MiscItem.HPRegenBoostTimer += (randompick(9,10,10,11,11,12,13) * 2.5);

				int armorgive = 50;
				for (int i; i < armorgive; i++) player.A_GiveInventory("ArmorScrap",1);
				
				double maskpitch = 1.00;
				if (player.waterlevel >= 3 && MiscItem.CanTalkUnderwater >= 2) maskpitch *= 1.259921885;
				player.A_StopSound(CHAN_VOICE);
				player.A_StartSound("dinah/giggle",CHAN_VOICE,CHANF_DEFAULT,1.0,ATTN_NORM,maskpitch);
				Console.Printf("\c[gold]Eh... One little sip won't hurt... right?");
			}
			WINE B -1;
			Stop;
	}
}

class FoodPlate1 : SwitchableDecoration //pig
{
	mixin HUDRecovery;
	default
	{
		//$Category EE Props
		Height 32;
		Radius 16;
		Scale 1;
		Tag "Food Plate (Pig)";
		+USESPECIAL
		Activation THINGSPEC_Activate;
	}
	
	States
	{
		Spawn:
			FOOD A -1;
			Stop;
		Inactive:
			FOOD A -1;
			Stop;
		Active:
			FOOD E 0
			{
				actor player = players[0].mo;
				let MiscItem = PlayerStatItem(player.FindInventory("PlayerStatItem"));
				int temp1 = player.health;
				int oldhealth = player.health;
				int temp4 = player.CountInv("PlayerMaxHP");
				int temp2 = (temp4 * 3.0);
				int temp3 = temp4;
				temp3 *= 0.50;
					
				temp1 += temp3;
				if (temp1 > temp2) temp1 = temp2;
				player.health = temp1;
				int healdiff = player.health - oldhealth;
				if (healdiff) invoker.A_RecoverHUD(healdiff, 0, true);
				if (MiscItem) MiscItem.HPRegenBoostTimer += (random(45,65) * 2.5);

				if (MiscItem && MiscItem.CanTalkUnderwater)
				{
					double maskpitch = 1.00;
					if (waterlevel >= 3 && MiscItem.CanTalkUnderwater >= 2) maskpitch *= 1.259921885;
					player.A_StopSound(CHAN_VOICE);
					player.A_StartSound("Dinah/eat",CHAN_VOICE,CHANF_DEFAULT,1.0,ATTN_NORM,maskpitch);
				}
				player.A_SetBlend("f1 ff f1",0.1,random(4,6));
				player.A_GiveInventory("PowerRoastBuff");
				Console.Printf("\c[red]Ate a dish of Roasted Pig! \c[green]+%d (Over)HP", temp3);
				//invoker.A_FadeOut(1.0,FTF_REMOVE);
			}
		Eaten:
			FOOD E -1;
			Stop;
	}
}

class FoodPlate2 : SwitchableDecoration //fruit
{
	mixin HUDRecovery;
	default
	{
		//$Category EE Props
		Height 32;
		Radius 16;
		Scale 1;
		Tag "Food Plate (Fruit)";
		+USESPECIAL
		Activation THINGSPEC_Activate;
	}
	
	States
	{
		Spawn:
			FOOD B -1;
			Stop;
		Inactive:
			FOOD B -1;
			Stop;
		Active:
			FOOD F 0
			{
				actor player = players[0].mo;
				let MiscItem = PlayerStatItem(player.FindInventory("PlayerStatItem"));
				int temp1 = player.health;
				int oldhealth = player.health;
				int temp4 = player.CountInv("PlayerMaxHP");
				int temp2 = (temp4 * 3.0);
				if (temp1 < temp2)
				{
					int temp3 = temp4;
					temp3 *= 0.10;
						
					temp1 += temp3;
					if (temp1 > temp2) temp1 = temp2;
					player.health = temp1;
					int healdiff = player.health - oldhealth;
					if (healdiff) invoker.A_RecoverHUD(healdiff, 0, true);
					if (MiscItem) MiscItem.HPRegenBoostTimer += (randompick(9,10,10,11,11,12,13) * 2.5);
					
					player.A_GiveInventory("PowerFruitBuff");
					player.A_GiveInventory("PowerFruitBuff2");
					if (MiscItem && MiscItem.CanTalkUnderwater)
					{
						double maskpitch = 1.00;
						if (waterlevel >= 3 && MiscItem.CanTalkUnderwater >= 2) maskpitch *= 1.259921885;
						player.A_StopSound(CHAN_VOICE);
						player.A_StartSound("Dinah/eat",CHAN_VOICE,CHANF_DEFAULT,1.0,ATTN_NORM,maskpitch);
					}
					player.A_SetBlend("f1 ff f1",0.1,random(4,6));
					Console.Printf("\c[red]Food Plate (Fruit)! \c[green]+%d (Over)HP", temp3);
					//invoker.A_FadeOut(1.0,FTF_REMOVE);
					return resolvestate("Eaten");
				}
				else
				{
					A_StartSound("inv_fail",84,CHANF_DEFAULT,1.0,ATTN_NORM);
					SetStateLabel("Inactive");
				}
				return resolvestate(null);
			}
			goto Inactive;
		Eaten:
			FOOD F -1;
			Stop;
	}
}

class FoodPlate3 : SwitchableDecoration //jello
{
	mixin HUDRecovery;
	default
	{
		//$Category EE Props
		Height 32;
		Radius 16;
		Scale 1;
		Tag "Food Plate (Jello)";
		+USESPECIAL
		Activation THINGSPEC_Activate;
	}
	
	States
	{
		Spawn:
			FOOD C -1;
			Stop;
		Inactive:
			FOOD C -1;
			Stop;
		Active:
			FOOD G 0
			{
				actor player = players[0].mo;
				let MiscItem = PlayerStatItem(player.FindInventory("PlayerStatItem"));
				int temp1 = player.health;
				int oldhealth = player.health;
				int temp4 = player.CountInv("PlayerMaxHP");
				int temp2 = (temp4 * 3.0);
				if (temp1 < temp2)
				{
					int temp3 = temp4;
					temp3 *= frandom(0.08,0.12);
						
					temp1 += temp3;
					if (temp1 > temp2) temp1 = temp2;
					player.health = temp1;
					int healdiff = player.health - oldhealth;
					if (healdiff) invoker.A_RecoverHUD(healdiff, 0, true);
					if (MiscItem) MiscItem.HPRegenBoostTimer += (randompick(9,10,10,11,11,12,13) * 2.5);
					
					player.A_GiveInventory("PowerFruitBuff");
					player.A_GiveInventory("PowerFruitBuff2");
					if (MiscItem && MiscItem.CanTalkUnderwater)
					{
						double maskpitch = 1.00;
						if (waterlevel >= 3 && MiscItem.CanTalkUnderwater >= 2) maskpitch *= 1.259921885;
						player.A_StopSound(CHAN_VOICE);
						player.A_StartSound("Dinah/eat",CHAN_VOICE,CHANF_DEFAULT,1.0,ATTN_NORM,maskpitch);
					}
					player.A_SetBlend("f1 ff f1",0.1,random(4,6));
					Console.Printf("\c[red]Food Plate (Jello)! \c[green]+%d (Over)HP", temp3);
					//invoker.A_FadeOut(1.0,FTF_REMOVE);
					return resolvestate("Eaten");
				}
				else
				{
					A_StartSound("inv_fail",84,CHANF_DEFAULT,1.0,ATTN_NORM);
					SetStateLabel("Inactive");
				}
				return resolvestate(null);
			}
			goto Inactive;
		Eaten:
			FOOD G -1;
			Stop;
	}
}

class FoodPlate4 : SwitchableDecoration //turkey
{
	mixin HUDRecovery;
	default
	{
		//$Category EE Props
		Height 32;
		Radius 16;
		Scale 1;
		Tag "Food Plate (Turkey)";
		+USESPECIAL
		Activation THINGSPEC_Activate;
	}
	
	States
	{
		Spawn:
			FOOD D -1;
			Stop;
		Inactive:
			FOOD D -1;
			Stop;
		Active:
			TNT1 A 0
			{
				actor player = players[0].mo;
				let MiscItem = PlayerStatItem(Player.FindInventory("PlayerStatItem"));
				if (player)
				{
					let Turkey = TurkeyDinner(player.FindInventory("TurkeyDinner"));
					if (Turkey && Turkey.Amount < Turkey.MaxAmount)
					{
						double maskpitch = 1.00;
						if (player.waterlevel >= 3 && MiscItem.CanTalkUnderwater >= 2) maskpitch *= 1.259921885;
						player.A_StopSound(CHAN_VOICE);
						player.A_StartSound("Dinah/giggle",CHAN_VOICE,CHANF_DEFAULT,1.0,ATTN_NORM,maskpitch);
						player.A_GiveInventory("TurkeyDinner",1);
						Console.Printf("\c[gold]Mmmmm! A delicious Turkey Dinner!\c- \c[green](Eat for Health and a 'well fed' buff)");
						SetStateLabel("Done");
					}
					else
					{
						A_StartSound("inv_fail",84,CHANF_DEFAULT,1.0,ATTN_NORM);
						SetStateLabel("Inactive");
					}
					return resolvestate(null);
				}
				else
				{
					A_StartSound("inv_fail",84,CHANF_DEFAULT,1.0,ATTN_NORM);
					SetStateLabel("Inactive");
				}
				return resolvestate(null);
			}
			goto Inactive;
		Done:
			TNT1 A 1;
			Stop;
	}
}

class FoodPlateFinal : SwitchingDecoration 
{
	mixin HUDRecovery;
	default
	{
		//$Category EE Props
		Height 32;
		Radius 20;
		Scale 1;
		Tag "Food Plate (Culinary Arts)";
	}
	
	States
	{
		Spawn:
			FOOD Y -1;
			Stop;
		Active:
			FOOD Z 0
			{
				actor player = players[0].mo;
				let MiscItem = PlayerStatItem(player.FindInventory("PlayerStatItem"));
				int temp1 = player.health;
				int oldhealth = player.health;
				int temp4 = player.CountInv("PlayerMaxHP");
				int temp2 = (temp4 * 3.0);
				if (temp1 < temp2)
				{
					int temp3 = temp4;
					temp3 *= 2.00;
						
					temp1 += temp3;
					if (temp1 > temp2) temp1 = temp2;
					player.health = temp1;
					int healdiff = player.health - oldhealth;
					if (healdiff) invoker.A_RecoverHUD(healdiff, 0, true);
					if (MiscItem) MiscItem.HPRegenBoostTimer += (random(225,325) * 2.5);

					double maskpitch = 1.00;
					if (MiscItem && MiscItem.CanTalkUnderwater)
					{
						if (waterlevel >= 3 && MiscItem.CanTalkUnderwater >= 2) maskpitch *= 1.259921885;
						player.A_StopSound(CHAN_VOICE);
						player.A_StartSound("Dinah/eatgourmet",CHAN_VOICE,CHANF_DEFAULT,1.0,ATTN_NORM,maskpitch);
					}
					else
					{
						player.A_StopSound(CHAN_VOICE);
						player.A_StartSound("Dinah/eat",CHAN_VOICE,CHANF_DEFAULT,1.0,ATTN_NORM,maskpitch);
					}
					player.A_SetBlend("f1 ff f1",0.1,random(10,15));
					player.A_GiveInventory("PowerMealBuff");
					player.A_GiveInventory("PowerMealBuff2");
					Console.Printf("\c[red]Ate a massive Gourmet Meal! \c[green]+%d (Over)HP", temp3);
					//invoker.A_FadeOut(1.0,FTF_REMOVE);
					return resolvestate("Eaten");
				}
				else
				{
					A_StartSound("inv_fail",84,CHANF_DEFAULT,1.0,ATTN_NORM);
					SetStateLabel("Inactive");
				}
				return resolvestate(null);
			}
		Eaten:
			FOOD Z -1;
			Stop;
	}
}

class Skillet : SwitchableDecoration 
{
	default
	{
		//$Category EE Props
		Height 32;
		Radius 16;
		Scale 1;
		Tag "Skillet";
		+USESPECIAL;
		Activation THINGSPEC_Activate | THINGSPEC_ClearSpecial;
	}
	
	States
	{
		Spawn:
			CPOT E -1;
			Stop;
		Inactive:
			CPOT E -1;
			Stop;
		Active:
			CPOT E 0 A_StartSound("weapons/spinnerfire");
			CPOT ABCD 7 bright;
			Goto Active+1;
	}
}

//REEL HEEL VARIANTS
class ReelHeel_Loser : SwitchableDecoration
{
	default
	{
		//$Category EE Props
		Radius 20;
		Height 56;
		Mass 1000;
		+FLOORCLIP
		+SOLID
		+USESPECIAL
		Activation THINGSPEC_Activate;
	}
	
	States
	{
		Active:
			SLOT A 0 A_StartSound("misc/unlock");
			SLOP AB 10;
			SLOP A 3;
			SLOT A 3;
			SLOT A 0 A_StartSound("slots/jackpot");
			SLOT EGIEGIEGI 2 Bright;
			SLOP X 40 Bright ;
			SLOP X 0 A_SpawnItemEX("ReelHeel",0,0,0,0,0,0,0,SXF_NOCHECKPOSITION);
			SLOP X 0 A_Die();
			Stop;
		Spawn:
			SLOT AB 3;
			Loop;
		Inactive:
			SLOT AB 3;
			Loop;
		Death:
			TNT1 A 1 A_Noblocking();
			Stop;
	}
}

class ReelHeel_Cherry : SwitchableDecoration
{
	default
	{
		//$Category EE Props
		Radius 20;
		Height 56;
		Mass 1000;
		+FLOORCLIP
		+SOLID
		+USESPECIAL
		Activation THINGSPEC_Activate;
	}
	
	States
	{
		Active:
			SLOT A 0 A_StartSound("misc/unlock");
			SLOP AB 10;
			SLOP A 3;
			SLOT A 3;
			SLOT A 0 A_StartSound("slots/jackpot");
			SLOT EGIEGIEGI 2 Bright;
			SLOT IJIJIJIJIJIJ 2 Bright A_FaceTarget();
			SLOT K 6;
			SLOT L 0 A_StartSound("slots/burp");
			SLOT L 3 A_ThrowGrenade("CherryBombPickup",40,3,random(-2,2));
			SLOT L 0 A_Jump(192,2);
			SLOT L 3 A_ThrowGrenade("CherryBombPickup",40,3,random(-2,2));
			SLOT L 0 A_Jump(192,2);
			SLOT L 3 A_ThrowGrenade("CherryBombPickup",40,3,random(-2,2));
			SLOT L 0 A_Jump(192,2);
			SLOT L 3 A_ThrowGrenade("CherryBombPickup",40,3,random(-2,2));
			SLOT L 0 A_Jump(192,2);
			SLOT L 3 A_ThrowGrenade("CherryBombPickup",40,3,random(-2,2));
			SLOT L 0 A_Jump(192,2);
			SLOT L 3 A_ThrowGrenade("CherryBombPickup",40,3,random(-2,2));
			SLOT L 12;
			SLOT A 3;
			SLOP Z -1;
			Stop;
		Spawn:
			SLOT AB 3;
			Loop;
		Inactive:
			SLOT AB 3;
			Loop;
	}
}

class ReelHeel_AppleWine : SwitchableDecoration
{
	default
	{
		//$Category EE Props
		Radius 20;
		Height 56;
		Mass 1000;
		+FLOORCLIP
		+SOLID
		+USESPECIAL
		Activation THINGSPEC_Activate;
	}
	
	States
	{
		Active:
			SLOT A 0 A_StartSound("misc/unlock");
			SLOP AB 10;
			SLOP A 3;
			SLOT A 3;
			SLOT A 0 A_StartSound("slots/jackpot");
			SLOT EGIEGIEGI 2 Bright;
			SLOT GHGHGHGHGHGH 2 Bright A_FaceTarget();
			SLOT K 6;
			SLOT L 0 A_StartSound("slots/burp");
			SLOT L 3 A_ThrowGrenade("AppleWine",40,3,random(-2,2));
			SLOT L 3 A_ThrowGrenade("AppleWine",40,3,random(-2,2));
			SLOT L 12;
			SLOT A 3;
			SLOP Z -1;
			Stop;
		Spawn:
			SLOT AB 3;
			Loop;
		Inactive:
			SLOT AB 3;
			Loop;
	}
}

class ReelHeel_Ammo : SwitchableDecoration
{
	default
	{
		//$Category EE Props
		Radius 20;
		Height 56;
		Mass 1000;
		+FLOORCLIP
		+SOLID
		+USESPECIAL
		Activation THINGSPEC_Activate;
	}
	
	States
	{
		Active:
			SLOT A 0 A_StartSound("misc/unlock");
			SLOP AB 10;
			SLOP A 3;
			SLOT A 3;
			SLOT A 0 A_StartSound("slots/jackpot");
			SLOT EGIEGIEGI 2 Bright;
			SLOT EFEFEFEFEFEF 2 Bright A_FaceTarget();
			SLOT K 6;
			SLOT L 0 A_StartSound("slots/burp");
			SLOT L 3 A_ThrowGrenade("MalletAmmo",40,3,random(-2,2));
			SLOT L 0 A_Jump(128,2);
			SLOT L 3 A_ThrowGrenade("BlunderAmmo",40,3,random(-2,2));
			SLOT L 0 A_Jump(128,2);
			SLOT L 3 A_ThrowGrenade("JackAmmo",40,3,random(-2,2));
			SLOT L 0 A_Jump(192,2);
			SLOT L 3 A_ThrowGrenade("EggAmmo",40,3,random(-2,2));
			SLOT L 3 A_ThrowGrenade("MalletAmmo",40,3,random(-2,2));
			SLOT L 0 A_Jump(128,2);
			SLOT L 3 A_ThrowGrenade("BlunderAmmo",40,3,random(-2,2));
			SLOT L 0 A_Jump(128,2);
			SLOT L 3 A_ThrowGrenade("JackAmmo",40,3,random(-2,2));
			SLOT L 0 A_Jump(192,2);
			SLOT L 3 A_ThrowGrenade("EggAmmo",40,3,random(-2,2));
			SLOT L 12;
			SLOT A 3;
			SLOP Z -1;
			Stop;
		Spawn:
			SLOT AB 3;
			Loop;
		Inactive:
			SLOT AB 3;
			Loop;
	}
}

class ReelHeel_Jackpot : SwitchableDecoration
{
	default
	{
		//$Category EE Props
		Radius 20;
		Height 56;
		Mass 1000;
		+FLOORCLIP
		+SOLID
		+USESPECIAL
		Activation THINGSPEC_Activate;
	}
	
	States
	{
		Active:
			SLOT A 0 A_StartSound("misc/unlock");
			SLOP AB 10;
			SLOP A 3;
			SLOT A 3;
			SLOT A 0 A_StartSound("slots/jackpot");
			SLOT EGIEGIEGI 2 Bright;
			SLOT EFEFEFEFEFEF 2 Bright A_FaceTarget();
			SLOT K 6;
			SLOT L 0 A_StartSound("slots/burp");
			SLOT LLLLLLLLLLLL 2 
			{
				actor player = players[0].mo;
				if (player.CountInv("IsCarnOfSouls")) A_ThrowGrenade("Money_Ducat",40,3,random(-2,2));
																				 else A_ThrowGrenade("ArcadeChip",40,3,random(-2,2));
			}
			SLOT LLLLLL 2 
			{
				actor player = players[0].mo;
				A_SetTics(0);
				if (random(1,8) <= 7)
				{
					A_SetTics(2);
					if (player.CountInv("IsCarnOfSouls")) A_ThrowGrenade("Money_Ducat",40,3,random(-2,2));
																					 else A_ThrowGrenade("ArcadeChip",40,3,random(-2,2));
				}
			}
			SLOT LLLLLL 2 
			{
				actor player = players[0].mo;
				A_SetTics(0);
				if (random(1,8) <= 5)
				{
					A_SetTics(2);
					if (player.CountInv("IsCarnOfSouls")) A_ThrowGrenade("Money_Ducat",40,3,random(-2,2));
																					 else A_ThrowGrenade("ArcadeChip",40,3,random(-2,2));
				}
			}
			SLOT LLLLLL 2 
			{
				actor player = players[0].mo;
				A_SetTics(0);
				if (random(1,8) <= 3)
				{
					A_SetTics(2);
					if (player.CountInv("IsCarnOfSouls")) A_ThrowGrenade("Money_Ducat",40,3,random(-2,2));
																					 else A_ThrowGrenade("ArcadeChip",40,3,random(-2,2));
				}
			}
			SLOT LLLLLL 2 
			{
				actor player = players[0].mo;
				A_SetTics(0);
				if (random(1,8) <= 1)
				{
					A_SetTics(2);
					if (player.CountInv("IsCarnOfSouls")) A_ThrowGrenade("Money_Ducat",40,3,random(-2,2));
																					 else A_ThrowGrenade("ArcadeChip",40,3,random(-2,2));
				}
			}
			SLOT A 3;
			SLOP Z -1;
			Stop;
		Spawn:
			SLOT AB 3;
			Loop;
		Inactive:
			SLOT AB 3;
			Loop;
	}
}

class Pianoman : SwitchableDecoration
{
	default
	{
		//$Category EE Props
		Radius 32;
		Height 46;
		Mass 1000;
		+FLOORCLIP
		+SOLID
		Activation THINGSPEC_Switch;
	}
	
	States
	{
		Spawn:
			PIAN AB 10;
			Loop;
		Active:
			PIAN AB 5;
			Loop;
		Inactive:
			PIAN AB 10;
			Loop;
	}
}

class Singer : SwitchableDecoration 
{
	default
	{
		//$Category EE Props
		Radius 20;
		Height 56;
		Mass 1000;
		+FLOORCLIP
		Activation THINGSPEC_Switch;
	}
	
	States
	{
		Spawn:
			SING WXYZWXYZ 6;
			Loop;
		Active:
			SING ABAB 5;
			SING EFGH 4;
			SING CDCD 5;
			SING EFGH 4;
			Loop;
		Inactive:
			SING WXYZWXYZ 6;
			Loop;
	}
}

class TreeSapling : SwitchingDecoration
{
	default
	{
		//$Category EE Props
		Radius 20;
		Height 56;
		Mass 1000;
		+FLOORCLIP
	}
	
	States
	{
		Spawn:
			OTRE A 1;
			Loop;
		Active:
			OTRE A 5 A_StartSound("dancer/danceattk",CHAN_BODY);
			OTRE BCD 7;
			OTRE E 7;
			OTRE E -1;
			Stop;
	}
}


class GalgoyleStatue_Flipped : SwitchingDecoration
{
	default
	{
		//$Category EE Props (Flipped)
		Height 56;
		Radius 20;
		Tag "Galgoyle Statue (Flipped)";
		+SPAWNCEILING
		+NOGRAVITY
	}
	
	States
	{
		Spawn:
			UTGR A -1;
			stop;
		Active:
			UTGR B -1;
			stop;
	}
}

class TeleportFogDD : Actor
{
	default
	{
		+NOBLOCKMAP
		+NOTELEPORT
		+NOGRAVITY
		+ZDOOMTRANS
		RenderStyle "Add";
	}
	States
	{
		Spawn:
			TELD ABCDEFGHGFEDC 6 Bright;
			Stop;
	}
	
	override void PostBeginPlay ()
	{
		Super.PostBeginPlay();
		A_StartSound("misc/teledd", CHAN_BODY);
	}
}