class DD_EventHandler : EventHandler
{
	/*
	override void NewGame()
	{
		//Console.Printf("NEWGAME");
		Super.NewGame();
	}
	
	override void WorldThingSpawned(WorldEvent e)
	{
		Super.WorldThingSpawned(e);
	}
	*/

	override void WorldThingDamaged(WorldEvent e)
	{
		int blundebuff = 0;
		int scramblerdebuff = 0;
		actor victim = e.Thing;
		actor source = e.DamageSource;
		actor inflicter = e.inflictor;
		int dmg = e.damage;
		int initdmg = e.damage;
		string mod = e.damagetype;
		int flags = e.DamageFlags;
		
		if (victim)
		{
			int oldhealth = victim.health;

			string victname = victim.GetTag();
			string atkrname = "(?)";
			int user_type;
			string vict = "NONE";
			string infl = "NONE";
			string sour = "NONE";
			int landdamagebonus;

			if (victim) vict = victim.GetClassName();
			if (inflicter) infl = inflicter.GetClassName();
			if (source) sour = source.GetClassName();

			bool showdmglog;
			bool practicetarget;
			
			/*
			// Ally Check
			actor IsRebel;
			if (vict != "DinahWyck" && sour == "DinahWyck")
			{
				if (victim.bFRIENDLY)
				{
					if (victim.master && victim.master.GetClassName() == "DinahWyck")
					{
						if (e.damage)
						{
							e.damage = 0;
							if (dydudebug_worlddamaged) Console.Printf("Victim is Player's ally! No Damage inflicted!");
							Super.WorldThingDamaged(e);
							return;
						}
					}
					else
					{
						if (IsRebel = Rebel(victim) && e.damage)
						{
							e.damage = 0;
							if (dydudebug_worlddamaged) Console.Printf("Victim is Strife Rebel! No Damage inflicted!");
							Super.WorldThingDamaged(e);
							return;
						}
					}
				}
			}
			*/
			
			if (victim.bCOUNTKILL) showdmglog = true;
			if (vict == "PracticeTarget" || vict == "PracticeTarget2") 
			{
				practicetarget = true;
				showdmglog = true;
			}
			if (vict == "BossBrainNew") showdmglog = true;
			if (vict == "DinahPlayer" || victname == "Dinah Wyck") showdmglog = false;
			if (showdmglog)
			{
				//Console.Printf("showdmglog");

				if (dydudebug_worlddamaged) Console.Printf("\c[purple]Attack: %s, \c[brick]Attacker: %s", infl, sour);
				
				if (victim.health > 0 && victim.bISMONSTER)
				{
					if (source && sour == "DinahPlayer") //
					{
						let MiscItem = PlayerStatItem(source.FindInventory("PlayerStatItem"));
						if (MiscItem) landdamagebonus = MiscItem.landdmgbonus;
						if (dydudebug_worlddamaged) Console.Printf("landdamagebonus: %d", landdamagebonus);
					}
					if (!practicetarget)
					{
						if (infl == "PlayerWhistle")
						{
							double ang;
							if (source) ang = source.angle;
							else if (inflicter) ang = inflicter.angle;
							double force = frandompick(13.75,15,16.25);
							force *= 0.25;
							if (inflicter && (source.CountInv("PowerStrength") || source.CountInv("PowerStrengthDD"))) force *= frandompick(1.5,2,2.5);

							victim.Vel.Z += force;
							victim.thrust(force, (ang + frandompick(-3,-1.5,-1.5,0,0,0,0,0,1.5,1.5,3)));
						}
						if (infl == "UppercutPuff")
						{
							double ang;
							if (source) ang = source.angle;
							else if (inflicter) ang = inflicter.angle;
							double force = frandompick(27.5,30,32.5);
							force *= 0.25;
							if (inflicter && (source.CountInv("PowerStrength") || source.CountInv("PowerStrengthDD"))) force *= frandompick(1.125,1.25,1.375);

							if (random(1,8) <= 1) force *= 1.5;
							victim.Vel.Z += force;
							victim.thrust(force, (ang + frandompick(-6,-3,-3,0,0,0,0,0,3,3,6)));
						}
					}

					if (!victim.bINVULNERABLE || !practicetarget)
					{
						// Scrambler = Inflicts confusion/fear on enemies occasionally, causing hestitation in combat
						if (infl == "PanPuff")
						{
							if (!victim.bNOFEAR)
							{
								int basedebuffchance = 4;
								if (victim.bBOSS) basedebuffchance *= 4;
								if (vict == "Cyberdemon") basedebuffchance *= 2;
								if (vict == "HellKnight" || vict == "BaronOfHell") basedebuffchance *= 1.334;
								if (vict == "Cacodemon" || vict == "PainElemental") basedebuffchance *= 1.25;
								if (vict == "Demon" || vict == "Spectre") basedebuffchance *= 1.125;
								if (vict == "Arachnotron" || vict == "Mancubus") basedebuffchance *= 0.75;
								if (vict == "Archvile" || vict == "Revenant") basedebuffchance *= 0.667;
								if (vict == "SpiderMastermind") basedebuffchance *= 0.334;
								if (vict == "LostSoul") basedebuffchance *= 0.1;
								if (landdamagebonus == 1) basedebuffchance *= 0.875;
								if (landdamagebonus == 2) basedebuffchance *= 0.700;
								if (landdamagebonus == 3) basedebuffchance *= 0.475;
								if (landdamagebonus == 4) basedebuffchance *= 0.200;
								if (source.CountInv("PowerStrength") || 
										source.CountInv("PowerStrengthDD") )
								{
									if (victim.bBOSS) basedebuffchance *= 0.1;
																else basedebuffchance *= 0.4;
								}
								if (basedebuffchance < 1) basedebuffchance = 1;
								//Console.Printf("basedebuffchance: 1 / %d", basedebuffchance);
								if (random(1,basedebuffchance) <= 1) victim.A_SetInventory("ScramblerConfusion",1);
							}
						}

						// Blunderaxe = Tears off Armor Scraps at times, and occasionally inflicts a "Helm Splitter" style defense debuff
						if (infl == "BlunderPuff")
						{
							int baseval = randompick(5,6,6,6,6,7,7,7,7,7,7,7,7,8,8,8,8,9);
							if (dydudebug_worlddamaged) Console.Printf("%d", baseval);
							if (random(1,(baseval)) == 1) victim.A_SpawnItemEx("ArmorScrap",frandom(-2,2),frandom(-2,2),frandom(-2,2),frandom(-2,2),frandom(-2,2),frandom(-2,2),SXF_NOCHECKPOSITION);
							if (random(1,(baseval*baseval)) == 1) victim.A_SpawnItemEx("ArmorScrap",frandom(-2,2),frandom(-2,2),frandom(-2,2),frandom(-2,2),frandom(-2,2),frandom(-2,2),SXF_NOCHECKPOSITION);
							if (random(1,(baseval*baseval*baseval)) == 1) victim.A_SpawnItemEx("ArmorScrap",frandom(-2,2),frandom(-2,2),frandom(-2,2),frandom(-2,2),frandom(-2,2),frandom(-2,2),SXF_NOCHECKPOSITION);
							if (random(1,(baseval*baseval*baseval*baseval)) == 1) victim.A_SpawnItemEx("ArmorScrap",frandom(-2,2),frandom(-2,2),frandom(-2,2),frandom(-2,2),frandom(-2,2),frandom(-2,2),SXF_NOCHECKPOSITION);
							if (random(1,(baseval*baseval*baseval*baseval*baseval)) == 1) victim.A_SpawnItemEx("ArmorScrap",frandom(-2,2),frandom(-2,2),frandom(-2,2),frandom(-2,2),frandom(-2,2),frandom(-2,2),SXF_NOCHECKPOSITION);
							if (random(1,(baseval*baseval*baseval*baseval*baseval*baseval)) == 1) victim.A_SpawnItemEx("ArmorScrap",frandom(-2,2),frandom(-2,2),frandom(-2,2),frandom(-2,2),frandom(-2,2),frandom(-2,2),SXF_NOCHECKPOSITION);
							
							int basedebuffchance = 4;
							if (vict == "LostSoul") basedebuffchance *= 10;
							if (vict == "Spidermastermind") basedebuffchance *= 2;
							if (vict == "Archvile" || vict == "Revenant") basedebuffchance *= 1.334;
							if (vict == "Demon" || vict == "Spectre") basedebuffchance *= 0.75;
							if (vict == "Cacodemon" || vict == "PainElemental") basedebuffchance *= 0.625;
							if (vict == "HellKnight" || vict == "BaronOfHell") basedebuffchance *= 0.5;
							if (vict == "Arachnotron" || vict == "Mancubus") basedebuffchance *= 0.25;
							if (vict == "Cyberdemon") basedebuffchance *= 0.334;
							if (victim.bBOSS) basedebuffchance *= 4;
							if (landdamagebonus == 1) basedebuffchance *= 0.875;
							if (landdamagebonus == 2) basedebuffchance *= 0.700;
							if (landdamagebonus == 3) basedebuffchance *= 0.475;
							if (landdamagebonus == 4) basedebuffchance *= 0.200;
							if (source.CountInv("PowerStrength") || source.CountInv("PowerStrengthDD") )
							{
								if (victim.bBOSS) basedebuffchance *= 0.1;
															else basedebuffchance *= 0.4;
							}
							if (basedebuffchance < 1) basedebuffchance = 1;
							
							if (random(1,basedebuffchance) <= 1) 
							{
								if (victim.CountInv("BlunderHelmSplitter3"))
								{
									blundebuff = 4;
								}
								else
								{
									if (victim.CountInv("BlunderHelmSplitter2"))
									{
										blundebuff = 3;
										victim.A_SetInventory("BlunderHelmSplitter3",1);
										victim.A_SetInventory("BlunderHelmSplitter2",0);
										victim.A_SetInventory("BlunderHelmSplitter",0);
									}
									else
									{
										if (victim.CountInv("BlunderHelmSplitter"))
										{
											victim.A_SetInventory("BlunderHelmSplitter3",0);
											victim.A_SetInventory("BlunderHelmSplitter2",1);
											victim.A_SetInventory("BlunderHelmSplitter",0);
											blundebuff = 2;
										}
										else
										{
											victim.A_SetInventory("BlunderHelmSplitter3",0);
											victim.A_SetInventory("BlunderHelmSplitter2",0);
											victim.A_SetInventory("BlunderHelmSplitter",1);
											blundebuff = 1;
										}
									}
								}
							}
						}
					}
				}
			}
			
			string attkernam;
			if (!victim.GetTag()) victname = vict;
			if (source)
			{
				if (source.GetTag()) attkernam = source.GetTag();
												else attkernam = source.GetClassName();
			}
			if (inflicter)
			{
				if (inflicter.GetTag()) atkrname = inflicter.GetTag();
													 else atkrname = inflicter.GetClassName();
			}
			string comblog = "";
			comblog.AppendFormat("\c[gray*\c- ");
			showdmglog = false;
			if (victim.bCOUNTKILL) showdmglog = true;
			if (vict == "PracticeTarget" || vict == "PracticeTarget2") showdmglog = true;
			if (vict == "BossBrainNew") showdmglog = true;
			if (vict == "DinahPlayer" || victname == "Dinah Wyck") showdmglog = false;
			if (exex_combatlog && showdmglog)
			{
				//Console.Printf("showdmglog 2");
				if (mod == 'NONE') mod = 'Typeless';
				if (dmg)
				{
					comblog.AppendFormat("\c[brick]%d\c- damage dealt to \c[red]%s\c- by", dmg, victname);
					if (inflicter && source && (inflicter != source)) comblog.AppendFormat(" \c[purple]%s's", attkernam);
					if (inflicter) comblog.AppendFormat(" \c[red]%s\c-!", atkrname);
					comblog.AppendFormat(" [\c[lightblue]%s\c-]", mod);
					if (victim.health <= 0) comblog.AppendFormat(" \c[brick]%s dies!\c-", victname);

					//if (victim.health <= 0) Console.Printf("\c[brick]%d\c- damage dealt to \c[red]%s\c- by \c[gold]%s\c-! [\c[lightblue]%s\c-] \c[brick]%s dies!", dmg, victname, atkrname, mod, victname);
					//else Console.Printf("\c[brick]%d\c- damage dealt to \c[red]%s\c- by \c[gold]%s\c-! [\c[lightblue]%s\c-]", dmg, victname, atkrname, mod);
				}
				else
				{
					comblog.AppendFormat("\c[red]%s\c- took \c[purple]no damage\c- from ", victname);
					if (inflicter && source && (inflicter != source)) comblog.AppendFormat("\c[purple]%s's", attkernam);
					if (inflicter) comblog.AppendFormat(" \c[red]%s\c-!", atkrname);
					comblog.AppendFormat(" [\c[lightblue]%s\c-]", mod);
				}
				if (dydudebug_showgametic) comblog.AppendFormat(" [%d]", gametic);

				Console.Printf(comblog);
				if (blundebuff && (victim.health > 0))
				{
					if (blundebuff >= 4) Console.Printf("\c[red]%s's\c- defense has already been dropped as much as it can!", victname);
					if (blundebuff == 3) Console.Printf("\c[red]%s's\c- defense dropped by yet another 20%!", victname);
					if (blundebuff == 2) Console.Printf("\c[red]%s's\c- defense dropped by another 20%!", victname);
					if (blundebuff == 1) Console.Printf("\c[red]%s's\c- defense dropped by 20%!", victname);
					if (blundebuff <= 3 && sour == "DinahPlayer") source.A_StartSound("Dinah/Gotcha",CHAN_VOICE,CHANF_DEFAULT,1.0,ATTN_NORM);
				}
			}
			
			bool makesound;
			string playedsound = "";
			PlayerPawn playpawn;
			Actor othermon;
			int playweaksound = 0;
			//*******************
			//* Weakness Sounds *
			//*******************
			int tempdmgval = 10000;
			double tempdmgfactor = victim.damagefactor;
			victim.damagefactor = 1.0;
			int moddedDMG = victim.ApplyDamageFactor(mod, tempdmgval);
			victim.damagefactor = tempdmgfactor;
			double outputdmgfactor = 1.0;
			outputdmgfactor *= moddedDMG;
			outputdmgfactor /= tempdmgval;
			if (vict != "PracticeTarget" || vict != "PracticeTarget2")
			{
				if (dmg > 0 && !(flags & DMG_NO_FACTOR)) 
				{
					if (!(mod == '' || mod == 'Normal' || mod == 'Crush' || mod == 'Falling' || mod == 'Drowning'))
					{
						if (moddedDMG <= (tempdmgval * 0.25)) playweaksound = -3;
						if (moddedDMG >= (tempdmgval * 0.25) && moddedDMG <= (tempdmgval * 0.3999999)) playweaksound = -2;
						if (moddedDMG >= (tempdmgval * 0.4) && moddedDMG <= (tempdmgval * 0.6666667)) playweaksound = -1;
						if (moddedDMG >= (tempdmgval * 1.5) && moddedDMG <= (tempdmgval * 2.4999999)) playweaksound = 1;
						if (moddedDMG >= (tempdmgval * 2.5) && moddedDMG <= (tempdmgval * 3.9999999)) playweaksound = 2;
						if (moddedDMG >= (tempdmgval * 4.0)) playweaksound = 3;
						//if (playweaksound > 0) victim.A_SetInventory("TookWeaknessHit",playweaksound);
						//else if (playweaksound < 0) victim.A_SetInventory("TookResistanceHit",(playweaksound*-1));
						if (dydudebug_hitsounds) Console.Printf("moddedDMG: %d (%.8f) (%s), playweaksound: %d, damagefactor: %.8f", moddedDMG, outputdmgfactor, mod, playweaksound, victim.damagefactor);
					}
				}
				if (dydudebug_hitsounds) Console.Printf("playweaksound: %d", playweaksound);

				string weakplayedsound = "";
				if (exex_hitweaksounds && victim.bISMONSTER && playweaksound != 0 && level.time >= victim.args[3] && vict != "HeresiarchNew")
				{
					victim.args[3] = (level.time + exex_q3aqchitsounddelay);
					if (dydudebug_hitsounds) Console.Printf("ws - %d [%d]", victim.args[3], level.time);
		
					if (playweaksound == -3) weakplayedsound = "Misc/ResistanceHitHigh";
					if (playweaksound == -2) weakplayedsound = "Misc/ResistanceHitMid";
					if (playweaksound == -1) weakplayedsound = "Misc/ResistanceHit";
					if (playweaksound == 1) weakplayedsound = "Misc/WeaknessHit";
					if (playweaksound == 2) weakplayedsound = "Misc/WeaknessHitMid";
					if (playweaksound == 3) weakplayedsound = "Misc/WeaknessHitHigh";
		
					if (initdmg > 0) makesound = true;
					//if (oldhealth > 0 && oldhealth > health) makesound = true;
					if (makesound)
					{
						if (source) 
						{
							if (dydudebug_hitsounds) Console.Printf("[weaksounds] source: %s", source.GetClassName());
							playpawn = PlayerPawn(source);
							if (victim.bFRIENDLY)
							{
								victim.A_StartSound(weakplayedsound, 11, CHANF_DEFAULT, (exex_hitweaksoundvol * frandom(0.75,1.25)), ATTN_NONE, 0.67);
							}
							else
							if (playpawn) 
							{
								if (dydudebug_hitsounds) Console.Printf("[weaksounds] playpawn: %s", playpawn.GetClassName());
								if (!victim.bFRIENDLY) victim.A_StartSound(weakplayedsound, 11, CHANF_DEFAULT, (exex_hitweaksoundvol * frandom(0.75,1.25)), ATTN_NONE, 1.0);
							}
							else
							{
								othermon = Actor(source);
								if (othermon) 
								{
									if (dydudebug_hitsounds) Console.Printf("[weaksounds] othermon: %s", othermon.GetClassName());
									if (othermon.bFRIENDLY && !victim.bFRIENDLY) victim.A_StartSound(weakplayedsound, 11, CHANF_DEFAULT, (exex_hitweaksoundvol * frandom(0.75,1.25)), ATTN_NONE, 1.5);
								}
							}
						}
					}
				}
			}
			if (victim.health <= 0 && exex_q3aqckillsounds2 && victim.bISMONSTER && (victim.bCOUNTKILL || vict == "BossBrainNew"))
			{
				if (source) 
				{
					if (dydudebug_hitsounds) Console.Printf("[deathsound] source: %s", source.GetClassName());
					playpawn = PlayerPawn(source);
					if (victim.bFRIENDLY)
					{
						if (exex_q3aqckillsoundtype == 0) playedsound = "misc/killsndAlly";
						if (exex_q3aqckillsoundtype == 1) playedsound = "misc/killsndDEDAlly";
						if (exex_q3aqckillsoundtype >= 0) 
						{
							victim.A_StopSound(12);
							victim.A_StartSound(playedsound, 12, CHANF_DEFAULT, (exex_q3aqckillsoundvol * frandom(0.75,1.25)), ATTN_NONE);
						}
					}
					else
					if (playpawn) 
					{
						if (dydudebug_hitsounds) Console.Printf("[deathsound] playpawn: %s", playpawn.GetClassName());
						if (!victim.bFRIENDLY)
						{
							if (exex_q3aqckillsoundtype == 0) playedsound = "misc/killsnd";
							if (exex_q3aqckillsoundtype == 1) playedsound = "misc/killsndDED";
							if (exex_q3aqckillsoundtype >= 0) 
							{
								victim.A_StopSound(12);
								victim.A_StartSound(playedsound, 12, CHANF_DEFAULT, (exex_q3aqckillsoundvol * frandom(0.75,1.25)), ATTN_NONE);
							}
						}
					}
					else
					{
						othermon = Actor(source);
						if (othermon) 
						{
							if (dydudebug_hitsounds) Console.Printf("[deathsound] othermon: %s", othermon.GetClassName());
							if (othermon.bFRIENDLY && !victim.bFRIENDLY)
							{
								if (exex_q3aqckillsoundtype == 0) playedsound = "misc/killsnd2";
								if (exex_q3aqckillsoundtype == 1) playedsound = "misc/killsndDED2";
								if (exex_q3aqckillsoundtype >= 0) 
								{
									victim.A_StopSound(12);
									victim.A_StartSound(playedsound, 12, CHANF_DEFAULT, (exex_q3aqckillsoundvol * frandom(0.75,1.25)), ATTN_NONE);
								}
							}
						}
					}
				}
			}
			if (exex_q3aqchitsounds2 && victim.bISMONSTER && (victim.bCOUNTKILL || vict == "BossBrainNew") && level.time >= victim.args[4] && vict != "HeresiarchNew")
			{
				victim.args[4] = (level.time + exex_q3aqchitsounddelay);
				if (dydudebug_hitsounds) Console.Printf("hs - %d [%d]", victim.args[4], level.time);
				
				if (source) 
				{
					if (dydudebug_hitsounds) Console.Printf("[hitsound] source: %s", source.GetClassName());
					playpawn = PlayerPawn(source);
					if (victim.bFRIENDLY)
					{
						if (exex_q3aqchitsoundtype == 0) playedsound = "misc/hitally";
						if (exex_q3aqchitsoundtype == 1) playedsound = "misc/hitpally";
						if (exex_q3aqchitsoundtype >= 0) 
						{
							victim.A_StopSound(13);
							victim.A_StartSound(playedsound, 13, CHANF_DEFAULT, (exex_q3aqchitsoundvol * frandom(0.75,1.25)), ATTN_NONE);
						}
					}
					else
					if (playpawn) 
					{
						if (dydudebug_hitsounds) Console.Printf("[hitsound] playpawn: %s", playpawn.GetClassName());
						if (!victim.bFRIENDLY)
						{
							if (exex_q3aqchitsoundtype == 0) playedsound = "misc/hit";
							if (exex_q3aqchitsoundtype == 1) playedsound = "misc/hitpunch";
							if (exex_q3aqchitsoundtype >= 0) 
							{
								victim.A_StopSound(13);
								victim.A_StartSound(playedsound, 13, CHANF_DEFAULT, (exex_q3aqchitsoundvol * frandom(0.75,1.25)), ATTN_NONE);
							}
						}
					}
					else
					{
						othermon = Actor(source);
						if (othermon) 
						{
							if (dydudebug_hitsounds) Console.Printf("[hitsound] othermon: %s", othermon.GetClassName());
							if (othermon.bFRIENDLY && !victim.bFRIENDLY)
							{
								if (exex_q3aqchitsoundtype == 0) playedsound = "misc/hit2";
								if (exex_q3aqchitsoundtype == 1) playedsound = "misc/hitpunch2";
								if (exex_q3aqchitsoundtype >= 0) 
								{
									victim.A_StopSound(13);
									victim.A_StartSound(playedsound, 13, CHANF_DEFAULT, (exex_q3aqchitsoundvol * frandom(0.75,1.25)), ATTN_NONE);
								}
							}
						}
					}
				}
			}
		}
		
		// Adding in Argv's SingleDamageRipper code :V
		if (inflicter is "SingleDamageRipper")
		{
			SingleDamageRipper(inflicter).ActorsAlreadyHit.Push(victim);
			SingleDamageRipper(inflicter).timesrippedoverall++;
			if (SingleDamageRipper(inflicter).timesrippedoverall < 0) SingleDamageFastRipper(inflicter).timesrippedoverall = 0;
		}

		if (inflicter is "SingleDamageFastRipper")
		{
			SingleDamageFastRipper(inflicter).ActorsAlreadyHit.Push(victim);
			SingleDamageFastRipper(inflicter).timesrippedoverall++;
			if (SingleDamageFastRipper(inflicter).timesrippedoverall < 0) SingleDamageFastRipper(inflicter).timesrippedoverall = 0;
		}

		Super.WorldThingDamaged(e);
	}
	
	override void WorldThingDied(WorldEvent e)
	{
		actor victim = e.Thing;
		actor inflicter = e.inflictor;
		actor source;
		actor mastor;
		if (inflicter && inflicter.target) source = inflicter.target;
		if (inflicter && inflicter.master) mastor = inflicter.master;
		string vict = "NONE";
		string infl = "NONE";
		string sour = "NONE";
		string mast = "NONE";
		if (victim) vict = victim.GetClassName();
		if (inflicter) infl = inflicter.GetClassName();
		if (source) sour = source.GetClassName();
		if (mastor) mast = mastor.GetClassName();

		if (victim)
		{
			if (!(vict == "DinahPlayer") || victim.bCOUNTKILL)
			{
				actor Player = players[0].mo;
				bool giveexp;
				int user_type;
				
				if (dydudebug_worlddied) Console.Printf("\c[purple]Attack: %s, \c[brick]Attacker: %s", infl, sour);
				if (victim.bCOUNTKILL && !victim.bFRIENDLY && inflicter)
				{
					if (inflicter) 
					{
						if (inflicter.bFRIENDLY || infl == "DinahWyck") giveexp = true;
						//Console.Printf("inflictor: %s  [%d]", infl, inflicter.bFRIENDLY);
					}
					if (source) 
					{
						if (source.bFRIENDLY || sour == "DinahWyck") giveexp = true;
						//Console.Printf("inflictor.target: %s [%d]", sour, source.bFRIENDLY);
					}
					if (mastor) 
					{
						if (mastor.bFRIENDLY || mast == "DinahWyck") giveexp = true;
						//Console.Printf("inflictor.master: %s [%d]", mast, mastor.bFRIENDLY);
					}

					int ExpGain = ((victim.spawnhealth()*frandom(0.05,0.125)));
					if (source && source.bFRIENDLY) ExpGain *= frandom(0.65,0.90);
					if (inflicter && inflicter.bFRIENDLY) ExpGain *= frandom(0.65,0.90);
					if (sour == "DinahPlayer" && infl == "PlayerWhistle") ExpGain *= frandom(4.0,5.0);
					if (vict == "KilletanteSoloist") ExpGain *= frandom(3.25,4);
					if (giveexp)
					{
						Actor player = players[0].mo;
						if (ExpGain < 1) ExpGain = 1;

						Player.A_GiveInventory("KillsCount",1);
						Player.A_GiveInventory("ExpPts",ExpGain);
						int Kills = Player.CountInv("KillsCount");
						int ExpNew = Player.CountInv("ExpPts");
						int ExpNeeded = Player.CountInv("ExpPtsNeeded");
						int PlayerLevel = Player.CountInv("PlayerLevel");

						if (exex_showexpgains) Console.Printf("\c[green]+%d EXP! \c[darkgreen][Have: %d / %d (Lvl: %d)] \c[red](Kills: %d)", ExpGain, ExpNew, ExpNeeded, PlayerLevel, Kills);
					}
				}
				
				// Drop Tables
				int droptimes;
				int basechance;
				int maxchance;
				int scraprolls;
				if (!victim.bFRIENDLY && victim.bCOUNTKILL)
				{
					droptimes = 1;
					if (inflicter && ((source && sour == "DinahPlayer")))
					{
						let MiscItem = PlayerStatItem(source.FindInventory("PlayerStatItem"));
						if (MiscItem && MiscItem.PlayerLevel >= 35) droptimes += (MiscItem.PlayerLevel / 35);
					}
					else
					if (inflicter && infl == "DinahPlayer")
					{
						let MiscItem = PlayerStatItem(inflicter.FindInventory("PlayerStatItem"));
						if (MiscItem && MiscItem.PlayerLevel >= 35) droptimes += (MiscItem.PlayerLevel / 35);
					}
					if (victim.bBOSS) droptimes *= 4;

					for (int i; i < droptimes; i++)
					{
						// Specific Drops from Specific Monsters
						let monsterp = Actor(victim);
						if (monsterp = FireDemon(victim))
						{
							if (random(1,256) <= 8) 
							{
								user_type = random(1,4);
								if (user_type == 1) victim.A_SpawnItemEx("MalletAmmo",frandom(-2,2),frandom(-2,2),frandom(-2,2),frandom(-2,2),frandom(-2,2),frandom(-2,2),SXF_NOCHECKPOSITION);
								if (user_type == 2) victim.A_SpawnItemEx("JackAmmo",frandom(-2,2),frandom(-2,2),frandom(-2,2),frandom(-2,2),frandom(-2,2),frandom(-2,2),SXF_NOCHECKPOSITION);
								if (user_type == 3) victim.A_SpawnItemEx("BlunderAmmo",frandom(-2,2),frandom(-2,2),frandom(-2,2),frandom(-2,2),frandom(-2,2),frandom(-2,2),SXF_NOCHECKPOSITION);
								if (user_type == 4) victim.A_SpawnItemEx("CandleAmmo",frandom(-2,2),frandom(-2,2),frandom(-2,2),frandom(-2,2),frandom(-2,2),frandom(-2,2),SXF_NOCHECKPOSITION);
							}
							if (random(1,256) <= 1) 
							{
								user_type = random(1,4);
								if (user_type == 1) victim.A_SpawnItemEx("EggAmmo",frandom(-2,2),frandom(-2,2),frandom(-2,2),frandom(-2,2),frandom(-2,2),frandom(-2,2),SXF_NOCHECKPOSITION);
								if (user_type == 2) victim.A_SpawnItemEx("PikeAmmo",frandom(-2,2),frandom(-2,2),frandom(-2,2),frandom(-2,2),frandom(-2,2),frandom(-2,2),SXF_NOCHECKPOSITION);
								if (user_type == 3) victim.A_SpawnItemEx("MusicAmmo",frandom(-2,2),frandom(-2,2),frandom(-2,2),frandom(-2,2),frandom(-2,2),frandom(-2,2),SXF_NOCHECKPOSITION);
								if (user_type == 4) victim.A_SpawnItemEx("VacAmmo",frandom(-2,2),frandom(-2,2),frandom(-2,2),frandom(-2,2),frandom(-2,2),frandom(-2,2),SXF_NOCHECKPOSITION);
							}
						}
						if (monsterp = Ettin(victim))
						{
							if (random(1,256) <= 32) 
							{
								user_type = random(1,4);
								if (user_type == 1) victim.A_SpawnItemEx("MalletAmmo",frandom(-2,2),frandom(-2,2),frandom(-2,2),frandom(-2,2),frandom(-2,2),frandom(-2,2),SXF_NOCHECKPOSITION);
								if (user_type == 2) victim.A_SpawnItemEx("JackAmmo",frandom(-2,2),frandom(-2,2),frandom(-2,2),frandom(-2,2),frandom(-2,2),frandom(-2,2),SXF_NOCHECKPOSITION);
								if (user_type == 3) victim.A_SpawnItemEx("BlunderAmmo",frandom(-2,2),frandom(-2,2),frandom(-2,2),frandom(-2,2),frandom(-2,2),frandom(-2,2),SXF_NOCHECKPOSITION);
								if (user_type == 4) victim.A_SpawnItemEx("CandleAmmo",frandom(-2,2),frandom(-2,2),frandom(-2,2),frandom(-2,2),frandom(-2,2),frandom(-2,2),SXF_NOCHECKPOSITION);
							}
							if (random(1,256) <= 4) 
							{
								user_type = random(1,4);
								if (user_type == 1) victim.A_SpawnItemEx("EggAmmo",frandom(-2,2),frandom(-2,2),frandom(-2,2),frandom(-2,2),frandom(-2,2),frandom(-2,2),SXF_NOCHECKPOSITION);
								if (user_type == 2) victim.A_SpawnItemEx("PikeAmmo",frandom(-2,2),frandom(-2,2),frandom(-2,2),frandom(-2,2),frandom(-2,2),frandom(-2,2),SXF_NOCHECKPOSITION);
								if (user_type == 3) victim.A_SpawnItemEx("MusicAmmo",frandom(-2,2),frandom(-2,2),frandom(-2,2),frandom(-2,2),frandom(-2,2),frandom(-2,2),SXF_NOCHECKPOSITION);
								if (user_type == 4) victim.A_SpawnItemEx("VacAmmo",frandom(-2,2),frandom(-2,2),frandom(-2,2),frandom(-2,2),frandom(-2,2),frandom(-2,2),SXF_NOCHECKPOSITION);
							}
						}
						if (monsterp = Centaur(victim))
						{
							if (random(1,256) <= 24) 
							{
								user_type = random(1,4);
								if (user_type == 1) victim.A_SpawnItemEx("MalletAmmo",frandom(-2,2),frandom(-2,2),frandom(-2,2),frandom(-2,2),frandom(-2,2),frandom(-2,2),SXF_NOCHECKPOSITION);
								if (user_type == 2) victim.A_SpawnItemEx("JackAmmo",frandom(-2,2),frandom(-2,2),frandom(-2,2),frandom(-2,2),frandom(-2,2),frandom(-2,2),SXF_NOCHECKPOSITION);
								if (user_type == 3) victim.A_SpawnItemEx("BlunderAmmo",frandom(-2,2),frandom(-2,2),frandom(-2,2),frandom(-2,2),frandom(-2,2),frandom(-2,2),SXF_NOCHECKPOSITION);
								if (user_type == 4) victim.A_SpawnItemEx("CandleAmmo",frandom(-2,2),frandom(-2,2),frandom(-2,2),frandom(-2,2),frandom(-2,2),frandom(-2,2),SXF_NOCHECKPOSITION);
							}
							if (random(1,256) <= 3) 
							{
								user_type = random(1,4);
								if (user_type == 1) victim.A_SpawnItemEx("EggAmmo",frandom(-2,2),frandom(-2,2),frandom(-2,2),frandom(-2,2),frandom(-2,2),frandom(-2,2),SXF_NOCHECKPOSITION);
								if (user_type == 2) victim.A_SpawnItemEx("PikeAmmo",frandom(-2,2),frandom(-2,2),frandom(-2,2),frandom(-2,2),frandom(-2,2),frandom(-2,2),SXF_NOCHECKPOSITION);
								if (user_type == 3) victim.A_SpawnItemEx("MusicAmmo",frandom(-2,2),frandom(-2,2),frandom(-2,2),frandom(-2,2),frandom(-2,2),frandom(-2,2),SXF_NOCHECKPOSITION);
								if (user_type == 4) victim.A_SpawnItemEx("VacAmmo",frandom(-2,2),frandom(-2,2),frandom(-2,2),frandom(-2,2),frandom(-2,2),frandom(-2,2),SXF_NOCHECKPOSITION);
							}
						}
						if (monsterp = CentaurLeader(victim))
						{
							if (random(1,256) <= 48) 
							{
								user_type = random(1,4);
								if (user_type == 1) victim.A_SpawnItemEx("MalletAmmo",frandom(-2,2),frandom(-2,2),frandom(-2,2),frandom(-2,2),frandom(-2,2),frandom(-2,2),SXF_NOCHECKPOSITION);
								if (user_type == 2) victim.A_SpawnItemEx("JackAmmo",frandom(-2,2),frandom(-2,2),frandom(-2,2),frandom(-2,2),frandom(-2,2),frandom(-2,2),SXF_NOCHECKPOSITION);
								if (user_type == 3) victim.A_SpawnItemEx("BlunderAmmo",frandom(-2,2),frandom(-2,2),frandom(-2,2),frandom(-2,2),frandom(-2,2),frandom(-2,2),SXF_NOCHECKPOSITION);
								if (user_type == 4) victim.A_SpawnItemEx("CandleAmmo",frandom(-2,2),frandom(-2,2),frandom(-2,2),frandom(-2,2),frandom(-2,2),frandom(-2,2),SXF_NOCHECKPOSITION);
							}
							if (random(1,256) <= 6) 
							{
								user_type = random(1,4);
								if (user_type == 1) victim.A_SpawnItemEx("EggAmmo",frandom(-2,2),frandom(-2,2),frandom(-2,2),frandom(-2,2),frandom(-2,2),frandom(-2,2),SXF_NOCHECKPOSITION);
								if (user_type == 2) victim.A_SpawnItemEx("PikeAmmo",frandom(-2,2),frandom(-2,2),frandom(-2,2),frandom(-2,2),frandom(-2,2),frandom(-2,2),SXF_NOCHECKPOSITION);
								if (user_type == 3) victim.A_SpawnItemEx("MusicAmmo",frandom(-2,2),frandom(-2,2),frandom(-2,2),frandom(-2,2),frandom(-2,2),frandom(-2,2),SXF_NOCHECKPOSITION);
								if (user_type == 4) victim.A_SpawnItemEx("VacAmmo",frandom(-2,2),frandom(-2,2),frandom(-2,2),frandom(-2,2),frandom(-2,2),frandom(-2,2),SXF_NOCHECKPOSITION);
							}
						}
						if (monsterp = Serpent(victim))
						{
							if (random(1,256) <= 32) 
							{
								user_type = random(1,4);
								if (user_type == 1) victim.A_SpawnItemEx("MalletAmmo",frandom(-2,2),frandom(-2,2),frandom(-2,2),frandom(-2,2),frandom(-2,2),frandom(-2,2),SXF_NOCHECKPOSITION);
								if (user_type == 2) victim.A_SpawnItemEx("JackAmmo",frandom(-2,2),frandom(-2,2),frandom(-2,2),frandom(-2,2),frandom(-2,2),frandom(-2,2),SXF_NOCHECKPOSITION);
								if (user_type == 3) victim.A_SpawnItemEx("BlunderAmmo",frandom(-2,2),frandom(-2,2),frandom(-2,2),frandom(-2,2),frandom(-2,2),frandom(-2,2),SXF_NOCHECKPOSITION);
								if (user_type == 4) victim.A_SpawnItemEx("CandleAmmo",frandom(-2,2),frandom(-2,2),frandom(-2,2),frandom(-2,2),frandom(-2,2),frandom(-2,2),SXF_NOCHECKPOSITION);
							}
							if (random(1,256) <= 4) 
							{
								user_type = random(1,4);
								if (user_type == 1) victim.A_SpawnItemEx("EggAmmo",frandom(-2,2),frandom(-2,2),frandom(-2,2),frandom(-2,2),frandom(-2,2),frandom(-2,2),SXF_NOCHECKPOSITION);
								if (user_type == 2) victim.A_SpawnItemEx("PikeAmmo",frandom(-2,2),frandom(-2,2),frandom(-2,2),frandom(-2,2),frandom(-2,2),frandom(-2,2),SXF_NOCHECKPOSITION);
								if (user_type == 3) victim.A_SpawnItemEx("MusicAmmo",frandom(-2,2),frandom(-2,2),frandom(-2,2),frandom(-2,2),frandom(-2,2),frandom(-2,2),SXF_NOCHECKPOSITION);
								if (user_type == 4) victim.A_SpawnItemEx("VacAmmo",frandom(-2,2),frandom(-2,2),frandom(-2,2),frandom(-2,2),frandom(-2,2),frandom(-2,2),SXF_NOCHECKPOSITION);
							}
						}
						if (monsterp = SerpentLeader(victim))
						{
							if (random(1,256) <= 48) 
							{
								user_type = random(1,4);
								if (user_type == 1) victim.A_SpawnItemEx("MalletAmmo",frandom(-2,2),frandom(-2,2),frandom(-2,2),frandom(-2,2),frandom(-2,2),frandom(-2,2),SXF_NOCHECKPOSITION);
								if (user_type == 2) victim.A_SpawnItemEx("JackAmmo",frandom(-2,2),frandom(-2,2),frandom(-2,2),frandom(-2,2),frandom(-2,2),frandom(-2,2),SXF_NOCHECKPOSITION);
								if (user_type == 3) victim.A_SpawnItemEx("BlunderAmmo",frandom(-2,2),frandom(-2,2),frandom(-2,2),frandom(-2,2),frandom(-2,2),frandom(-2,2),SXF_NOCHECKPOSITION);
								if (user_type == 4) victim.A_SpawnItemEx("CandleAmmo",frandom(-2,2),frandom(-2,2),frandom(-2,2),frandom(-2,2),frandom(-2,2),frandom(-2,2),SXF_NOCHECKPOSITION);
							}
							if (random(1,256) <= 6) 
							{
								user_type = random(1,4);
								if (user_type == 1) victim.A_SpawnItemEx("EggAmmo",frandom(-2,2),frandom(-2,2),frandom(-2,2),frandom(-2,2),frandom(-2,2),frandom(-2,2),SXF_NOCHECKPOSITION);
								if (user_type == 2) victim.A_SpawnItemEx("PikeAmmo",frandom(-2,2),frandom(-2,2),frandom(-2,2),frandom(-2,2),frandom(-2,2),frandom(-2,2),SXF_NOCHECKPOSITION);
								if (user_type == 3) victim.A_SpawnItemEx("MusicAmmo",frandom(-2,2),frandom(-2,2),frandom(-2,2),frandom(-2,2),frandom(-2,2),frandom(-2,2),SXF_NOCHECKPOSITION);
								if (user_type == 4) victim.A_SpawnItemEx("VacAmmo",frandom(-2,2),frandom(-2,2),frandom(-2,2),frandom(-2,2),frandom(-2,2),frandom(-2,2),SXF_NOCHECKPOSITION);
							}
						}
						if (monsterp = Bishop(victim))
						{
							if (random(1,256) <= 16) 
							{
								user_type = random(1,4);
								if (user_type == 1) victim.A_SpawnItemEx("MalletAmmo",frandom(-2,2),frandom(-2,2),frandom(-2,2),frandom(-2,2),frandom(-2,2),frandom(-2,2),SXF_NOCHECKPOSITION);
								if (user_type == 2) victim.A_SpawnItemEx("JackAmmo",frandom(-2,2),frandom(-2,2),frandom(-2,2),frandom(-2,2),frandom(-2,2),frandom(-2,2),SXF_NOCHECKPOSITION);
								if (user_type == 3) victim.A_SpawnItemEx("BlunderAmmo",frandom(-2,2),frandom(-2,2),frandom(-2,2),frandom(-2,2),frandom(-2,2),frandom(-2,2),SXF_NOCHECKPOSITION);
								if (user_type == 4) victim.A_SpawnItemEx("CandleAmmo",frandom(-2,2),frandom(-2,2),frandom(-2,2),frandom(-2,2),frandom(-2,2),frandom(-2,2),SXF_NOCHECKPOSITION);
							}
							if (random(1,256) <= 2) 
							{
								user_type = random(1,4);
								if (user_type == 1) victim.A_SpawnItemEx("EggAmmo",frandom(-2,2),frandom(-2,2),frandom(-2,2),frandom(-2,2),frandom(-2,2),frandom(-2,2),SXF_NOCHECKPOSITION);
								if (user_type == 2) victim.A_SpawnItemEx("PikeAmmo",frandom(-2,2),frandom(-2,2),frandom(-2,2),frandom(-2,2),frandom(-2,2),frandom(-2,2),SXF_NOCHECKPOSITION);
								if (user_type == 3) victim.A_SpawnItemEx("MusicAmmo",frandom(-2,2),frandom(-2,2),frandom(-2,2),frandom(-2,2),frandom(-2,2),frandom(-2,2),SXF_NOCHECKPOSITION);
								if (user_type == 4) victim.A_SpawnItemEx("VacAmmo",frandom(-2,2),frandom(-2,2),frandom(-2,2),frandom(-2,2),frandom(-2,2),frandom(-2,2),SXF_NOCHECKPOSITION);
							}
						}
						if (monsterp = Wraith(victim))
						{
							if (random(1,256) <= 24) 
							{
								user_type = random(1,4);
								if (user_type == 1) victim.A_SpawnItemEx("MalletAmmo",frandom(-2,2),frandom(-2,2),frandom(-2,2),frandom(-2,2),frandom(-2,2),frandom(-2,2),SXF_NOCHECKPOSITION);
								if (user_type == 2) victim.A_SpawnItemEx("JackAmmo",frandom(-2,2),frandom(-2,2),frandom(-2,2),frandom(-2,2),frandom(-2,2),frandom(-2,2),SXF_NOCHECKPOSITION);
								if (user_type == 3) victim.A_SpawnItemEx("BlunderAmmo",frandom(-2,2),frandom(-2,2),frandom(-2,2),frandom(-2,2),frandom(-2,2),frandom(-2,2),SXF_NOCHECKPOSITION);
								if (user_type == 4) victim.A_SpawnItemEx("CandleAmmo",frandom(-2,2),frandom(-2,2),frandom(-2,2),frandom(-2,2),frandom(-2,2),frandom(-2,2),SXF_NOCHECKPOSITION);
							}
							if (random(1,256) <= 3) 
							{
								user_type = random(1,4);
								if (user_type == 1) victim.A_SpawnItemEx("EggAmmo",frandom(-2,2),frandom(-2,2),frandom(-2,2),frandom(-2,2),frandom(-2,2),frandom(-2,2),SXF_NOCHECKPOSITION);
								if (user_type == 2) victim.A_SpawnItemEx("PikeAmmo",frandom(-2,2),frandom(-2,2),frandom(-2,2),frandom(-2,2),frandom(-2,2),frandom(-2,2),SXF_NOCHECKPOSITION);
								if (user_type == 3) victim.A_SpawnItemEx("MusicAmmo",frandom(-2,2),frandom(-2,2),frandom(-2,2),frandom(-2,2),frandom(-2,2),frandom(-2,2),SXF_NOCHECKPOSITION);
								if (user_type == 4) victim.A_SpawnItemEx("VacAmmo",frandom(-2,2),frandom(-2,2),frandom(-2,2),frandom(-2,2),frandom(-2,2),frandom(-2,2),SXF_NOCHECKPOSITION);
							}
						}
						if (monsterp = Demon1(victim))
						{
							if (random(1,256) <= 32) 
							{
								user_type = random(1,4);
								if (user_type == 1) victim.A_SpawnItemEx("MalletAmmo",frandom(-2,2),frandom(-2,2),frandom(-2,2),frandom(-2,2),frandom(-2,2),frandom(-2,2),SXF_NOCHECKPOSITION);
								if (user_type == 2) victim.A_SpawnItemEx("JackAmmo",frandom(-2,2),frandom(-2,2),frandom(-2,2),frandom(-2,2),frandom(-2,2),frandom(-2,2),SXF_NOCHECKPOSITION);
								if (user_type == 3) victim.A_SpawnItemEx("BlunderAmmo",frandom(-2,2),frandom(-2,2),frandom(-2,2),frandom(-2,2),frandom(-2,2),frandom(-2,2),SXF_NOCHECKPOSITION);
								if (user_type == 4) victim.A_SpawnItemEx("CandleAmmo",frandom(-2,2),frandom(-2,2),frandom(-2,2),frandom(-2,2),frandom(-2,2),frandom(-2,2),SXF_NOCHECKPOSITION);
							}
							if (random(1,256) <= 4) 
							{
								user_type = random(1,4);
								if (user_type == 1) victim.A_SpawnItemEx("EggAmmo",frandom(-2,2),frandom(-2,2),frandom(-2,2),frandom(-2,2),frandom(-2,2),frandom(-2,2),SXF_NOCHECKPOSITION);
								if (user_type == 2) victim.A_SpawnItemEx("PikeAmmo",frandom(-2,2),frandom(-2,2),frandom(-2,2),frandom(-2,2),frandom(-2,2),frandom(-2,2),SXF_NOCHECKPOSITION);
								if (user_type == 3) victim.A_SpawnItemEx("MusicAmmo",frandom(-2,2),frandom(-2,2),frandom(-2,2),frandom(-2,2),frandom(-2,2),frandom(-2,2),SXF_NOCHECKPOSITION);
								if (user_type == 4) victim.A_SpawnItemEx("VacAmmo",frandom(-2,2),frandom(-2,2),frandom(-2,2),frandom(-2,2),frandom(-2,2),frandom(-2,2),SXF_NOCHECKPOSITION);
							}
						}
						if (monsterp = Demon2(victim))
						{
							if (random(1,256) <= 32) 
							{
								user_type = random(1,4);
								if (user_type == 1) victim.A_SpawnItemEx("MalletAmmo",frandom(-2,2),frandom(-2,2),frandom(-2,2),frandom(-2,2),frandom(-2,2),frandom(-2,2),SXF_NOCHECKPOSITION);
								if (user_type == 2) victim.A_SpawnItemEx("JackAmmo",frandom(-2,2),frandom(-2,2),frandom(-2,2),frandom(-2,2),frandom(-2,2),frandom(-2,2),SXF_NOCHECKPOSITION);
								if (user_type == 3) victim.A_SpawnItemEx("BlunderAmmo",frandom(-2,2),frandom(-2,2),frandom(-2,2),frandom(-2,2),frandom(-2,2),frandom(-2,2),SXF_NOCHECKPOSITION);
								if (user_type == 4) victim.A_SpawnItemEx("CandleAmmo",frandom(-2,2),frandom(-2,2),frandom(-2,2),frandom(-2,2),frandom(-2,2),frandom(-2,2),SXF_NOCHECKPOSITION);
							}
							if (random(1,256) <= 4) 
							{
								user_type = random(1,4);
								if (user_type == 1) victim.A_SpawnItemEx("EggAmmo",frandom(-2,2),frandom(-2,2),frandom(-2,2),frandom(-2,2),frandom(-2,2),frandom(-2,2),SXF_NOCHECKPOSITION);
								if (user_type == 2) victim.A_SpawnItemEx("PikeAmmo",frandom(-2,2),frandom(-2,2),frandom(-2,2),frandom(-2,2),frandom(-2,2),frandom(-2,2),SXF_NOCHECKPOSITION);
								if (user_type == 3) victim.A_SpawnItemEx("MusicAmmo",frandom(-2,2),frandom(-2,2),frandom(-2,2),frandom(-2,2),frandom(-2,2),frandom(-2,2),SXF_NOCHECKPOSITION);
								if (user_type == 4) victim.A_SpawnItemEx("VacAmmo",frandom(-2,2),frandom(-2,2),frandom(-2,2),frandom(-2,2),frandom(-2,2),frandom(-2,2),SXF_NOCHECKPOSITION);
							}
						}
						if (monsterp = IceGuy(victim))
						{
							if (random(1,256) <= 80) 
							{
								user_type = random(1,4);
								if (user_type == 1) victim.A_SpawnItemEx("MalletAmmo",frandom(-2,2),frandom(-2,2),frandom(-2,2),frandom(-2,2),frandom(-2,2),frandom(-2,2),SXF_NOCHECKPOSITION);
								if (user_type == 2) victim.A_SpawnItemEx("JackAmmo",frandom(-2,2),frandom(-2,2),frandom(-2,2),frandom(-2,2),frandom(-2,2),frandom(-2,2),SXF_NOCHECKPOSITION);
								if (user_type == 3) victim.A_SpawnItemEx("BlunderAmmo",frandom(-2,2),frandom(-2,2),frandom(-2,2),frandom(-2,2),frandom(-2,2),frandom(-2,2),SXF_NOCHECKPOSITION);
								if (user_type == 4) victim.A_SpawnItemEx("CandleAmmo",frandom(-2,2),frandom(-2,2),frandom(-2,2),frandom(-2,2),frandom(-2,2),frandom(-2,2),SXF_NOCHECKPOSITION);
							}
							if (random(1,256) <= 10) 
							{
								user_type = random(1,4);
								if (user_type == 1) victim.A_SpawnItemEx("EggAmmo",frandom(-2,2),frandom(-2,2),frandom(-2,2),frandom(-2,2),frandom(-2,2),frandom(-2,2),SXF_NOCHECKPOSITION);
								if (user_type == 2) victim.A_SpawnItemEx("PikeAmmo",frandom(-2,2),frandom(-2,2),frandom(-2,2),frandom(-2,2),frandom(-2,2),frandom(-2,2),SXF_NOCHECKPOSITION);
								if (user_type == 3) victim.A_SpawnItemEx("MusicAmmo",frandom(-2,2),frandom(-2,2),frandom(-2,2),frandom(-2,2),frandom(-2,2),frandom(-2,2),SXF_NOCHECKPOSITION);
								if (user_type == 4) victim.A_SpawnItemEx("VacAmmo",frandom(-2,2),frandom(-2,2),frandom(-2,2),frandom(-2,2),frandom(-2,2),frandom(-2,2),SXF_NOCHECKPOSITION);
							}
						}

						// Heal Items
						basechance = 256;
						maxchance = basechance;
						if (infl == "BatPuff" || infl == "BatPuffNoSound") maxchance = (basechance * 0.5);
						if (infl == "ApplePuff") maxchance = randompick((basechance * 0.375),(basechance * 0.4375),(basechance * 0.5),(basechance * 0.5625),(basechance * 0.625));
						if (infl == "BlunderPuff") maxchance = randompick((basechance * 0.75),(basechance * 0.875),(basechance),(basechance * 1.125),(basechance * 1.25));
						if (infl == "RecordShot") maxchance = randompick((basechance * 1.5),(basechance * 1.75),(basechance * 2),(basechance * 2.25),(basechance * 2.5));
						if (infl == "VacPuff") maxchance = (basechance * 16);
						if (random(1,(maxchance)) == 1) victim.A_SpawnItemEx("GalaApple",frandom(-2,2),frandom(-2,2),frandom(-2,2),frandom(-2,2),frandom(-2,2),frandom(-2,2),SXF_NOCHECKPOSITION);
						if (random(1,(maxchance)) == 1) victim.A_SpawnItemEx("FoodPlateFruit",frandom(-2,2),frandom(-2,2),frandom(-2,2),frandom(-2,2),frandom(-2,2),frandom(-2,2),SXF_NOCHECKPOSITION);
						if (random(1,(maxchance*2)) == 1) victim.A_SpawnItemEx("AppleWine",frandom(-2,2),frandom(-2,2),frandom(-2,2),frandom(-2,2),frandom(-2,2),frandom(-2,2),SXF_NOCHECKPOSITION);
						if (random(1,(maxchance*4)) == 1) victim.A_SpawnItemEx("TurkeyDinner",frandom(-2,2),frandom(-2,2),frandom(-2,2),frandom(-2,2),frandom(-2,2),frandom(-2,2),SXF_NOCHECKPOSITION);
						if (random(1,(maxchance*4)) == 1) victim.A_SpawnItemEx("PigRoastDishExtra",frandom(-2,2),frandom(-2,2),frandom(-2,2),frandom(-2,2),frandom(-2,2),frandom(-2,2),SXF_NOCHECKPOSITION);
						if (random(1,(maxchance*4)) == 1) victim.A_SpawnItemEx("Berserk",frandom(-2,2),frandom(-2,2),frandom(-2,2),frandom(-2,2),frandom(-2,2),frandom(-2,2),SXF_NOCHECKPOSITION);
						if (dydudebug_worlddiedmonsterdrops) Console.Printf("maxchance [heal]: %d (%d)", maxchance, basechance);
					}
					
					// Armor Items
					droptimes = 1;
					if (inflicter && ((source && sour == "DinahPlayer")))
					{
						let MiscItem = PlayerStatItem(source.FindInventory("PlayerStatItem"));
						if (MiscItem && MiscItem.PlayerLevel >= 35) droptimes += (MiscItem.PlayerLevel / 35);
					}
					else
					if (inflicter && infl == "DinahPlayer")
					{
						let MiscItem = PlayerStatItem(inflicter.FindInventory("PlayerStatItem"));
						if (MiscItem && MiscItem.PlayerLevel >= 35) droptimes += (MiscItem.PlayerLevel / 35);
					}
					if (victim.bBOSS) droptimes *= 4;
					for (int i; i < droptimes; i++)
					{
						basechance = 512;
						maxchance = basechance;
						if (infl == "BatPuff" || infl == "BatPuffNoSound") maxchance = (basechance * 0.5);
						if (infl == "ApplePuff") maxchance = randompick((basechance * 0.375),(basechance * 0.4375),(basechance * 0.5),(basechance * 0.5625),(basechance * 0.625));
						if (infl == "BlunderPuff") maxchance = (basechance * 16);
						if (infl == "RecordShot") maxchance = (basechance * 4);
						if (infl == "VacPuff") maxchance = (basechance * 0.125);
						if (dydudebug_worlddiedmonsterdrops) Console.Printf("maxchance [armor]: %d (%d)", maxchance, basechance);
						if (random(1,maxchance) == 1)
						{
							//Full Armor Drops
							user_type = random(1,100);
							if (user_type >= 1 || user_type <= 67) { victim.A_SpawnItemEx("KnightGown",frandom(-2,2),frandom(-2,2),frandom(-2,2),frandom(-2,2),frandom(-2,2),frandom(-2,2),SXF_NOCHECKPOSITION); }
							else if (user_type >= 68 || user_type <= 89) { victim.A_SpawnItemEx("KnightGown2",frandom(-2,2),frandom(-2,2),frandom(-2,2),frandom(-2,2),frandom(-2,2),frandom(-2,2),SXF_NOCHECKPOSITION); }
							else if (user_type >= 90) { victim.A_SpawnItemEx("KnightGown3",frandom(-2,2),frandom(-2,2),frandom(-2,2),frandom(-2,2),frandom(-2,2),frandom(-2,2),SXF_NOCHECKPOSITION); }
						}
						else
						{
							scraprolls = 1;
							if (infl == "BlunderPuff") scraprolls += randompick(0,0,0,0,1,1,1,1,1,1,2,2,3);
							if (infl == "RecordShot") scraprolls += randompick(0,0,0,0,0,0,1,1,1,1,1,2,2);
							if (infl == "VacPuff") scraprolls += (randompick(0,0,0,0,0,0,1,1,1,1,1,2,2) - 1);
							//Scrap Drops
							if (scraprolls)
							{
								int baseval = randompick(2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3);
								for (int i = 0; i < scraprolls; i++)
								{
									if (infl == "BlunderPuff" && i == 0) victim.A_SpawnItemEx("ArmorScrap",frandom(-2,2),frandom(-2,2),frandom(-2,2),frandom(-2,2),frandom(-2,2),frandom(-2,2),SXF_NOCHECKPOSITION);
									if (random(1,(baseval)) == 1) victim.A_SpawnItemEx("ArmorScrap",frandom(-2,2),frandom(-2,2),frandom(-2,2),frandom(-2,2),frandom(-2,2),frandom(-2,2),SXF_NOCHECKPOSITION);
									if (random(1,(baseval*baseval)) == 1) victim.A_SpawnItemEx("ArmorScrap",frandom(-2,2),frandom(-2,2),frandom(-2,2),frandom(-2,2),frandom(-2,2),frandom(-2,2),SXF_NOCHECKPOSITION);
									if (random(1,(baseval*baseval*baseval)) == 1) victim.A_SpawnItemEx("ArmorScrap",frandom(-2,2),frandom(-2,2),frandom(-2,2),frandom(-2,2),frandom(-2,2),frandom(-2,2),SXF_NOCHECKPOSITION);
									if (random(1,(baseval*baseval*baseval*baseval)) == 1) victim.A_SpawnItemEx("ArmorScrap",frandom(-2,2),frandom(-2,2),frandom(-2,2),frandom(-2,2),frandom(-2,2),frandom(-2,2),SXF_NOCHECKPOSITION);
									if (random(1,(baseval*baseval*baseval*baseval*baseval)) == 1) victim.A_SpawnItemEx("ArmorScrap",frandom(-2,2),frandom(-2,2),frandom(-2,2),frandom(-2,2),frandom(-2,2),frandom(-2,2),SXF_NOCHECKPOSITION);
									if (random(1,(baseval*baseval*baseval*baseval*baseval*baseval)) == 1) victim.A_SpawnItemEx("ArmorScrap",frandom(-2,2),frandom(-2,2),frandom(-2,2),frandom(-2,2),frandom(-2,2),frandom(-2,2),SXF_NOCHECKPOSITION);
									if (dydudebug_worlddiedmonsterdrops) Console.Printf("ScrapRolls: %d / %d", i, scraprolls);
								}
							}
						}
					}
					
					// Random Inventory Item Drops
					// Primary
					droptimes = 1;
					if (inflicter && ((source && sour == "DinahPlayer")))
					{
						let MiscItem = PlayerStatItem(source.FindInventory("PlayerStatItem"));
						if (MiscItem && MiscItem.PlayerLevel >= 70) droptimes += (MiscItem.PlayerLevel / 70);
					}
					else
					if (inflicter && infl == "DinahPlayer")
					{
						let MiscItem = PlayerStatItem(inflicter.FindInventory("PlayerStatItem"));
						if (MiscItem && MiscItem.PlayerLevel >= 70) droptimes += (MiscItem.PlayerLevel / 70);
					}
					if (victim.bBOSS) droptimes *= 2;
					for (int i; i < droptimes; i++)
					{
						basechance = 32;
						maxchance = basechance;
						if (infl == "BatPuff" || infl == "BatPuffNoSound") maxchance = (basechance * 0.5);
						if (infl == "ApplePuff") maxchance = randompick((basechance * 0.375),(basechance * 0.4375),(basechance * 0.5),(basechance * 0.5625),(basechance * 0.625));
						if (infl == "BlunderPuff") maxchance = randompick((basechance * 0.75),(basechance * 0.875),(basechance),(basechance * 1.125),(basechance * 1.25));
						if (infl == "RecordShot") maxchance = randompick((basechance * 1.5),(basechance * 1.75),(basechance * 2),(basechance * 2.25),(basechance * 2.5));
						if (infl == "VacPuff") maxchance = (basechance * 16);
						if (dydudebug_worlddiedmonsterdrops) Console.Printf("maxchance [primaryinv]: %d (%d)", maxchance, basechance);
						if (random(1,maxchance) == 1)
						{
							user_type = random(1,20);
							if (user_type == 1) { victim.A_SpawnItemEx("CherryBombPickup",0.0,0.0,0.0,0.0,0.0,0.0,SXF_NOCHECKPOSITION); }
							if (user_type == 2) { victim.A_SpawnItemEx("CherryBombPickup",0.0,0.0,0.0,0.0,0.0,0.0,SXF_NOCHECKPOSITION); }
							if (user_type == 3) { victim.A_SpawnItemEx("CherryBombPickup",0.0,0.0,0.0,0.0,0.0,0.0,SXF_NOCHECKPOSITION); }
							if (user_type == 4) { victim.A_SpawnItemEx("CherryBombPickup",0.0,0.0,0.0,0.0,0.0,0.0,SXF_NOCHECKPOSITION); }
							if (user_type == 5) { victim.A_SpawnItemEx("CherryBombPickup",0.0,0.0,0.0,0.0,0.0,0.0,SXF_NOCHECKPOSITION); }
							if (user_type == 6) { victim.A_SpawnItemEx("CherryBombPickup",0.0,0.0,0.0,0.0,0.0,0.0,SXF_NOCHECKPOSITION); }
							if (user_type == 7) { victim.A_SpawnItemEx("CherryBombPickup",0.0,0.0,0.0,0.0,0.0,0.0,SXF_NOCHECKPOSITION); }
							if (user_type == 8) { victim.A_SpawnItemEx("SpinnerPickup",0.0,0.0,0.0,0.0,0.0,0.0,SXF_NOCHECKPOSITION); }
							if (user_type == 9) { victim.A_SpawnItemEx("SpinnerPickup",0.0,0.0,0.0,0.0,0.0,0.0,SXF_NOCHECKPOSITION); }
							if (user_type == 10) { victim.A_SpawnItemEx("SpinnerPickup",0.0,0.0,0.0,0.0,0.0,0.0,SXF_NOCHECKPOSITION); }
							if (user_type == 11) { victim.A_SpawnItemEx("SpinnerPickup",0.0,0.0,0.0,0.0,0.0,0.0,SXF_NOCHECKPOSITION); }
							if (user_type == 12) { victim.A_SpawnItemEx("SpinnerPickup",0.0,0.0,0.0,0.0,0.0,0.0,SXF_NOCHECKPOSITION); }
							if (user_type == 13) { victim.A_SpawnItemEx("SpinnerPickup",0.0,0.0,0.0,0.0,0.0,0.0,SXF_NOCHECKPOSITION); }
							if (user_type == 14) { victim.A_SpawnItemEx("BRocketPickup",0.0,0.0,0.0,0.0,0.0,0.0,SXF_NOCHECKPOSITION); }
							if (user_type == 15) { victim.A_SpawnItemEx("BRocketPickup",0.0,0.0,0.0,0.0,0.0,0.0,SXF_NOCHECKPOSITION); }
							if (user_type == 16) { victim.A_SpawnItemEx("BRocketPickup",0.0,0.0,0.0,0.0,0.0,0.0,SXF_NOCHECKPOSITION); }
							if (user_type == 17) { victim.A_SpawnItemEx("BRocketPickup",0.0,0.0,0.0,0.0,0.0,0.0,SXF_NOCHECKPOSITION); }
							if (user_type == 18) { victim.A_SpawnItemEx("PopperPickup",0.0,0.0,0.0,0.0,0.0,0.0,SXF_NOCHECKPOSITION); }
							if (user_type == 19) { victim.A_SpawnItemEx("PopperPickup",0.0,0.0,0.0,0.0,0.0,0.0,SXF_NOCHECKPOSITION); }
							if (user_type == 20) { victim.A_SpawnItemEx("SnakePickup",0.0,0.0,0.0,0.0,0.0,0.0,SXF_NOCHECKPOSITION); }
						}

						// Secondary
						basechance = 256;
						maxchance = basechance;
						if (infl == "BatPuff" || infl == "BatPuffNoSound") maxchance = (basechance * 0.5);
						if (infl == "ApplePuff") maxchance = randompick((basechance * 0.375),(basechance * 0.4375),(basechance * 0.5),(basechance * 0.5625),(basechance * 0.625));
						if (infl == "BlunderPuff") maxchance = randompick((basechance * 0.75),(basechance * 0.875),(basechance),(basechance * 1.125),(basechance * 1.25));
						if (infl == "RecordShot") maxchance = randompick((basechance * 1.5),(basechance * 1.75),(basechance * 2),(basechance * 2.25),(basechance * 2.5));
						if (infl == "VacPuff") maxchance = (basechance * 16);
						if (dydudebug_worlddiedmonsterdrops) Console.Printf("maxchance [secondaryinv]: %d (%d)", maxchance, basechance);
						if (random(1,maxchance) == 1)
						{
							user_type = random(1,336);
							if (user_type >= 1 && user_type <= 140) { victim.A_SpawnItemEx("FuryPotion",0.0,0.0,0.0,0.0,0.0,0.0,SXF_NOCHECKPOSITION); }
							if (user_type >= 141 && user_type <= 256) { victim.A_SpawnItemEx("CrazyBallDD",0.0,0.0,0.0,0.0,0.0,0.0,SXF_NOCHECKPOSITION); }
							if (user_type >= 257 && user_type <= 320) { victim.A_SpawnItemEx("TimePotion",0.0,0.0,0.0,0.0,0.0,0.0,SXF_NOCHECKPOSITION); }
							if (user_type >= 321 && user_type <= 334) { victim.A_SpawnItemEx("BlunderAxeSchematic",0.0,0.0,0.0,0.0,0.0,0.0,SXF_NOCHECKPOSITION); }
							if (user_type >= 335) { victim.A_SpawnItemEx("DoorBell",0.0,0.0,0.0,0.0,0.0,0.0,SXF_NOCHECKPOSITION); }
						}

						// Rare Powerup Drop
						basechance = 1024;
						maxchance = basechance;
						if (infl == "BatPuff" || infl == "BatPuffNoSound") maxchance = (basechance * 0.5);
						if (infl == "ApplePuff") maxchance = randompick((basechance * 0.375),(basechance * 0.4375),(basechance * 0.5),(basechance * 0.5625),(basechance * 0.625));
						if (infl == "BlunderPuff") maxchance = randompick((basechance * 0.75),(basechance * 0.875),(basechance),(basechance * 1.125),(basechance * 1.25));
						if (infl == "RecordShot") maxchance = randompick((basechance * 1.5),(basechance * 1.75),(basechance * 2),(basechance * 2.25),(basechance * 2.5));
						if (infl == "VacPuff") maxchance = (basechance * 16);
						if (dydudebug_worlddiedmonsterdrops) Console.Printf("maxchance [secondaryinv]: %d (%d)", maxchance, basechance);
						if (random(1,maxchance) == 1)
						{
							if (gameinfo.gametype & 1) // Doom Mode
							{
								user_type = random(1,20);
								if (user_type >= 1 && user_type <= 6) victim.A_SpawnItemEx("BlurSphere",0.0,0.0,0.0,0.0,0.0,0.0,SXF_NOCHECKPOSITION);
								if (user_type >= 7 && user_type <= 12) victim.A_SpawnItemEx("Infrared",0.0,0.0,0.0,0.0,0.0,0.0,SXF_NOCHECKPOSITION);
								if (user_type >= 13 && user_type <= 18) victim.A_SpawnItemEx("RadSuit",0.0,0.0,0.0,0.0,0.0,0.0,SXF_NOCHECKPOSITION);
								if (user_type >= 19) victim.A_SpawnItemEx("InvulnerabilitySphere",0.0,0.0,0.0,0.0,0.0,0.0,SXF_NOCHECKPOSITION);
							}
							if (gameinfo.gametype & 2) // Heretic Mode
							{
							}
							if (gameinfo.gametype & 4) // Hexen Mode
							{
							}
							if (gameinfo.gametype & 8) // Strife Mode
							{
							}
						}
						
						//
						if (vict == "KilletanteSoloist")
						{
							string dropname = "GalaApple";
							if (random(1,2) == 1) dropname = "AppleWine";
							victim.A_SpawnItemEx(dropname,frandom(-5,5),frandom(-5,5),frandom(-5,5),frandom(-5,5),frandom(-5,5),frandom(-5,5),SXF_NOCHECKPOSITION);
							if (random(1,2) == 1)
							{
								dropname = "GalaApple";
								if (random(1,2) == 1) dropname = "AppleWine";
								victim.A_SpawnItemEx(dropname,frandom(-5,5),frandom(-5,5),frandom(-5,5),frandom(-5,5),frandom(-5,5),frandom(-5,5),SXF_NOCHECKPOSITION);
								
								if (random(1,4) == 1)
								{
									dropname = "GalaApple";
									if (random(1,2) == 1) dropname = "AppleWine";
									victim.A_SpawnItemEx(dropname,frandom(-5,5),frandom(-5,5),frandom(-5,5),frandom(-5,5),frandom(-5,5),frandom(-5,5),SXF_NOCHECKPOSITION);
									
									if (random(1,8) == 1)
									{
										dropname = "GalaApple";
										if (random(1,2) == 1) dropname = "AppleWine";
										victim.A_SpawnItemEx(dropname,frandom(-5,5),frandom(-5,5),frandom(-5,5),frandom(-5,5),frandom(-5,5),frandom(-5,5),SXF_NOCHECKPOSITION);
									}
								}
							}
						}
					}
				}
				else
				{
					if (vict == "ZBell")
					{
						int typesdrop = 1;
						string dropname;
						if ((victim.Stamina <= 0) || (victim.Stamina <= 2 && ((inflicter && (infl == "BatPuff" || infl == "BatPuffNoSound")))))
						{
							victim.Stamina++;
							if (inflicter && (infl == "BatPuff" || infl == "BatPuffNoSound")) typesdrop = random(2,5);

							for(int i = 0; i < typesdrop; i++)
							{
								user_type = random(1,2);
								//Console.Printf("#1: %d", user_type);
								if (user_type == 1) // Weapons
								{
									user_type = random(1,29);
									//Console.Printf("#2a: %d", user_type);
									if (user_type >= 1 && user_type <= 4) dropname = "CricketBat";
									if (user_type >= 5 && user_type <= 8) dropname = "AppleJack";
									if (user_type >= 9 && user_type <= 12) dropname = "BlunderAxe";
									if (user_type >= 13 && user_type <= 16) dropname = "Scrambler";
									if (user_type >= 17 && user_type <= 20) dropname = "WizardPike";
									if (user_type >= 21 && user_type <= 24) dropname = "SuperVac";
									if (user_type >= 24 && user_type <= 28) dropname = "CandleWhip";
									if (user_type == 29) dropname = "Grimophone";
								}
								else
								if (user_type == 2) // Health
								{
									user_type = random(1,29);
									//Console.Printf("#2b: %d", user_type);
									if (user_type >= 1 && user_type <= 12) dropname = "GalaApple";
									if (user_type >= 13 && user_type <= 18) dropname = "FoodPlateFruit";
									if (user_type >= 19 && user_type <= 22) dropname = "AppleWine";
									if (user_type >= 23 && user_type <= 25) dropname = "PigRoastDish";
									if (user_type >= 26 && user_type <= 28) dropname = "TurkeyDinner";
									if (user_type == 29) dropname = "GourmetMeal";
								}
								victim.A_SpawnItemEx(dropname,frandom(-5,5),frandom(-5,5),frandom(-5,5),frandom(-5,5),frandom(-5,5),frandom(-5,5),SXF_NOCHECKPOSITION);
							}
						}
					}
				}
				
				// Killed With Certain Weapons
				if (inflicter && sour == "DinahPlayer" && victim.bCOUNTKILL)
				{
					if (infl == "VacPuff")
					{
						int vacgive = victim.spawnhealth();
						vacgive *= frandompick(0.6667,0.8334,1.000,1.1667,1.3334);
						vacgive *= 0.5;
						source.A_GiveInventory("VacAmmoCounter",vacgive);
						source.A_StartSound("VacDed",210,CHANF_DEFAULT,frandom(0.75,0.90),ATTN_NORM,frandom(1.8,2.7));
						if (vict == "CommanderKeen") victim.A_KeenDie(); // I forgot to consider Keens use a different "death action" than the other monsters. >.>
						victim.A_BossDeath(); // Makes sure certain monsters do their hardcoded E1M8/MAP07 type effects on death
						if (vict == "Korax" || vict == "KoraxNew") ACS_Execute(255, 0); // Ensures Korax calls Script 255 is he's somehow absorbed by the Vac [though he should be unable to be killed by it :P]
						let SubEntity = EntitySecond(victim);
						if (SubEntity) SubEntity.A_SubEntityDeath(); // makes sure Strife's game ends once all SubEntities die. V:
						victim.A_FadeOut(1.0,FTF_REMOVE);

						Console.Printf("+%d Vacuum Bag Units", vacgive);
					}
				}
			}
		}
		
		Super.WorldThingDied(e);
	}
	
	override void WorldLoaded(WorldEvent e)
	{
		bool BatGuardCheck = true;
		if (e.IsSaveGame) BatGuardCheck = false;
		if (BatGuardCheck)
		{
			actor Player = players[0].mo;
			let IsPlayer = PlayerPawn(Player);
			if (IsPlayer)
			{
				let weapon = IsPlayer.Player.ReadyWeapon;
				// Resets the Cricket Bat guardstate and cooldown to neutral, so the first time
				// you attempt to guard after a level transition doesn't immediately UNGUARD after
				// the initial animation. V:
				if (weapon is "CricketBat")
				{
					let DDWeap = CricketBat(weapon);
					if (DDWeap)
					{
						if (DDWeap.guardstate) DDWeap.guardstate = 0;
						if (DDWeap.guardcooldown) DDWeap.guardcooldown = 0;
						/*
						int type = 1;
						if (!type)
						{
						}
						else
						{
							if (DDWeap.guardstate) DDWeap.SetStateLabel("GuardPreSet");
						}
						*/
						if (dydudebug_worldloaded) Console.Printf("BatGuard Check - GuardState: %d, Cooldown: %d", DDWeap.guardstate, DDWeap.guardcooldown);
					}
				}
			}
		}

		Super.WorldLoaded(e);
	}
	
	override void PlayerDied(PlayerEvent e) 
	{
		if (exex_deathmusic) 
		{
			if (exex_deathmusic == 1) S_ChangeMusic("GAMOVR", 0, false, true);
			if (exex_deathmusic == 2) S_ChangeMusic("RoReDead", 0, false, true);
			if (exex_deathmusic == 3) S_ChangeMusic("GaOvYe", 0, false, true);
			if (exex_deathmusic == 4) S_ChangeMusic("DRQUDEAD", 0, false, true);
			if (exex_deathmusic == 5) S_ChangeMusic("MiRiBuTi", 0, false, true);
			if (exex_deathmusic == 6) S_ChangeMusic("ToDiYoAD", 0, false, true);
			if (exex_deathmusic == 7) S_ChangeMusic("MGS2GMOV", 0, false, true);
			if (exex_deathmusic == 8) S_ChangeMusic("ShGYaheh", 0, false, true);
			if (exex_deathmusic == 9) S_ChangeMusic("AH3GMOVR", 0, false, true);
			if (exex_deathmusic == 10) S_ChangeMusic("JURPRKP2", 0, false, true);
			if (exex_deathmusic == 11) S_ChangeMusic("CUYOENTH", 0, false, true);
		}
		Super.PlayerDied(e);
	}
	
	override void PlayerRespawned(PlayerEvent e) 
	{
		S_ChangeMusic("*", 0, true, true);
		Super.PlayerRespawned(e);
	}
	
		override bool InputProcess (InputEvent e)
	{
		if (e.Type == InputEvent.Type_KeyDown)
			SendNetworkEvent("AAAX", e.KeyScan);
		
		return false;
	}
	
	override void NetworkProcess(ConsoleEvent e)
	{
		Actor player = players[consoleplayer].mo;
		if (e.Name == "AAAX")   
		{
			int key1, key2;

			[key1, key2] = Bindings.GetKeysForCommand("Whistl");
			if ((key1 && key1 == e.Args[0]) || (key2 && key2 == e.Args[0]))
			{
				
				let MiscItem = PlayerStatItem(player.FindInventory("PlayerStatItem"));
				if (MiscItem)
				{
					if (MiscItem.whistlecooldown == 0)
					{
						player.A_SpawnItemEx("PlayerWhistle",0,0,0,0,0,0,0,SXF_NOCHECKPOSITION);
						if (player.CountInv("PowerStrength") || player.CountInv("PowerStrengthDD")) MiscItem.whistlecooldown = random(28,33);
																																									 else MiscItem.whistlecooldown = random(42,49);
					}
				}
				
			}
		}
	}
	
	override void UiTick()
	{
		if (Level.MapName == "TITLEMAP")
		{
			//Console.Printf("UiTick");
			if (exex_titlemusic >= 1)
			{
				if (exex_titlemusic == 1)
				{
					S_ChangeMusic("EE-TITLE",0,true,true); // The unused theme played in the original Dynamite Duchess trailer on Youtube is the mod's "main" theme
					SetMusicVolume(4.5);
				}
				if (exex_titlemusic == 2)
				{
					S_ChangeMusic("BGMTHEME",0,true,true); // The titlemusic for Dynamite Duchess
					SetMusicVolume(2.25);
				}
				if (exex_titlemusic >= 3)
				{
					S_ChangeMusic("BGMTHEMA",0,true,true); // The titlemusic for Appetite for Detention
					SetMusicVolume(2.25);
				}
			}
			else
			if (exex_titlemusic <= 0) // Use the default title music for the gamemode/mapset if viable
			{
				SetMusicVolume(1.25);
				if (gameinfo.GameType == GAME_Doom) 
				{
					if (Wads.CheckNumForName("MAP01", Wads.ns_global, -1, false)) S_ChangeMusic("$MUSIC_DM2TTL",0,true,true);
					if (Wads.CheckNumForName("E1M1", Wads.ns_global, -1, false)) S_ChangeMusic("$MUSIC_INTRO",0,true,true);
				}
				if (gameinfo.GameType == GAME_Heretic) S_ChangeMusic("MUS_TITL",0,true,true);
				if (gameinfo.GameType == GAME_Hexen) S_ChangeMusic("HEXEN",0,true,true);
				if (gameinfo.GameType == GAME_Strife) S_ChangeMusic("D_LOGO",0,true,true);
			}
		}
		super.UiTick();
	}

	override void RenderOverlay(RenderEvent e)
	{
		if (Level.MapName == "TITLEMAP")
		{
			//Console.Printf("RenderOverlay: level.time - %d", level.time);
			textureid titleimg;
			string titlenm;
			int visi;
			int timer = level.time % 716;
			textureid titlepic = TexMan.checkForTexture("DEFTITLE");
			if (exex_titlescreen >= 1)
			{
				// Background
				textureid titlepic = TexMan.checkForTexture("EXEXTILB");
				if (titlepic) Screen.DrawTexture(titlepic, false, 0, 0, DTA_FullScreen, true);
				// Title Image
				titleimg = TexMan.checkForTexture("EXEXT3XS");
				if (titleimg) Screen.DrawTexture(titleimg, false, 360, 360, DTA_KeepRatio, true);
				// Dinah
				titleimg = TexMan.checkForTexture("EXEXDINH");
				if (titleimg) Screen.DrawTexture(titleimg, false, 800, 180, DTA_KeepRatio, true);
				// ???
				visi = 0;
				if (timer >= 351)
				{
					if (timer >= 351 && timer <= 358) visi = 5;
					if (timer >= 359 && timer <= 366) visi = 10;
					if (timer >= 367 && timer <= 374) visi = 15;
					if (timer >= 375 && timer <= 382) visi = 20;
					if (timer >= 383 && timer <= 390) visi = 25;
					if (timer >= 391 && timer <= 398) visi = 30;
					if (timer >= 399 && timer <= 406) visi = 35;
					if (timer >= 407 && timer <= 414) visi = 40;
					if (timer >= 415 && timer <= 422) visi = 45;
					if (timer >= 423 && timer <= 430) visi = 50;
					if (timer >= 431 && timer <= 438) visi = 55;
					if (timer >= 439 && timer <= 446) visi = 60;
					if (timer >= 447 && timer <= 454) visi = 65;
					if (timer >= 455 && timer <= 462) visi = 70;
					if (timer >= 463 && timer <= 470) visi = 75;
					if (timer >= 471 && timer <= 478) visi = 80;
					if (timer >= 479 && timer <= 486) visi = 85;
					if (timer >= 487 && timer <= 494) visi = 90;
					if (timer >= 495 && timer <= 502) visi = 95;
					if (timer >= 503 && timer <= 677) visi = 100;
					if (timer >= 678 && timer <= 679) visi = 95;
					if (timer >= 680 && timer <= 681) visi = 90;
					if (timer >= 682 && timer <= 683) visi = 85;
					if (timer >= 684 && timer <= 685) visi = 80;
					if (timer >= 686 && timer <= 687) visi = 75;
					if (timer >= 688 && timer <= 689) visi = 70;
					if (timer >= 690 && timer <= 691) visi = 65;
					if (timer >= 692 && timer <= 693) visi = 60;
					if (timer >= 694 && timer <= 695) visi = 55;
					if (timer >= 696 && timer <= 697) visi = 50;
					if (timer >= 698 && timer <= 699) visi = 45;
					if (timer >= 700 && timer <= 701) visi = 40;
					if (timer >= 702 && timer <= 703) visi = 35;
					if (timer >= 704 && timer <= 705) visi = 30;
					if (timer >= 706 && timer <= 707) visi = 25;
					if (timer >= 708 && timer <= 709) visi = 20;
					if (timer >= 710 && timer <= 711) visi = 15;
					if (timer >= 712 && timer <= 713) visi = 10;
					if (timer >= 714 && timer <= 715) visi = 5;
				}
				titlenm = "EXTID";
				if (visi >= 100) titlenm.AppendFormat("%d", visi);
				if (visi < 100) titlenm.AppendFormat("0%d", visi);
				if (visi < 10) titlenm.AppendFormat("00%d", visi);
				titleimg = TexMan.checkForTexture(titlenm);
				if (titleimg) Screen.DrawTexture(titleimg, false, 1258, 481, DTA_KeepRatio, true);
			}
			else
			if (exex_titlescreen <= 0)
			{
				if (gameinfo.GameType == GAME_Doom) titlepic = TexMan.checkForTexture("TITLEPIC");
				if (gameinfo.GameType == GAME_Heretic) titlepic = TexMan.checkForTexture("TITLE");
				if (gameinfo.GameType == GAME_Hexen) titlepic = TexMan.checkForTexture("TITLE");
				if (gameinfo.GameType == GAME_Strife) titlepic = TexMan.checkForTexture("TITLEPIC");
				if (titlepic) Screen.DrawTexture(titlepic, false, 0, 0, DTA_FullScreen, true);
			}
		}
		super.RenderOverlay(e);
	}
}

class DD_StaticEventHandler : StaticEventHandler
{
	override void WorldLoaded(WorldEvent evt) 
	{
		if (gameinfo.gametype & GAME_Raven)
		{
			for (let i = 0, l = level.Sectors.Size(); i < l; i++)
			{
				if (dydudebug_worldloaded) Console.Printf("    \czFireFloorAdjuster\c-: %d / %d", i, l);
				if (level.Sectors[i].damagetype == 'Fire' || level.Sectors[i].damagetype == 'Lava')
						level.Sectors[i].damagetype = 'Magma';
			}
		}
	}
}