// Backpack
class BackpackNew : CustomInventoryExt replaces Backpack
{
	default
	{
		Height 26;
		+DONTGIB
		+INVENTORY.AUTOACTIVATE
		+INVENTORY.ALWAYSPICKUP
		Inventory.PickupMessage "Picked up a backpack full of ammo/goodies!";
		Inventory.PickupSound "";
	}
	States
	{
		Spawn:
			BPAK A -1;
			Stop;
		Pickup:
			TNT1 A 0
			{
				A_GiveInventory("Backpack",AAPTR_PLAYER1);
				A_StartSound("Dinah/there",CHAN_VOICE);

				A_GiveInventory("CherryBombPickup",2,AAPTR_PLAYER1);
				if (random(1,3) <= 1) { A_GiveInventory("CherryBombPickup",1,AAPTR_PLAYER1); }
				if (random(1,6) <= 1) { A_GiveInventory("CherryBombPickup",1,AAPTR_PLAYER1); }
				if (random(1,12) <= 1) { A_GiveInventory("CherryBombPickup",1,AAPTR_PLAYER1); }
				
				A_GiveInventory("SpinnerPickup",random(1,2),AAPTR_PLAYER1);
				if (random(1,3) <= 1) { A_GiveInventory("SpinnerPickup",1,AAPTR_PLAYER1); }
				if (random(1,12) <= 1) { A_GiveInventory("SpinnerPickup",1,AAPTR_PLAYER1); }
				
				if (random(1,3) <= 2) { A_GiveInventory("BRocketPickup",1,AAPTR_PLAYER1); }
				if (random(1,6) <= 1) { A_GiveInventory("BRocketPickup",1,AAPTR_PLAYER1); }
				if (random(1,24) <= 1) { A_GiveInventory("BRocketPickup",1,AAPTR_PLAYER1); }
			}
			stop;
	}
}

class BagOfHoldingNew : CustomInventoryExt replaces BagOfHolding
{
	default
	{
		+COUNTITEM
		+FLOATBOB
		+DONTGIB
		+INVENTORY.AUTOACTIVATE
		+INVENTORY.ALWAYSPICKUP
		Inventory.PickupMessage "Picked up a bag of holding full of ammo/goodies!";
		Inventory.PickupSound "";
	}
	States
	{
		Spawn:
			BAGH A -1;
			Stop;
		Pickup:
			TNT1 A 0
			{
				A_GiveInventory("Backpack",AAPTR_PLAYER1);
				A_StartSound("Dinah/there",CHAN_VOICE);

				A_GiveInventory("CherryBombPickup",2,AAPTR_PLAYER1);
				if (random(1,3) <= 1) { A_GiveInventory("CherryBombPickup",1,AAPTR_PLAYER1); }
				if (random(1,6) <= 1) { A_GiveInventory("CherryBombPickup",1,AAPTR_PLAYER1); }
				if (random(1,12) <= 1) { A_GiveInventory("CherryBombPickup",1,AAPTR_PLAYER1); }
				
				A_GiveInventory("SpinnerPickup",random(1,2),AAPTR_PLAYER1);
				if (random(1,3) <= 1) { A_GiveInventory("SpinnerPickup",1,AAPTR_PLAYER1); }
				if (random(1,12) <= 1) { A_GiveInventory("SpinnerPickup",1,AAPTR_PLAYER1); }
				
				if (random(1,3) <= 2) { A_GiveInventory("BRocketPickup",1,AAPTR_PLAYER1); }
				if (random(1,6) <= 1) { A_GiveInventory("BRocketPickup",1,AAPTR_PLAYER1); }
				if (random(1,24) <= 1) { A_GiveInventory("BRocketPickup",1,AAPTR_PLAYER1); }
			}
			stop;
	}
}

class AmmoSatchelNew : CustomInventoryExt replaces AmmoSatchel
{
	default
	{
		+COUNTITEM
		+FLOATBOB
		+DONTGIB
		+INVENTORY.AUTOACTIVATE
		+INVENTORY.ALWAYSPICKUP
		Inventory.PickupMessage "Picked up an ammo satchel full of ammo/goodies!";
		Inventory.PickupSound "";
	}
	States
	{
		Spawn:
			BKPK A -1;
			Stop;
		Pickup:
			TNT1 A 0
			{
				A_GiveInventory("Backpack",AAPTR_PLAYER1);
				A_StartSound("Dinah/there",CHAN_VOICE);

				A_GiveInventory("CherryBombPickup",2,AAPTR_PLAYER1);
				if (random(1,3) <= 1) { A_GiveInventory("CherryBombPickup",1,AAPTR_PLAYER1); }
				if (random(1,6) <= 1) { A_GiveInventory("CherryBombPickup",1,AAPTR_PLAYER1); }
				if (random(1,12) <= 1) { A_GiveInventory("CherryBombPickup",1,AAPTR_PLAYER1); }
				
				A_GiveInventory("SpinnerPickup",random(1,2),AAPTR_PLAYER1);
				if (random(1,3) <= 1) { A_GiveInventory("SpinnerPickup",1,AAPTR_PLAYER1); }
				if (random(1,12) <= 1) { A_GiveInventory("SpinnerPickup",1,AAPTR_PLAYER1); }
				
				if (random(1,3) <= 2) { A_GiveInventory("BRocketPickup",1,AAPTR_PLAYER1); }
				if (random(1,6) <= 1) { A_GiveInventory("BRocketPickup",1,AAPTR_PLAYER1); }
				if (random(1,24) <= 1) { A_GiveInventory("BRocketPickup",1,AAPTR_PLAYER1); }
			}
			stop;
	}
}

//Apple
class GalaApple : CustomInventoryExt
{
	default
	{
		//$Category RPArtifacts
		Inventory.Icon "APPLA0";
		Inventory.PickupMessage "";
		Inventory.PickupSound "";
		Tag "Gala Apple";
		+DONTGIB
	}
	States
	{
		Spawn:
			APPL A -1;
			Stop;
		Pickup:
			TNT1 A 0
			{
				int temp1 = player.mo.health;
				int temp2 = player.mo.CountInv("PlayerMaxHP");
				if (temp1 < temp2)
				{
					int temp3 = player.mo.CountInv("PlayerMaxHP");
					temp3 *= 0.10;
					
					temp1 += temp3;
					if (temp1 > temp2) temp1 = temp2;
					player.mo.health = player.health = temp1;
					let MiscItem = PlayerStatItem(player.mo.FindInventory("PlayerStatItem"));
					if (MiscItem) MiscItem.HPRegenBoostTimer += randompick(9,10,10,11,11,12,13);

					A_StartSound("Dinah/eatapple",CHAN_VOICE);
					A_SetBlend("f1 ff f1",0.1,4);
					Console.Printf("\c[red]A tasty gala apple! \c[green]+%d HP", temp3);
					invoker.A_FadeOut(1.0,FTF_REMOVE);
				}
			}
			Fail;
	}
}

Class GalaAppleWeak : GalaApple
{
	States
	{
		Pickup:
			TNT1 A 0
			{
				int temp1 = player.mo.health;
				int temp2 = player.mo.CountInv("PlayerMaxHP");
				if (temp1 < temp2)
				{
					int temp3 = temp2;
					temp3 *= 0.05;
					
					temp1 += temp3;
					if (temp1 > temp2) temp1 = temp2;
					player.mo.health = player.health = temp1;
					let MiscItem = PlayerStatItem(player.mo.FindInventory("PlayerStatItem"));
					if (MiscItem) MiscItem.HPRegenBoostTimer += randompick(4,4,5,5,5,6,6,7);
					
					A_StartSound("Dinah/eatapple",CHAN_VOICE);
					A_SetBlend("f1 ff f1",0.1,random(4,6));
					Console.Printf("\c[red]A tasty gala apple! \c[green]+%d HP", temp3);
					invoker.A_FadeOut(1.0,FTF_REMOVE);
				}
			}
			Fail;
	}
}

class GoldApple : CustomInventoryExt
{
	default
	{
		//$Category RPArtifacts
		Inventory.Icon "GAPLA0";
		Inventory.PickupMessage "";
		Inventory.PickupSound "";
		Tag "Golden Apple: Gives +2 Maximum HP";
		+COUNTITEM
		+DONTGIB
	}
	States
	{
		Spawn:
			GAPL A -1;
			Stop;
		Pickup:
			TNT1 A 0
			{
				int temp1 = player.mo.health;
				int temp2 = player.mo.CountInv("PlayerMaxHP");
				int temp3 = temp2 * 3.0;
				int inc = 2;
				int inc2 = (inc * frandompick(2,2.5,3));
				
				temp2 += inc;
				temp1 += inc2;
				temp3 = temp2 * 3.0;
				if (temp1 > temp3) temp1 = temp3;
				player.mo.stamina += inc;
				player.mo.health = player.health = temp1;
				player.mo.A_SetInventory("PlayerMaxHP",temp2);
				let MiscItem = PlayerDashJump(player.mo.FindInventory("PlayerDashJump"));
				if (MiscItem) MiscItem.ExtraDashCharge += randompick(0,1,1);
				let MiscItem2 = PlayerStatItem(player.mo.FindInventory("PlayerStatItem"));
				if (MiscItem2) MiscItem2.HPRegenBoostTimer += randompick(9,10,10,11,11,12,13);

				A_StartSound("Dinah/eatapple",CHAN_VOICE);
				A_StartSound("Dinah/eatapple",101,CHANF_DEFAULT,1.0,ATTN_NONE,frandom(0.90,1.10));
				A_SetBlend("f1 ff f1",0.25,10);
				Console.Printf("\c[red]A Golden gala apple! \c[green]+%d HP! \c[gold]+%d Maximum HP!", inc2, inc);
				invoker.A_FadeOut(1.0,FTF_REMOVE);
			}
			Fail;
	}
}

class PlatinumApple : CustomInventoryExt
{
	default
	{
		//$Category RPArtifacts
		Inventory.Icon "GAPLA0";
		Inventory.PickupMessage "";
		Inventory.PickupSound "";
		Tag "Golden Apple: Gives +5 Maximum HP";
		+COUNTITEM
		+DONTGIB
	}
	States
	{
		Spawn:
			PAPL A -1;
			Stop;
		Pickup:
			TNT1 A 0
			{
				int temp1 = player.mo.health;
				int temp2 = player.mo.CountInv("PlayerMaxHP");
				int temp3 = temp2 * 3.0;
				int inc = 5;
				int inc2 = (inc * frandompick(2,2.5,3));
				
				temp2 += inc;
				temp1 += inc2;
				temp3 = temp2 * 3.0;
				if (temp1 > temp3) temp1 = temp3;
				player.mo.stamina += inc;
				player.mo.health = player.health = temp1;
				player.mo.A_SetInventory("PlayerMaxHP",temp2);
				let MiscItem = PlayerDashJump(player.mo.FindInventory("PlayerDashJump"));
				if (MiscItem) MiscItem.ExtraDashCharge += randompick(2,2,2,3,3);
				let MiscItem2 = PlayerStatItem(player.mo.FindInventory("PlayerStatItem"));
				if (MiscItem2) MiscItem2.HPRegenBoostTimer += (randompick(9,10,10,11,11,12,13) * 2.5);

				A_StartSound("Dinah/eatapple",CHAN_VOICE);
				A_StartSound("Dinah/eatapple",101,CHANF_DEFAULT,1.0,ATTN_NONE,frandom(0.90,1.10));
				A_StartSound("Dinah/eatapple",102,CHANF_DEFAULT,1.0,ATTN_NONE,frandom(0.825,1.175));
				A_StartSound("Dinah/eatapple",103,CHANF_DEFAULT,1.0,ATTN_NONE,frandom(0.75,1.25));
				A_SetBlend("f1 ff f1",0.625,25);
				Console.Printf("\c[red]A Platinum gala apple! \c[green]+%d HP! \c[gold]+%d Maximum HP!", inc2, inc);
				invoker.A_FadeOut(1.0,FTF_REMOVE);
			}
			Fail;
	}
}

class CupOfTea : CustomInventoryExt
{
	default
	{
		+DONTGIB
		+COUNTITEM
		+INVENTORY.AUTOACTIVATE
		+INVENTORY.ALWAYSPICKUP
		//+INVENTORY.FANCYPICKUPSOUND
		Inventory.PickupMessage "";
		Inventory.PickupSound "";
		Inventory.Icon "TCUPA0";
		Tag "Cup of Tea";
	}
	states
	{
		Spawn:
			TCUP A 0 NoDelay
			{
			}
		Idle:
			TCUP BC 5 Bright
			{
				A_SetTics(random(3,5));
			}
			loop;
		Pickup:
			TNT1 A 0
			{
				int temp1 = player.mo.health;
				int temp4 = player.mo.CountInv("PlayerMaxHP");
				int temp2 = (temp4 * 3.0);

				int temp3 = temp4;
				temp3 *= frandompick(0.015,0.0175,0.0175,0.02,0.02,0.02,0.02,0.02,0.02,0.0225,0.0225,0.025);
				if (temp3 < 1) temp3 = 1;
					
				temp1 += temp3;
				if (temp1 > temp2) temp1 = temp2;
				player.mo.health = player.health = temp1;
				let MiscItem = PlayerStatItem(player.mo.FindInventory("PlayerStatItem"));
				if (MiscItem) MiscItem.HPRegenBoostTimer += randompick(1,1,1,2);

				A_StartSound("Tea/Sipping",CHAN_VOICE);
				A_SetBlend("f1 ff f1",0.1,random(3,4));
				Console.Printf("\c[red]A Cup of Tea! \c[green]+%d (Over)HP", temp3);
			}
			stop;
	}
}

class FoodPlateFruit : CustomInventoryExt
{
	default
	{
		+DONTGIB
		+COUNTITEM
		+INVENTORY.AUTOACTIVATE
		+INVENTORY.ALWAYSPICKUP
		//+INVENTORY.FANCYPICKUPSOUND
		Inventory.PickupMessage "";
		Inventory.PickupSound "";
		Inventory.Icon "FOODB0";
		Tag "Food Plate (Fruit)";
	}
	States
	{
		Spawn:
			FOOD B -1;
			Stop;
		Pickup:
			TNT1 A 0
			{
				int temp1 = player.mo.health;
				int temp4 = player.mo.CountInv("PlayerMaxHP");
				int temp2 = (temp4 * 3.0);

				int temp3 = temp4;
				temp3 *= 0.10;
					
				temp1 += temp3;
				if (temp1 > temp2) temp1 = temp2;
				player.mo.health = player.health = temp1;
				let MiscItem = PlayerStatItem(player.mo.FindInventory("PlayerStatItem"));
				if (MiscItem) MiscItem.HPRegenBoostTimer += randompick(9,10,10,11,11,12,13);

				A_StartSound("Dinah/eat",CHAN_VOICE);
				A_SetBlend("f1 ff f1",0.1,random(4,6));
				Console.Printf("\c[red]Food Plate (Fruit)! \c[green]+%d (Over)HP", temp3);
				//invoker.A_FadeOut(1.0,FTF_REMOVE);
			}
			stop;
	}
}

class PigRoastDish : CustomInventoryExt
{
	default
	{
		+COUNTITEM
		+DONTGIB
		+INVENTORY.AUTOACTIVATE
		+INVENTORY.ALWAYSPICKUP
		//+INVENTORY.FANCYPICKUPSOUND
		Inventory.PickupMessage "";
		Inventory.PickupSound "";
		Inventory.Icon "FOODA0";
		Tag "Food Plate (Roasted Pig)";
	}
	States
	{
		Spawn:
			FOOD A 0 NoDelay
			{
				if (random(1,16) == 1) { invoker.A_SpawnItemEx("PigRoastDishExtra",0.0,0.0,0.0,frandompick(-2.5,-1.25,0.25,0.25,1.25,2.5),frandompick(-2.5,-1.25,0.25,0.25,1.25,2.5),frandompick(-2.5,-1.25,0.25,0.25,1.25,2.5),SXF_NOCHECKPOSITION); }
				invoker.A_SpawnItemEx("PigRoastDishExtra",0.0,0.0,0.0,frandompick(-2.5,-1.25,0.25,0.25,1.25,2.5),frandompick(-2.5,-1.25,0.25,0.25,1.25,2.5),frandompick(-2.5,-1.25,0.25,0.25,1.25,2.5),SXF_NOCHECKPOSITION);
			}
		Idle:
			FOOD A -1 Bright;
			Loop;
		Pickup:
			TNT1 A 0
			{
				int temp1 = player.mo.health;
				int temp4 = player.mo.CountInv("PlayerMaxHP");
				int temp2 = (temp4 * 3.0);

				int temp3 = temp4;
				temp3 *= 0.50;
					
				temp1 += temp3;
				if (temp1 > temp2) temp1 = temp2;
				player.mo.health = player.health = temp1;
				let MiscItem = PlayerStatItem(player.mo.FindInventory("PlayerStatItem"));
				if (MiscItem) MiscItem.HPRegenBoostTimer += random(45,65);

				A_StartSound("Dinah/eat",CHAN_VOICE);
				A_SetBlend("f1 ff f1",0.1,random(4,6));
				player.mo.A_GiveInventory("PowerRoastBuff");
				Console.Printf("\c[red]Ate a dish of Roasted Pig! \c[green]+%d (Over)HP", temp3);
				//invoker.A_FadeOut(1.0,FTF_REMOVE);
			}
			stop;
	}
}

class GourmetMeal : CustomInventoryExt
{
	default
	{
		+COUNTITEM
		+DONTGIB
		+INVENTORY.AUTOACTIVATE
		+INVENTORY.ALWAYSPICKUP
		//+INVENTORY.FANCYPICKUPSOUND
		Inventory.PickupMessage "";
		Inventory.PickupSound "";
		Inventory.Icon "FOODY0";
		Tag "Food Plate (GourmetMeal)";
	}
	States
	{
		Spawn:
			FOOD Z 0 NoDelay
			{
			}
		Idle:
			FOOD Y -1 Bright;
			Loop;
		Pickup:
			TNT1 A 0
			{
				int temp1 = player.mo.health;
				int temp4 = player.mo.CountInv("PlayerMaxHP");
				int temp2 = (temp4 * 3.0);

				int temp3 = temp4;
				temp3 *= 2.00;
					
				temp1 += temp3;
				if (temp1 > temp2) temp1 = temp2;
				player.mo.health = player.health = temp1;
				let MiscItem = PlayerStatItem(player.mo.FindInventory("PlayerStatItem"));
				if (MiscItem) MiscItem.HPRegenBoostTimer += random(225,325);

				A_StartSound("Dinah/eat",CHAN_VOICE);
				A_SetBlend("f1 ff f1",0.1,random(10,15));
				player.mo.A_GiveInventory("PowerMealBuff");
				player.mo.A_GiveInventory("PowerMealBuff2");
				Console.Printf("\c[red]Ate a massive Gourmet Meal! \c[green]+%d (Over)HP", temp3);
				//invoker.A_FadeOut(1.0,FTF_REMOVE);
			}
			stop;
	}
}

class PigRoastDishExtra : PigRoastDish
{
	States
	{
		Spawn:
			FOOD A -1 Bright;
			Loop;
	}
}

class BerserkNew : CustomInventory replaces Berserk
{
	default
	{
		+COUNTITEM
		+DONTGIB
		+INVENTORY.ALWAYSPICKUP
		+INVENTORY.ADDITIVETIME
		Inventory.PickupMessage "";
		Inventory.PickupSound "";
	}
	States
	{
		Spawn:
			PSTR A -1;
			Stop;
		Pickup:
			TNT1 A 0
			{
				int temp1 = player.mo.health;
				int prevtemp1 = temp1;
				int temp4 = player.mo.CountInv("PlayerMaxHP");
				int temp2 = (temp4 * 1.25);
				int perc = 125;

				int temp3 = temp4;
				temp3 *= 1.00;
				
				if (temp1 < temp2)
				{
					temp1 += temp3;
					if (temp1 > temp2) temp1 = temp2;
					player.mo.health = player.health = temp1;
				}

				A_StartSound("getberserkpack",CHAN_BODY);
				A_StartSound("Dinah/Gotcha",CHAN_VOICE);
				A_SetBlend("f0 f0 f0",0.2,random(8,12));
				player.mo.A_GiveInventory("PowerStrengthDD"); // PowerStrength
				if (prevtemp1 < temp2) Console.Printf("\c[red]Berserk! All Melee Attacks \c[purple]x10\c[red] Damage! \c[green]HP restored to %d%% of max!", perc);
													else Console.Printf("\c[red]Berserk! All Melee Attacks \c[purple]x10\c[red] Damage!");
			}
			Stop;
	}
}

// A more "artifact" style version of the Berserk Pack [for Heretic/Hexen mode, etc]
class BerserkSphere : BerserkNew
{
	default
	{
		+FLOATBOB
		+COUNTITEM
		+DONTGIB
		+INVENTORY.AUTOACTIVATE
		+INVENTORY.ALWAYSPICKUP
		+INVENTORY.ADDITIVETIME
		Inventory.PickupMessage "";
		Inventory.PickupSound "";
	}
	States
	{
		Spawn:
			BERS ABCDEFGH 3 Bright;
			loop;
		Pickup:
			TNT1 A 0 
			{
				int temp1 = player.mo.health;
				int prevtemp1 = temp1;
				int temp4 = player.mo.CountInv("PlayerMaxHP");
				int temp2 = (temp4 * 1.25);
				int perc = 125;

				int temp3 = temp4;
				temp3 *= 1.00;
				
				if (temp1 < temp2)
				{
					temp1 += temp3;
					if (temp1 > temp2) temp1 = temp2;
					player.mo.health = player.health = temp1;
				}

				A_StartSound("getberserkpack",CHAN_BODY);
				A_StartSound("Dinah/Gotcha",CHAN_VOICE);
				A_SetBlend("f0 f0 f0",0.2,random(8,12));
				player.mo.A_GiveInventory("PowerStrengthDD"); // PowerStrength
				if (prevtemp1 < temp2) Console.Printf("\c[red]Berserk Sphere! All Melee Attacks \c[purple]x10\c[red] Damage! \c[green]HP restored to %d%% of max!", perc);
													else Console.Printf("\c[red]Berserk Sphere! All Melee Attacks \c[purple]x10\c[red] Damage!");
			}
			Stop;
	}
}

//Goblet
class AppleWine : CustomInventoryExt
{
	default
	{
		//$Category RPArtifacts
		+INVENTORY.INVBAR
		+INVENTORY.HUBPOWER
		+INVENTORY.PERSISTENTPOWER
		+INVENTORY.KEEPDEPLETED
		+DONTGIB
		+COUNTITEM
		+FLOATBOB
		Inventory.PickupSound "Dinah/giggle";
		Inventory.Amount 1;
		Inventory.MaxAmount 16; // 8
		Inventory.InterHubAmount 16; // 8
		Inventory.PickupMessage "Sweet apple wine! (Drink for Health and Brief buff)";
		Inventory.Icon "GOBLI0";
		Tag "Apple Wine Goblet: Heals 18-22% Health and Gives Defense Buff up to 4 tiers. Cannot be drank when buff is at max.";
	}

	States
	{
		Spawn:
			GOBL ABC 6;
			Loop;
		Use:
			TNT1 A 0 
			{
				A_UseAppleWine();
			}
			fail;
	}
}

//Cherry Bomb
class CherryBombPickup : CustomInventoryExt replaces RocketAmmo
{
	default
	{
		//$Category RPFireworks
		Inventory.Amount 1;
		Inventory.MaxAmount 24; // 12
		Inventory.InterHubAmount 24; // 12
		Inventory.PickupSound "Dinah/giggle";
		Inventory.PickupMessage "A Cherry Bomb!";
		Inventory.Icon "CBOMI0";
		Tag "Cherry Bomb: Thrown at Enemies and explodes. Berserk effects its' arc/distance and impact damage. Can deal self-damage via AOE.";
		Scale 0.8;
		+INVENTORY.INVBAR
		+INVENTORY.HUBPOWER
		+INVENTORY.PERSISTENTPOWER
		+INVENTORY.KEEPDEPLETED
		+FLOATBOB
		+DONTGIB
	}

	States
	{
		Spawn:
			CBOP A -1;
			Stop;
		Use:
			TNT1 A 0 
			{
				if (CountInv("PowerStrength",AAPTR_PLAYER1) || CountInv("PowerStrengthDD",AAPTR_PLAYER1))
				{
					A_ThrowGrenade("CherryBombShotBerserk",-2,(random(14,18) * 2.5),(frandom(2.75,3.25) * 1.75),0);
				}
				else
				{
					A_ThrowGrenade("CherryBombShot",-2,random(14,18),frandom(2.75,3.25),0);
				}
			}
			Stop;
	} 
}

class InvulnerabilitySphere2 : CustomInventoryExt replaces InvulnerabilitySphere
{
	default
	{
		+FLOATBOB
		+DONTGIB
		+COUNTITEM
		+INVENTORY.AUTOACTIVATE
		+INVENTORY.ALWAYSPICKUP
		+INVENTORY.BIGPOWERUP
		+INVENTORY.ADDITIVETIME
		Inventory.PickupMessage "\Picked up the Invulnerability Sphere!";
		Inventory.PickupSound "powerups/invuln";
	}
	States
	{
		Spawn:
			PINV ABCDCB 6 Bright;
			Loop;
		Pickup:
			TNT1 A 0
			{
				A_GiveInventory("PowerInvulnDD");
			}
			Stop;
	}
}

class RadSuit2 : RadSuit replaces RadSuit
{
	default
	{
		Height 46;
		+INVENTORY.AUTOACTIVATE
		+INVENTORY.ALWAYSPICKUP
		+INVENTORY.ADDITIVETIME
		Inventory.MaxAmount 0;
		Inventory.PickupMessage "$GOTSUIT"; // "Radiation Shielding Suit"
	}

	States
	{
		Spawn:
			SUIT A -1 Bright;
			Stop;
	}
}

class TimePotion : CustomInventoryExt
{
	default
	{
		//$Category RPArtifacts
		Inventory.PickupSound "Dinah/Gotcha";
		Inventory.PickupMessage "\c[gold]'Essence of Time?' Hmm...";
		Tag "Essence of Time: Freezes time for 8-10 seconds per use. Stackable.";
		Inventory.Icon "TIMPI0";
		+FLOATBOB
		+DONTGIB
		+INVENTORY.INVBAR
		+INVENTORY.HUBPOWER
		+INVENTORY.PERSISTENTPOWER
		+INVENTORY.KEEPDEPLETED
		Inventory.PickupFlash "PickupFlash";
		Inventory.Amount 1;
		Inventory.MaxAmount 3;
	}
	States
	{
		Spawn:
			TIMP AB 6;
			Loop;
		Use:
			TNT1 A 0
			{
				A_SetInventory("TimePotionTimeFreezer",1,AAPTR_PLAYER1);
				A_GiveInventory("TimeFreezeTimer",randompick(280,315,350),AAPTR_PLAYER1);
				A_TakeInventory("TimePotion",1,AAPTR_PLAYER1);
			}
			Fail;
	}
}