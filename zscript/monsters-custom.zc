//**********************
//* Annoying Lost Soul *
//**********************
class LostSoulAnnoying : LostSoulNew
{
	default
	{
		Tag "Annoying Lost Soul";
		Health 125;
		Damage 4;
		Speed 10;
		Meleerange 80;
		Mass 75;
		ReactionTime 4;
		Painchance 160;
		DamageFactor 0.75;
		DamageFactor "Fire", 0.334;
		Painchance "Fire", 56;
		DamageFactor "Ice", 3.001;
		Painchance "Ice", 256;
		DamageFactor "Suck", 15;
		Painchance "Suck", 256;
		DamageFactor "Bonk", 1.25;
		Painchance "Bonk", 200;
		DamageFactor "Cricket", 2.5;
		Painchance "Cricket", 256;
		DamageFactor "Chop", 5;
		Painchance "Chop", 256;
		DamageFactor "Lead", 0.5;
		Painchance "Lead", 80;
		DamageFactor "Dust", 0.25;
		Painchance "Dust", 40;
		DamageFactor "CherryBomb", 0.25;
		Painchance "CherryBomb", 40;
		DamageFactor "BRocket", 0.5;
		Painchance "BRocket", 80;
		DamageFactor "Spinner", 1.25;
		Painchance "Spinner", 200;
		DamageFactor "Popper", 2.5;
		Painchance "Popper", 256;
		AttackSound "skull/melee2";
		Obituary "%o was spooked by an annoying lost soul.";
		+MISSILEEVENMORE;
		-MISSILEMORE;
	}

	states
	{
		Spawn:
			SKUL AB 10 BRIGHT A_Look();
			goto Spawn;
		See:
			SKUL AABB 3 BRIGHT 
			{
				if (random(1,256) <= 3) { A_FastChase(); } else { A_Chase(); }
			}
			Loop;
		Missile:
			SKUL C 8 BRIGHT A_FaceTarget();
			SKUL D 4 BRIGHT A_SkullAttack(30);
			SKUL CCDD 2 BRIGHT;
			Goto Missile+2;
		Pain:
			SKUL E 3 BRIGHT;
			SKUL E 3 BRIGHT A_Pain;
			Goto See;
		Death:
			SKUL F 0 BRIGHT
			{
				A_Explode(64,64,0,0,(random(1,4)*8));
			}
			SKUL F 6 BRIGHT;
			SKUL G 6 BRIGHT A_Scream;
			SKUL H 6 BRIGHT;
			SKUL I 6 BRIGHT A_NoBlocking;
			SKUL J 6;
			SKUL K 6;
			Stop;
		}
}

//*************
//* Diabloist *
//*************
class Diabloist : EECreature
{
	default
	{
		//$Angled
		//$Color 12
		Tag "Diabloist";
		Health 1400;
		Radius 20;
		Height 56;
		Mass 750;
		Speed 22.5;
		BloodColor "08 08 08";
		Painchance 10;
		Painchance "Stomp", 100; // Archviles are hyper suspectible to Stomp attacks [10x pain chance]
		Painchance "Trample", 100; // Archviles are hyper suspectible to Stomp attacks [10x pain chance]
		Painchance "Fist", 100; // Archvile are super suspectible to Punch attacks [10x pain chance]
		Painchance "Kick", 255; // Archviles are hyper suspectible to Kick attack [50x pain chance]
		Painchance "Gauntlets", 100; // Archvile are super suspectible to Punch attacks [10x pain chance]
		Painchance "Chainsaw", 100; // Archvile are super suspectible to Chainsaw attacks [10x pain chance]
		Painchance "Melee", 100; // Archvile are super suspectible to Melee attacks [10x pain chance]
		PainChance "Fire", 0;
		PainChance "Ice", 35;
		DamageFactor 0.875;
		RadiusDamageFactor 0.875;
		DamageFactor "Explosive", 0.875;
		Damagefactor "Stomp", 5;
		Damagefactor "Trample", 5;
		DamageFactor "Fist", 5;
		DamageFactor "Kick", 5;
		DamageFactor "Gauntlets", 5;
		DamageFactor "PoisonNeedle", 5;
		DamageFactor "Sceptre", 5;
		DamageFactor "Chainsaw", 5;
		DamageFactor "Melee", 5;
		DamageFactor "Crush", 0.8; // 6.4
		DamageFactor "Fire", 0.02;
		DamageFactor "Ice", 1.66;
		DamageFactor "Holy", 2; // Demons = +200% Holy Damage
		Painchance "Holy", 30; // Demons = +300% Pain Chance
		DamageFactor "Magic", 0.48;
		PainChance "Magic", 4;
		Species "Diabloist";
		MONSTER;
		+QUICKTORETALIATE;
		+FLOORCLIP;
		+NOTARGET;
		+NODROPOFF;
		+NORADIUSDMG;
		+MISSILEMORE;
		+DONTHARMSPECIES;
		+DONTHARMCLASS;
		+AVOIDMELEE;
		SeeSound "monster/diasit";
		PainSound "monster/diapai";
		DeathSound "monster/diadth";
		ActiveSound "monster/diaact";
		Obituary "%o got was set ablaze by a Diabloist.";
	}

	States 
	{
		Missile:
			TNT1 A 0;
			DIAB G 0 A_Jump(43, "GravityAttackCheck");
		// Archvile-Type Fire Spell
		Missile1:
			DIAB G 0 BRIGHT 
			{
				if (random(1,2) <= 1)
				{
					if (random(1,3) <= 1) { return resolvestate("Missile2"); }
					else if (random(1,2) <= 1) { return resolvestate("Missile3"); }
					else { return resolvestate("Missile4"); }
					return resolvestate(null);
				}
				return resolvestate(null);
			}
			DIAB G 0 BRIGHT A_FaceTarget();
			DIAB GH 3 Bright 
			{
				A_FaceTarget();
			}
			DIAB I 3 BRIGHT 
			{
				A_VileTarget("DFire");
			}
			DIAB HGHIHGHIHGHIGH 3 BRIGHT 
			{
				A_FaceTarget();
			}
			DIAB I 3 BRIGHT
			{
				A_FaceTarget();
				A_VileAttack("vile/stop",40,140,140,1.5,"Fire",VAF_DMGTYPEAPPLYTODIRECT);
			}
			DIAB G 0 BRIGHT A_MonsterRefire(8,"See");
			DIAB P 0 BRIGHT A_Jump(48,"Missile1");
			DIAB G 0 BRIGHT A_Jump(64,"Missile3");
			Goto See;

		// Rapid Fire Shots
		Missile2:
			DIAB NOPNOPNOPNOPNOP 5 BRIGHT
			{
				A_FaceTarget();
				A_SpawnProjectile("DFlare",40,0,random(-4,4));
			}
			DIAB G 0 BRIGHT A_MonsterRefire(8,"See");
			DIAB P 0 BRIGHT A_Jump(48,"Missile2");
			DIAB P 0 BRIGHT A_Jump(32,"Missile3");
			DIAB P 0 BRIGHT A_Jump(64,"Missile4");
			Goto See;

		// Firestorm-Equse Attack
		Missile3:
			DIAB GHIJKLMN 5 BRIGHT 
			{
				A_FaceTarget();
			}
			DIAB O 5 BRIGHT 
			{
				A_StartSound("weapons/firbfi");
				A_FaceTarget();
				A_SpawnProjectile("DMissile",32,0,0);
			}
			DIAB P 5 BRIGHT;
			DIAB G 0 BRIGHT A_MonsterRefire(8,"See");
			DIAB P 0 BRIGHT A_Jump(48,"Missile3");
			DIAB P 0 BRIGHT A_Jump(64,"Missile4");
			Goto See;

		// Twin Flame Snakes
		Missile4:
			DIAB [\ 8 BRIGHT // "[\"
			{
				A_FaceTarget();
			}
			DIAB ] 8 BRIGHT
			{
				A_FaceTarget();
				A_SpawnProjectile("DTracer",0,-40,0);
				A_SpawnProjectile("DTracer",0,40,0);
			}
			DIAB G 0 BRIGHT A_MonsterRefire(8,"See");
			DIAB P 0 BRIGHT A_Jump(48,"Missile4");
			DIAB G 0 BRIGHT A_Jump(4,"Missile1");
			Goto See;

		GravityAttackCheck:
			DIAB G 0 BRIGHT A_DiabloistGravityCheck();
		Missile5:
			DIAG A 0 BRIGHT A_FaceTarget();
			DIAG A 3 BRIGHT
			{
				A_DiabloistSpawnGravityNodes();
				A_FaceTarget();
			}
			DIAG BCBABCBA 3 Bright // 24/16/8
			{
				A_DiabloistGravityPulse(3.0);
				A_FaceTarget();
			}
			DIAG BCBABCBA 3 Bright // 24/16/8
			{
				A_DiabloistGravityPulse(5.25);
				A_FaceTarget();
			}
			DIAG BCBA 4 Bright // 16/12/8/4
			{
				A_DiabloistGravityPulse(9.75);
				A_FaceTarget();
			}
			DIAG BCBA 4 Bright // 16/12/8/4
			{
				A_DiabloistGravityPulse(12.00);
				A_FaceTarget();
			}
			DIAG DEF 4 Bright // 9/6/3
			{
				A_FaceTarget();
			}
			DIAG G 4 BRIGHT
			{
				A_DiabloistGravity(user_gravitytype);
			}
			DIAG FE 3 Bright // 9/6/3
			{
				A_FaceTarget();
			}
			DIAG A 0 BRIGHT A_Jump(1,"Missile");
			Goto See;

		Spawn:
			DIAB A 0 NoDelay;
			DIAB AB 10 A_Look();
			goto Spawn+1;
		See:
			DIAB A 0 
			{
				if (health <= ((SpawnHealth() + Stamina) * 0.375)) 
				{
					if (health <= ((SpawnHealth() + Stamina) * 0.125)) 
					{
						A_SetInventory("Speed18PercentBonus",1);
						A_SetInventory("Speed12PercentBonus",0);
					}
					else
					{
						A_SetInventory("Speed12PercentBonus",1);
						A_SetInventory("Speed18PercentBonus",0);
					}
				}
				else
				{
					A_SetInventory("Speed18PercentBonus",0);
					A_SetInventory("Speed12PercentBonus",0);
				}
			}
			DIAB AABBCCDDEEFF 2
			{
				if (random (1,256) <= 40) // 160 
				{
					A_Chase(null, "Missile", CHF_FASTCHASE | CHF_RESURRECT);
				}
				else
				{
					A_Chase(null ,"Missile", CHF_RESURRECT); 
				} 
			}
			loop;

		Heal:
			DIAB [ 10 BRIGHT // "["
			{
				A_DiabHealProj(-24.0,-40.0);
			}
			DIAB \ 10 BRIGHT // "\"
			{
				A_DiabHealProj(0.0,0.0);
			}
			DIAB ] 10 BRIGHT // "]"
			{
				A_DiabHealProj(24.0,40.0);
			}
			Goto See;

		Pain:
			DIAB Q 5;
			DIAB Q 5 A_Pain();
			DIAB G 0 A_Jump(56, "GravityAttackCheck");
			DIAB G 0 A_Jump(60, "Missile1");
			Goto See;
		Pain.Fist:
			DIAB Q 5;
			DIAB Q 5 A_Pain();
			DIAB QQ 5;
			DIAB G 0 A_Jump(56, "GravityAttackCheck");
			DIAB G 0 A_Jump(60, "Missile1");
			Goto See;
		Pain.Kick:
			DIAB Q 5;
			DIAB Q 5 A_Pain();
			DIAB QQQQ 5;
			DIAB G 0 A_Jump(56, "GravityAttackCheck");
			DIAB G 0 A_Jump(60, "Missile1");
			Goto See;
		Pain.Ice:
			DIAB Q 5;
			DIAB Q 5 A_Pain();
			DIAB Q 10;
			DIAB Q 0 A_Jump(128, 4);
			DIAB Q 5;
			DIAB Q 0 A_Jump(128, 2);
			DIAB Q 5;
			DIAB Q 0;
			Goto See;
		Death:
			DIAB Q 7;
			DIAB R 7 A_Scream;
			DIAB S 7 A_NoBlocking;
			DIAB TUVW 7;
			DIAB XY 5;
			DIAB Z -1;
			Stop;
		Ice:
			DIAB Q 5 A_GenericFreezeDeath();
			DIAB Q 1 A_FreezeDeathChunks();
			wait;
		/*
		Raise:
			DIAB Y 5 
			DIAB X 5
			DIAB WVUTSRQ 7
			goto See;
		*/
	}
}
