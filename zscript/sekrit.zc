class mewantsacrifice : EECreature
{
	int facetype;
	int phasetimer;
	default
	{
		Tag "Tchernobog [spritual essence]";
		Radius 1; // 20;
		Height 1; // 64;
		Speed 0;
		Alpha 0.67;
		Scale 1.0;
		RenderStyle "Add";
		SeeSound "Omni/Laugh";
		PainSound "Omni/Pain";
		DeathSound "Omni/Death";
		ActiveSound "Omni/Search";
		+BOSS;
		+DROPOFF;
		+FLOORCLIP;
		+MISSILEMORE;
		+QUICKTORETALIATE;
		-SHOOTABLE;
		-NORADIUSDMG;
		+INVULNERABLE;
		+NODAMAGE;
		+PAINLESS;
		+NOCLIP;
		+NOINFIGHTING;
		+NOTARGET;
		MaxTargetRange 1280;
		Species "EvilDinah";
		+THRUSPECIES;
		+MTHRUSPECIES;
		+DONTHARMSPECIES;
	}
	
	override void Tick()
	{
		super.Tick();
		int maxage = 69;
		if (master)
		{
			EvilDinah EvDin;
			EvDin = EvilDinah(master);
			if (EvDin && EvDin.TID == 447)
			{
				double tradius = EvDin.radius;
				double theight = (EvDin.height * 0.5);
				A_Warp(AAPTR_MASTER,0,0,1,0,WARPF_NOCHECKPOSITION);
				//Console.Printf("PikeGlowAttachED - A_Warp [attaches]");
				if (maxage > 0)
				{
					phasetimer = GetAge() % maxage;
					if (phasetimer == 0) alpha = 0.67;
					if (phasetimer == 1 || phasetimer == (maxage - 1)) { alpha = 0.67; scale.x = 1.00; scale.y = 1.00; }
					if (phasetimer == 2 || phasetimer == (maxage - 2)) { alpha = 0.66; scale.x = 0.99; scale.y = 0.99; }
					if (phasetimer == 3 || phasetimer == (maxage - 3)) { alpha = 0.65; scale.x = 0.98; scale.y = 0.98; }
					if (phasetimer == 4 || phasetimer == (maxage - 4)) { alpha = 0.64; scale.x = 0.97; scale.y = 0.97; }
					if (phasetimer == 5 || phasetimer == (maxage - 5)) { alpha = 0.63; scale.x = 0.96; scale.y = 0.96; }
					if (phasetimer == 6 || phasetimer == (maxage - 6)) { alpha = 0.62; scale.x = 0.95; scale.y = 0.95; }
					if (phasetimer == 7 || phasetimer == (maxage - 7)) { alpha = 0.61; scale.x = 0.94; scale.y = 0.94; }
					if (phasetimer == 8 || phasetimer == (maxage - 8)) { alpha = 0.60; scale.x = 0.93; scale.y = 0.93; }
					if (phasetimer == 9 || phasetimer == (maxage - 9)) { alpha = 0.59; scale.x = 0.92; scale.y = 0.92; }
					if (phasetimer == 10 || phasetimer == (maxage - 10)) { alpha = 0.58; scale.x = 0.91; scale.y = 0.91; }
					if (phasetimer == 11 || phasetimer == (maxage - 11)) { alpha = 0.57; scale.x = 0.90; scale.y = 0.90; }
					if (phasetimer == 12 || phasetimer == (maxage - 12)) { alpha = 0.56; scale.x = 0.89; scale.y = 0.89; }
					if (phasetimer == 13 || phasetimer == (maxage - 13)) { alpha = 0.55; scale.x = 0.88; scale.y = 0.88; }
					if (phasetimer == 14 || phasetimer == (maxage - 14)) { alpha = 0.54; scale.x = 0.87; scale.y = 0.87; }
					if (phasetimer == 15 || phasetimer == (maxage - 15)) { alpha = 0.53; scale.x = 0.86; scale.y = 0.86; }
					if (phasetimer == 16 || phasetimer == (maxage - 16)) { alpha = 0.52; scale.x = 0.85; scale.y = 0.85; }
					if (phasetimer == 17 || phasetimer == (maxage - 17)) { alpha = 0.51; scale.x = 0.84; scale.y = 0.84; }
					if (phasetimer == 18 || phasetimer == (maxage - 18)) { alpha = 0.50; scale.x = 0.83; scale.y = 0.83; }
					if (phasetimer == 19 || phasetimer == (maxage - 19)) { alpha = 0.49; scale.x = 0.82; scale.y = 0.82; }
					if (phasetimer == 20 || phasetimer == (maxage - 20)) { alpha = 0.48; scale.x = 0.81; scale.y = 0.81; }
					if (phasetimer == 21 || phasetimer == (maxage - 21)) { alpha = 0.47; scale.x = 0.80; scale.y = 0.80; }
					if (phasetimer == 22 || phasetimer == (maxage - 22)) { alpha = 0.46; scale.x = 0.79; scale.y = 0.79; }
					if (phasetimer == 23 || phasetimer == (maxage - 23)) { alpha = 0.45; scale.x = 0.78; scale.y = 0.78; }
					if (phasetimer == 24 || phasetimer == (maxage - 24)) { alpha = 0.44; scale.x = 0.77; scale.y = 0.77; }
					if (phasetimer == 25 || phasetimer == (maxage - 25)) { alpha = 0.43; scale.x = 0.76; scale.y = 0.76; }
					if (phasetimer == 26 || phasetimer == (maxage - 26)) { alpha = 0.42; scale.x = 0.75; scale.y = 0.75; }
					if (phasetimer == 27 || phasetimer == (maxage - 27)) { alpha = 0.41; scale.x = 0.74; scale.y = 0.74; }
					if (phasetimer == 28 || phasetimer == (maxage - 28)) { alpha = 0.40; scale.x = 0.73; scale.y = 0.73; }
					if (phasetimer == 29 || phasetimer == (maxage - 29)) { alpha = 0.39; scale.x = 0.72; scale.y = 0.72; }
					if (phasetimer == 30 || phasetimer == (maxage - 30)) { alpha = 0.38; scale.x = 0.71; scale.y = 0.71; }
					if (phasetimer == 31 || phasetimer == (maxage - 31)) { alpha = 0.37; scale.x = 0.70; scale.y = 0.70; }
					if (phasetimer == 32 || phasetimer == (maxage - 32)) { alpha = 0.36; scale.x = 0.69; scale.y = 0.69; }
					if (phasetimer == 33 || phasetimer == (maxage - 33)) { alpha = 0.35; scale.x = 0.68; scale.y = 0.68; }
					if (phasetimer == 34 || phasetimer == (maxage - 34)) { alpha = 0.34; scale.x = 0.67; scale.y = 0.67; }
				}
			}
			else
			{
				//Console.Printf("PikeGlowAttachED - Destroy [ED conditions no longer met]");
				Destroy();
			}
		}
		else
		{
			//Console.Printf("PikeGlowAttachED - Destroy [no target]");
			Destroy();
		}
	}
	
	void A_LOSBurnAtk(int amt)
	{
		if (target && CheckIfTargetInLOS(90.0, JLOSF_DEADNOJUMP, 4096))
		{
			string sacrifice = "PlayerBurner";
			A_GiveToTarget(sacrifice, amt);
		}
	}
	
	void A_LavaBarf()
	{
		string sacrifice = "LavaBarf";
		A_SpawnProjectile(sacrifice,62,-17.0,frandom(-10,10),CMF_AIMDIRECTION,(ACS_NamedExecuteWithResult("SetActivatorTarget", 0, tidtohate)*10)/frandom(20,40));
	}
	
	void A_ChooseFaceType()
	{
		if (facetype <= 5) A_FaceTarget();
		else 
		{
			if (master) A_SetAngle(master.angle); 
						 else A_FaceTarget();
		}
	}
	
	states
	{
		Spawn:
			TCHR A 0 NoDelay;
		See:
			TCHR AAAAABBBBBCCCCC 1
			{
				A_EEChase();
				if (master) A_SetAngle(master.angle);
				Thing_Hate(0,1000,4);
			}
			TCHR DDDDDEEEEEFFFFF 1
			{
				A_EEChase();
				if (master) A_SetAngle(master.angle);
				Thing_Hate(0,1000,4);
			}
			loop;
		Missile:
			TCHR G 3;
			TNT1 A 0
			{
				facetype = random(1,8);
				int type = random(1,255);
				if (type >= 1 && type <= 85)
				{
					return resolvestate("MissileMain");
				}
				if (type >= 86 && type <= 170)
				{
					return resolvestate("MissileDemon");
				}
				if (type >= 171 && type <= 255)
				{
					return resolvestate("MissileBog");
				}
				return resolvestate(null);
			}
			goto See;
		MissileMain:
			TCHR G 5 A_Jump(90,"Maximalion");
			TNT1 A 0 A_LOSBurnAtk(random(1,3));
			TCHR H 3 A_ChooseFaceType();
			TNT1 A 0 A_LOSBurnAtk(random(1,3));
			TCHR I 3 A_ChooseFaceType();
			TNT1 A 0 A_LOSBurnAtk(random(1,3));
			TCHR H 3 A_ChooseFaceType();
			TNT1 A 0 A_LOSBurnAtk(random(1,3));
			TCHR I 3 A_ChooseFaceType();
			TNT1 A 0 A_LOSBurnAtk(random(1,3));
			TCHR J 6
			{
				string sacrifice = "TchernobogMissile";
				string sacrifice2 = "TchernobogMissile2";
				A_SpawnProjectile(sacrifice, 108, -24);
				A_SpawnProjectile(sacrifice2, 108, 24);
			}
			TCHR G 5;
			Goto See;
		Maximalion:
			TCHR G 5;
			TCHR H 4 A_ChooseFaceType();
			TCHR I 4 A_ChooseFaceType();
			TCHR J 0 
			{
				string sacrifice = "TchernobogMaximo";
				A_SpawnProjectile(sacrifice, 108, 0);
			}
			TCHR J 6;
			TCHR G 5;
			Goto See;
		MissileDemon:
			TNT1 A 0;
			TNT1 A 0 A_Jump(128,"MissileDemon2","MissileDemon3");
			TNT1 A 0 A_LOSBurnAtk(random(1,3));
			TCHR H 3 A_ChooseFaceType();
			TNT1 A 0 A_LOSBurnAtk(random(1,3));
			TCHR I 3 A_ChooseFaceType();
			TNT1 A 0 A_LOSBurnAtk(random(1,3));
			TCHR H 3 A_ChooseFaceType();
			TNT1 A 0 A_LOSBurnAtk(random(1,3));
			TCHR I 3 A_ChooseFaceType();
			TNT1 A 0 A_LOSBurnAtk(random(1,3));
			TCHR J 6
			{
				string sacrifice = "TchernobogMissile";
				string sacrifice2 = "TchernobogMissile2";
				A_SpawnProjectile(sacrifice, 116, -24);
				A_SpawnProjectile(sacrifice2, 116, 24);
			}
			TCHR H 5;
			TCHR G 5;
			goto See;
		MissileDemon2:
			TCHR G 5 A_ChooseFaceType();
			TCHR H 4;
			TNT1 A 0
			{
				string sacrifice = "NapalmEnemy";
				A_SpawnProjectile(sacrifice, 148, 48);
				A_SpawnProjectile(sacrifice, 148, -56);
			}
			TCDA H 4 A_ChooseFaceType();
			TCDA G 4;
		MissileDemon3:
			TCHR G 5;
			TCHR H 4;
			TCHR J 4 A_ChooseFaceType();
			TCHR B 0 
			{
				string sacrifice = "TchernobogMaximo";
				A_SpawnProjectile(sacrifice, 116, 0);
			}
			TCHR H 5;
			TCHR G 5;
			Goto See;
			
		MissileBog:
			TNT1 A 0;
			TNT1 A 0 A_Jump(128,"MissileBog5");
			TNT1 A 0 A_Jump(256,"MissileBog1","Missile2","Missile3","Missile4");
		MissileBog1:
			TCHR G 3 A_ChooseFaceType();
			TCHR H 6 A_LavaBarf();
			TCHR G 6 A_ChooseFaceType();
			TCHR H 6 A_LavaBarf();
			TCHR G 6 A_ChooseFaceType();
			TCHR H 6 A_LavaBarf();
			Goto See;
		MissileBog2:
			TCHR G 3 A_ChooseFaceType();
			TCHR H 6 A_LavaBarf();
			TCHR G 6 A_ChooseFaceType();
			TCHR H 6 
			{
				string sacrifice = "NapalmEnemy";
				A_SpawnProjectile(sacrifice,62,-17.0,0);
			}
			TCHR G 6 A_ChooseFaceType();
			TCHR H 6 A_LavaBarf();
			Goto See;
		Missile3:
			TCHR G 3 A_ChooseFaceType();
			TCHR H 6 
			{
				string sacrifice = "NapalmEnemy";
				A_SpawnProjectile(sacrifice,62,-17.0,0);
			}
			TCHR G 6 A_ChooseFaceType();
			TCHR H 6 A_LavaBarf();
			TCHR G 6 A_ChooseFaceType();
			TCHR H 6 A_LavaBarf();
			Goto See;
		Missile4:
			TCHR G 3 A_ChooseFaceType();
			TCHR H 6 A_LavaBarf();
			TCHR G 6 A_ChooseFaceType();
			TCHR H 6 A_LavaBarf();
			TCHR G 6 A_ChooseFaceType();
			TCHR H 6 
			{
				string sacrifice = "NapalmEnemy";
				A_SpawnProjectile(sacrifice,62,-17.0,0);
			}
			Goto See;
		MissileBog5:
			TCHR G 6;
			TCHR H 3 A_ChooseFaceType();
			TCHR J 1 
			{
				string sacrifice = "TchernobogMissile2";
				A_SpawnProjectile(sacrifice, 92, 0);
			}
			Goto See;

		Pain:
			//TNT1 A 0 A_JumpIfHealthLower(2400, "PainX");
			TCHR L 11 
			{
				//A_EEPain();
				int rand = random(1,7);
				string snd = "OPain";
				snd.AppendFormat("%d", rand);
				A_StopSound(124);
				A_StopSound(125);
				A_StopSound(126);
				A_StopSound(127);
				A_StartSound(snd,124,CHANF_DEFAULT,1.0,ATTN_NONE,1.0);
				A_StartSound(snd,125,CHANF_DEFAULT,1.0,ATTN_NONE,1.0);
				A_StartSound(snd,126,CHANF_DEFAULT,1.0,ATTN_NONE,1.0);
				A_StartSound(snd,127,CHANF_DEFAULT,1.0,ATTN_NONE,1.0);
			}
			goto See;
		PainX:
			TCHR L 11 A_StartSound("TchernobogPain4",CHAN_VOICE);
			TNT1 A 0 Radius_Quake(2,18,0,16,0);
			Goto See;
		Death:
			TCHR MM 7 
			{
				A_StopSound(124);
				A_StopSound(125);
				A_StopSound(126);
				A_StopSound(127);
				A_StartSound("OMDIE",124,CHANF_DEFAULT,1.0,ATTN_NONE,1.0);
				A_StartSound("OMDIE",125,CHANF_DEFAULT,1.0,ATTN_NONE,1.0);
				A_StartSound("OMDIE",126,CHANF_DEFAULT,1.0,ATTN_NONE,1.0);
				A_StartSound("OMDIE",127,CHANF_DEFAULT,1.0,ATTN_NONE,1.0);
			}
			TCHR MM 10 A_Quake(6,60,0,800);
			TCHR MMMMMM 1 
			{
				string sacrifice = "Phantasmlauncher";
				A_SpawnItemEx(sacrifice);
			}
			TCHR MMMMMM 1 
			{
				string sacrifice = "TchernobogKaboom";
				A_SpawnItemEx(sacrifice,frandom(0,50),frandom(0,50),frandom(0,150),0,0,1,0,SXF_NOCHECKPOSITION);
			}
			TCHR MM 10 A_Quake(6,60,0,800);
			TCHR MMMMMMMM 4 
			{
				string sacrifice = "TchernobogKaboom";
				A_SpawnItemEx(sacrifice,frandom(0,50),frandom(0,50),frandom(0,150),0,0,1,0,SXF_NOCHECKPOSITION);
			}
			TCHR MM 10 A_Quake(7,60,0,800);
			TCHR MMMMMMMMMM 3 
			{
				string sacrifice = "TchernobogKaboom";
				A_SpawnItemEx(sacrifice,frandom(0,50),frandom(0,50),frandom(0,150),0,0,1,0,SXF_NOCHECKPOSITION);
			}
			TCHR MM 10 A_Quake(8,60,0,800);
			TCHR MMMMMMMMMMMM 1 
			{
				string sacrifice = "TchernobogKaboom";
				A_SpawnItemEx(sacrifice,frandom(0,50),frandom(0,50),frandom(0,150),0,0,1,0,SXF_NOCHECKPOSITION);
			}
			TCHR MM 10 A_Quake(9,30,0,400);
			TCHR MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM 1 
			{
				string sacrifice = "TchernobogKaboom";
				A_SpawnItemEx(sacrifice,frandom(0,50),frandom(0,50),frandom(0,150),0,0,1,0,SXF_NOCHECKPOSITION);
			}
			TCHR NOPQ 7;
			TCHR Q 55 A_BossDeath();
			TCHR RS 8 BRIGHT;
			TNT1 A 0 A_UnsetShootable();
			TCHR TUVTUVTUVTUVTUV 6 BRIGHT;
			TNT1 A 0 A_UnSetSolid();
			TCHR WXY 8;
			TNT1 AAA 2 
			{
				string sacrifice = "Thunder_GeneratorWhite";
				A_SpawnItemEx(sacrifice,frandom(0,50),frandom(0,50));
			}
			TNT1 A 4; //A_GiveToTarget("TchernobogDead", 1);
			TCHR Y 2 A_Fadeout(0.007);
			Wait;
	}
}